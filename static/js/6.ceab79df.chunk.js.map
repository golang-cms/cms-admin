{"version":3,"sources":["admin/moudles/post/components/Post.tsx","admin/moudles/dashboard/components/Dashboard.tsx","hooks/api/useApiResult.ts","hooks/api/post/useGetPosts.ts","hooks/api/post/useDeletePost.ts","admin/moudles/post/components/DeleteDialog.tsx","hooks/api/post/useCreatePost.ts","hooks/api/post/useUpdatePost.ts","hooks/api/group/useGetGroupsByTitle.ts","admin/moudles/post/components/MultiSelectTypeahead.tsx","admin/moudles/post/components/PostDialog.tsx","admin/moudles/Routes.tsx","admin/moudles/common/components/CopyRight.tsx","landing/moudles/login/components/EmailField.tsx","landing/moudles/login/components/PageTitle.tsx","landing/moudles/login/components/PasswordField.tsx","landing/moudles/login/components/RedirectOptions.tsx","landing/moudles/login/components/SigninButton.tsx","landing/moudles/login/Login.tsx","landing/moudles/Main.tsx"],"names":["Action","useStyles","makeStyles","theme","paper","padding","spacing","display","overflow","flexDirection","fixedHeight","height","Dashboard","classes","fixedHeightPaper","clsx","Grid","container","item","xs","md","lg","Paper","className","useApiResult","request","useState","results","setResults","error","setError","requester","useRequest","useEffect","isCancelled","undefined","then","response","a","ok","json","text","catch","err","message","getPosts","updated","process","method","useGetPosts","useMemo","deletePost","id","useDeletePost","DeleteDialog","props","deleteId","setDeleteId","rows","console","log","onClose","Delete","Dialog","open","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","data","title","DialogActions","Button","onClick","color","autoFocus","createPost","post","body","JSON","stringify","useCreatePost","updatePost","useUpdatePost","getGroups","titleSearch","useGetGroupsByTitle","MultiSelectTypeahead","control","setOpen","options","setOptions","inputValue","setInputValue","loading","length","onInputChange","debounce","event","value","render","Autocomplete","multiple","onOpen","field","getOptionSelected","option","getOptionLabel","onChange","_","renderInput","params","TextField","variant","label","type","placeholder","InputProps","endAdornment","Fragment","CircularProgress","size","defaultValue","groups","name","appBar","position","marginLeft","flex","Transition","React","forwardRef","ref","Slide","direction","action","Update","Create","Form","useForm","shouldUnregister","register","handleSubmit","watch","setData","onSubmit","CreatePost","UpdatePost","DialogForm","margin","fullWidth","slug","multiline","content","TopBar","AppBar","Toolbar","IconButton","edge","aria-label","Typography","PostDialog","fullScreen","TransitionComponent","List","ListItem","button","ListItemText","primary","secondary","Divider","root","width","maxHeight","columns","minWidth","PostsTable","handleClickOpen","TableContainer","Table","stickyHeader","TableHead","TableRow","map","column","TableCell","style","TableBody","row","hover","role","tabIndex","get","ActionButtons","AdminBasePath","routesDefinition","path","component","openDelete","setOpenDelete","saved","setSaved","handleClose","Routes","key","exact","Copyright","align","href","Date","getFullYear","Emailfield","required","autoComplete","marginTop","alignItems","avatar","backgroundColor","palette","main","Pagetitle","Avatar","Passwordfield","FormControlLabel","Checkbox","Redirectoptions","Link","submit","Signinbutton","form","Login","noValidate","Main","Container","maxWidth","CssBaseline","Box","mt"],"mappings":"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","file":"static/js/6.ceab79df.chunk.js","sourcesContent":["import {\n  makeStyles,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport _ from \"lodash\";\nimport React from \"react\";\nimport useGetPosts from \"../../../../hooks/api/post/useGetPosts\";\nimport { PostModel } from \"../model/post\";\nimport DeleteDialog from \"./DeleteDialog\";\nimport PostDialog from \"./PostDialog\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n  },\n  container: {\n    maxHeight: 440,\n  },\n});\n\nexport enum Action {\n  Delete,\n  Update,\n  Create,\n}\n\nconst Post = () => {\n  const [open, setOpen] = React.useState(false);\n  const [openDelete, setOpenDelete] = React.useState(false);\n  const [saved, setSaved] = React.useState(false);\n  const [data, setData] = React.useState<PostModel>();\n\n  const handleClickOpen = (action: Action, data?: PostModel) => {\n    switch (action) {\n      case Action.Create:\n      case Action.Update:\n        setOpen(true);\n        break;\n      case Action.Delete:\n        setOpenDelete(true);\n        break;\n    }\n\n    if (data) {\n      setData(data);\n    }\n  };\n\n  const handleClose = (action: Action) => {\n    console.log(\"close dialog\");\n    switch (action) {\n      case Action.Create:\n      case Action.Update:\n        setOpen(false);\n        break;\n      case Action.Delete:\n        setOpenDelete(false);\n        break;\n    }\n    setData(undefined);\n    setSaved(!saved);\n  };\n\n  return (\n    <Grid container spacing={3}>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => handleClickOpen(Action.Create)}\n      >\n        Create\n      </Button>\n      <PostDialog open={open} onClose={handleClose} data={data} />\n      <DeleteDialog open={openDelete} onClose={handleClose} data={data} />\n      <Grid item xs={12}>\n        <PostsTable updated={saved} handleClickOpen={handleClickOpen} />\n      </Grid>\n    </Grid>\n  );\n};\n\nconst columns = [\n  { id: \"id\", label: \"ID\", minWidth: 170 },\n  { id: \"title\", label: \"Title\", minWidth: 100 },\n  { id: \"slug\", label: \"Slug\", minWidth: 100 },\n  { id: \"createAt\", label: \"Create At\", minWidth: 100 },\n  { id: \"updateAt\", label: \"Update At\", minWidth: 100 },\n  { id: \"actions\", label: \"Actions\", minWidth: 100 },\n];\n\nconst PostsTable = ({\n  updated,\n  handleClickOpen,\n}: {\n  updated: boolean;\n  handleClickOpen: (action: Action, data?: PostModel) => void;\n}) => {\n  const classes = useStyles();\n  const [rows, error] = useGetPosts(updated);\n  if (error !== null) {\n    console.log(error);\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {/* rows !== null\n              ? rows.map((row: any) => {\n                  return <div>{row[\"id\"]}{row[\"content\"]}</div>;\n                })\n            : \"\" */}\n            {rows !== null ? (\n              rows.map((row: PostModel) => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row[\"id\"]}>\n                    {columns.map((column) => {\n                      return (\n                        <TableCell key={column.id}>\n                          {column.id === \"actions\" ? (\n                            <ActionButtons\n                              handleClickOpen={handleClickOpen}\n                              row={row}\n                            />\n                          ) : (\n                            _.get(row, column.id)\n                          )}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })\n            ) : (\n              <TableRow>\n                <TableCell key=\"NO_DATA\">NO Data</TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Paper>\n  );\n};\n\nconst ActionButtons = ({\n  handleClickOpen,\n  row,\n}: {\n  handleClickOpen: (action: Action, data?: PostModel) => void;\n  row: PostModel;\n}) => {\n  return (\n    <div>\n      <Button\n        color=\"secondary\"\n        variant=\"contained\"\n        onClick={() => handleClickOpen(Action.Update, row)}\n      >\n        Edit\n      </Button>\n      <Button\n        color=\"default\"\n        variant=\"contained\"\n        onClick={() => handleClickOpen(Action.Delete, row)}\n      >\n        Delete\n      </Button>\n    </div>\n  );\n};\n\nexport default Post;\n","import Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from 'clsx';\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nconst Dashboard = () => {\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  return (\n    <Grid container spacing={3}>\n      {/* Chart */}\n      <Grid item xs={12} md={8} lg={9}>\n        <Paper className={fixedHeightPaper}></Paper>\n      </Grid>\n      {/* Recent Deposits */}\n      <Grid item xs={12} md={4} lg={3}>\n        <Paper className={fixedHeightPaper}></Paper>\n      </Grid>\n      {/* Recent Orders */}\n      <Grid item xs={12}>\n        <Paper className={classes.paper}></Paper>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Dashboard;\n","import { useEffect, useState } from \"react\";\nimport { IRequest } from \"../../providers/request/Request\";\nimport { useRequest } from \"../../providers/request/RequestProvider\";\n\nconst useApiResult = (request?: IRequest) => {\n    const [results, setResults] = useState(null);\n    const [error, setError] = useState<any>(null);\n    const requester = useRequest();\n\n    useEffect(() => {\n        let isCancelled = false;\n        if (request === undefined) {\n            return;\n        }\n        requester(request).then(async (response: Response) => {\n            if (isCancelled) {\n                return;\n            }\n            if (response.ok) {\n                setResults(await response.json());\n                setError(null);\n            } else {\n                setError(await response.text());\n            }\n        }).catch((err) => {\n            setError(err.message);\n        });\n        return () => {\n            isCancelled = true;\n        };\n    }, [request, requester]);\n    return [results, error];\n};\n\nexport default useApiResult;\n","import { useMemo } from \"react\";\nimport { IRequest } from \"../../../providers/request/Request\";\nimport useApiResult from \"../useApiResult\";\n\nconst useGetPosts = (updated: boolean) => {\n    //TODO may use it later for cache\n    const request = useMemo(() => getPosts(updated), [updated]);\n    //const request = getPosts();\n    return useApiResult(request);\n};\n\n\nconst getPosts = (updated: boolean): IRequest => {\n    return [\n        `${process.env.REACT_APP_CONTENT_API_BASE_URL}/posts`,\n        {\n            method: \"GET\",\n        },\n    ];\n};\n\nexport default useGetPosts;","import { useMemo } from \"react\";\nimport { IRequest } from \"../../../providers/request/Request\";\nimport useApiResult from \"../useApiResult\";\n\nconst useDeletePost = (id?: number) => {\n    //TODO may use it later for cache\n    const request = useMemo(() => id ? deletePost(id) : undefined\n        , [id]);\n    return useApiResult(request);\n};\n\n\nconst deletePost = (id: number): IRequest => {\n    return [\n        `${process.env.REACT_APP_CONTENT_API_BASE_URL}/posts/${id}`,\n        {\n            method: \"DELETE\",\n        },\n    ];\n};\n\nexport default useDeletePost;","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport useDeletePost from \"../../../../hooks/api/post/useDeletePost\";\nimport { PostModel } from \"../model/post\";\nimport { Action } from \"./Post\";\n\ninterface DeleteDialogProps {\n  open: boolean;\n  onClose: (action: Action) => void;\n  data?: PostModel;\n}\n\nconst DeleteDialog = (props: DeleteDialogProps) => {\n  const [deleteId, setDeleteId] = useState<number>();\n  const [rows, error] = useDeletePost(deleteId);\n  // const closeIt = props.onClose(Action.Delete);\n  // const close = useCallback(() => closeIt, [closeIt]);\n\n  useEffect(() => {\n    console.log(\"Delete post: \", rows, error, deleteId);\n    if (rows && rows.id === deleteId) {\n      props.onClose(Action.Delete);\n      setDeleteId(undefined);\n    }\n  }, [rows, deleteId, error, props]);\n\n  return (\n    <Dialog\n      open={props.open}\n      onClose={() => props.onClose(Action.Delete)}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{\"Delete Post\"}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          Are you sure delete Post {props?.data?.title}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => props.onClose(Action.Delete)} color=\"primary\">\n          Cancel\n        </Button>\n        <Button\n          onClick={() => {\n            setDeleteId(props?.data?.id!);\n          }}\n          color=\"primary\"\n          autoFocus\n        >\n          Confirm\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default DeleteDialog;\n","import { useMemo } from \"react\";\nimport { PostModel } from \"../../../admin/moudles/post/model/post\";\nimport { IRequest } from \"../../../providers/request/Request\";\nimport useApiResult from \"../useApiResult\";\n\nconst useCreatePost = (post?: PostModel) => {\n    //TODO may use it later for cache\n    const request = useMemo(() => createPost(post), [post]);\n    return useApiResult(request);\n};\n\nconst createPost = (post?: PostModel): IRequest => {\n    return [\n        `${process.env.REACT_APP_CONTENT_API_BASE_URL}/posts`,\n        {\n            body: JSON.stringify(post),\n            method: \"POST\",\n        },\n    ];\n}\n\nexport default useCreatePost;","import { useMemo } from \"react\";\nimport { PostModel } from \"../../../admin/moudles/post/model/post\";\nimport { IRequest } from \"../../../providers/request/Request\";\nimport useApiResult from \"../useApiResult\";\n\nconst useUpdatePost = (post?: PostModel) => {\n    //TODO may use it later for cache\n    const request = useMemo(() => updatePost(post), [post]);\n    return useApiResult(request);\n};\n\nconst updatePost = (post?: PostModel): IRequest => {\n    return [\n        `${process.env.REACT_APP_CONTENT_API_BASE_URL}/posts/${post?.id}`,\n        {\n            body: JSON.stringify(post),\n            method: \"PUT\",\n        },\n    ];\n}\n\nexport default useUpdatePost;","import { useMemo } from \"react\";\nimport { IRequest } from \"../../../providers/request/Request\";\nimport useApiResult from \"../useApiResult\";\n\nconst useGetGroupsByTitle = (titleSearch: string) => {\n    const request = useMemo(() => getGroups(titleSearch), [titleSearch]);\n    return useApiResult(request);\n};\n\n\nconst getGroups = (titleSearch: string): IRequest => {\n    return [\n        `${process.env.REACT_APP_CONTENT_API_BASE_URL}/groups?title=like&title=${titleSearch}`,\n        {\n            method: \"GET\",\n        },\n    ];\n};\n\nexport default useGetGroupsByTitle;","import { debounce } from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport React, { useState } from \"react\";\nimport { Controller } from \"react-hook-form\";\nimport { Control } from \"react-hook-form/dist/types\";\nimport useGetGroupsByTitle from \"../../../../hooks/api/group/useGetGroupsByTitle\";\nimport { GroupModel, GroupOmitPost } from \"../../group/model/group\";\nimport { PostModel } from \"../model/post\";\n\nconst MultiSelectTypeahead = ({\n  post,\n  control,\n}: {\n  post?: PostModel;\n  control: Control<PostModel>;\n}) => {\n  const [open, setOpen] = useState(false);\n  const [options, setOptions] = useState<GroupModel[]>([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const loading = open && options.length === 0;\n\n  const [rows, error] = useGetGroupsByTitle(inputValue);\n  console.log(error);\n\n  const onInputChange = debounce((event, value) => {\n    console.log(\"OnInputChange\", inputValue, value);\n    if (inputValue !== value) {\n      setInputValue(value);\n      setOptions(rows);\n    }\n  }, 1500);\n\n  return (\n    <div>\n      <Controller\n        render={(props) => (\n          <Autocomplete\n            multiple\n            id=\"groups\"\n            open={open}\n            onOpen={() => setOpen(true)}\n            onClose={() => setOpen(false)}\n            loading={loading}\n            options={options}\n            value={props.field.value as GroupModel[]}\n            getOptionSelected={(option: GroupModel, value: GroupOmitPost) =>\n              option.id === value.id\n            }\n            getOptionLabel={(option: GroupModel) => option.title}\n            onInputChange={onInputChange}\n            onChange={(_, data) => props.field.onChange(data)}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                variant=\"standard\"\n                id=\"groups\"\n                label=\"Groups\"\n                type=\"groups\"\n                placeholder=\"\"\n                InputProps={{\n                  ...params.InputProps,\n                  endAdornment: (\n                    <React.Fragment>\n                      {loading ? (\n                        <CircularProgress color=\"inherit\" size={20} />\n                      ) : null}\n                      {params.InputProps.endAdornment}\n                    </React.Fragment>\n                  ),\n                }}\n              />\n            )}\n          />\n        )}\n        defaultValue={post?.groups as GroupModel[]}\n        name=\"groups\"\n        control={control}\n      />\n    </div>\n  );\n};\n\nexport default MultiSelectTypeahead;\n","import AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Slide, { SlideProps } from \"@material-ui/core/Slide\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport React, { useEffect, useState } from \"react\";\nimport { Control, Controller, useForm, UseFormRegister } from \"react-hook-form\";\nimport useCreatePost from \"../../../../hooks/api/post/useCreatePost\";\nimport useUpdatePost from \"../../../../hooks/api/post/useUpdatePost\";\nimport { PostModel } from \"../model/post\";\nimport MultiSelectTypeahead from \"./MultiSelectTypeahead\";\nimport { Action } from \"./Post\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n}));\n\nconst Transition = React.forwardRef<unknown, SlideProps>((props, ref) => {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\ninterface PostDialogProps {\n  open: boolean;\n  onClose: (action: Action) => void;\n  data?: PostModel;\n}\n\nconst action = (data?: PostModel) => (data ? Action.Update : Action.Create);\n\nconst PostDialog = (props: PostDialogProps) => {\n  return (\n    <div>\n      <Dialog\n        fullScreen\n        open={props.open}\n        onClose={() => props.onClose(action(props.data))}\n        TransitionComponent={Transition}\n      >\n        <Form\n          open={props.open}\n          onClose={() => props.onClose(action(props.data))}\n          data={props.data}\n        />\n        <List>\n          <ListItem button>\n            <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\" />\n          </ListItem>\n          <Divider />\n          <ListItem button>\n            <ListItemText\n              primary=\"Default notification ringtone\"\n              secondary=\"Tethys\"\n            />\n          </ListItem>\n        </List>\n      </Dialog>\n    </div>\n  );\n};\n\nconst Form = (props: PostDialogProps) => {\n  const {\n    register,\n    handleSubmit,\n    watch,\n    control,\n    //  formState: { errors },\n  } = useForm<PostModel>({\n    shouldUnregister: false,\n    // defaultValues: {} as PostModel,\n    // defaultValues: props.data,\n  });\n  const [data, setData] = useState<PostModel>();\n  const onSubmit = (data: PostModel) => {\n    console.log(data);\n    data = { ...props?.data, ...data };\n    setData(data);\n  };\n\n  console.log(watch(\"title\"));\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <TopBar data={props.data} onClose={props.onClose} />\n        <DialogForm register={register} post={props?.data} control={control} />\n      </form>\n      {data &&\n        (props?.data ? (\n          <UpdatePost data={data} setData={setData} onClose={props.onClose} />\n        ) : (\n          <CreatePost data={data} setData={setData} onClose={props.onClose} />\n        ))}\n    </div>\n  );\n};\n\nconst CreatePost = ({\n  data,\n  setData,\n  onClose,\n}: {\n  data?: PostModel;\n  setData: (data?: PostModel) => void;\n  onClose: (action: Action) => void;\n}) => {\n  const [rows, error] = useCreatePost(data);\n  console.log(\"Create post: \", rows, error);\n  useEffect(() => {\n    if (rows) {\n      console.log(\"update post clean data\");\n      onClose(action({} as PostModel));\n      setData(undefined);\n    }\n  }, [rows, setData, onClose]);\n\n  return null;\n};\n\nconst UpdatePost = ({\n  data,\n  setData,\n  onClose,\n}: {\n  data?: PostModel;\n  setData: (data?: PostModel) => void;\n  onClose: (action: Action) => void;\n}) => {\n  const [rows, error] = useUpdatePost(data);\n  console.log(\"Update post: \", rows, error);\n  useEffect(() => {\n    if (rows && rows.id === data?.id) {\n      console.log(\"update post clean data\");\n      onClose(action(data));\n      setData(undefined);\n    }\n  }, [data, rows, setData, onClose]);\n\n  return null;\n};\n\nconst DialogForm = ({\n  register,\n  post,\n  control,\n}: {\n  register: UseFormRegister<PostModel>;\n  post?: PostModel;\n  control: Control<PostModel>;\n}) => {\n  return (\n    <DialogContent>\n      <TextField\n        autoFocus\n        margin=\"dense\"\n        id=\"name\"\n        label=\"Title\"\n        type=\"title\"\n        fullWidth\n        {...register(\"title\")}\n        defaultValue={post?.title}\n      />\n      <MultiSelectTypeahead post={post} control={control} />\n      <Controller\n        render={({ field }) => (\n          <TextField\n            margin=\"dense\"\n            id=\"slug\"\n            label=\"Slug\"\n            type=\"text\"\n            fullWidth\n            {...field}\n          />\n        )}\n        control={control}\n        name=\"slug\"\n        defaultValue={post?.slug}\n      />\n      <Controller\n        render={({ field }) => (\n          <TextField\n            margin=\"dense\"\n            id=\"content\"\n            label=\"Content\"\n            type=\"text\"\n            fullWidth\n            multiline\n            rows={8}\n            {...field}\n          />\n        )}\n        control={control}\n        name=\"content\"\n        defaultValue={post?.content}\n      />\n    </DialogContent>\n  );\n};\n\nconst TopBar = ({\n  data,\n  onClose,\n}: {\n  data?: PostModel;\n  onClose: (action: Action) => void;\n}) => {\n  const classes = useStyles();\n  return (\n    <AppBar className={classes.appBar}>\n      <Toolbar>\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          onClick={() => onClose(action(data))}\n          aria-label=\"close\"\n        >\n          <CloseIcon />\n        </IconButton>\n        <Typography variant=\"h6\" className={classes.title}>\n          Post\n        </Typography>\n        <Button autoFocus color=\"inherit\" type=\"submit\">\n          save\n        </Button>\n      </Toolbar>\n    </AppBar>\n  );\n};\nexport default PostDialog;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Dashboard from \"./dashboard/components/Dashboard\";\nimport Post from \"./post/components/Post\";\n\nexport const AdminBasePath = \"/admin\";\nexport const routesDefinition = [\n  { path: AdminBasePath, name: \"Dashboard\", component: Dashboard },\n  { path: AdminBasePath + \"/post\", name: \"Post\", component: Post },\n];\n\nconst Routes = () => (\n  <Switch>\n    {routesDefinition.map(({ path, component }, key) => (\n      <Route exact path={path} key={key} component={component} />\n    ))}\n  </Switch>\n);\n\nexport default Routes;\n","import Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport React from \"react\";\n\nconst Copyright = () => {\n    return (\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Copyright © '}\n        <Link color=\"inherit\" href=\"https://material-ui.com/\">\n         CMS Admin \n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    );\n  }\n  \nexport default Copyright;\n","import TextField from \"@material-ui/core/TextField\";\n\nconst Emailfield = () => {\n  return (\n    <TextField\n      variant=\"outlined\"\n      margin=\"normal\"\n      required\n      fullWidth\n      id=\"email\"\n      label=\"Email Address\"\n      name=\"email\"\n      autoComplete=\"email\"\n      autoFocus\n    />\n  );\n};\n\nexport default Emailfield;\n","import Avatar from \"@material-ui/core/Avatar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n}));\n\nconst Pagetitle = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.paper}>\n      <Avatar className={classes.avatar}>\n        <LockOutlinedIcon />\n      </Avatar>\n      <Typography component=\"h1\" variant=\"h5\">\n        Sign in\n      </Typography>\n    </div>\n  );\n};\n\nexport default Pagetitle;\n","import Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst Passwordfield = () => {\n  return (\n    <div>\n      <TextField\n        variant=\"outlined\"\n        margin=\"normal\"\n        required\n        fullWidth\n        name=\"password\"\n        label=\"Password\"\n        type=\"password\"\n        id=\"password\"\n        autoComplete=\"current-password\"\n      />\n      <FormControlLabel\n        control={<Checkbox value=\"remember\" color=\"primary\" />}\n        label=\"Remember me\"\n      />\n    </div>\n  );\n};\n\nexport default Passwordfield;\n","import Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\n\nconst Redirectoptions = () => {\n  return (\n    <Grid container>\n      <Grid item xs>\n        <Link href=\"#\" variant=\"body2\">\n          Forgot password?\n        </Link>\n      </Grid>\n      <Grid item>\n        <Link href=\"#\" variant=\"body2\">\n          {\"Don't have an account? Sign Up\"}\n        </Link>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Redirectoptions;\n","import Button from \"@material-ui/core/Button\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { AdminBasePath } from \"../../../../admin/moudles/Routes\";\n\nconst useStyles = makeStyles((theme) => ({\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst Signinbutton = () => {\n  const classes = useStyles();\n\n  return (\n    <Button\n      type=\"submit\"\n      fullWidth\n      variant=\"contained\"\n      color=\"primary\"\n      className={classes.submit}\n      href={AdminBasePath}\n    >\n      Sign In\n    </Button>\n  );\n};\n\nexport default Signinbutton;\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport Emailfield from \"./components/EmailField\";\nimport Pagetitle from \"./components/PageTitle\";\nimport Passwordfield from \"./components/PasswordField\";\nimport Redirectoptions from \"./components/RedirectOptions\";\nimport Signinbutton from \"./components/SigninButton\";\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n}));\n\nconst Login = () => {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Pagetitle />\n      <form className={classes.form} noValidate>\n        <Emailfield />\n        <Passwordfield />\n        <Signinbutton />\n        <Redirectoptions />\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","import Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport React from \"react\";\nimport Copyright from \"../../admin/moudles/common/components/CopyRight\";\nimport Login from \"./login/Login\";\n\nconst Main = () => {\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Login />\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n};\n\nexport default Main;\n"],"sourceRoot":""}