{"version":3,"sources":["admin/moudles/dashboard/components/Dashboard.tsx","hooks/useApiResult.ts","hooks/usePosts.ts","admin/moudles/post/components/PostDialog.tsx","admin/moudles/post/components/Post.tsx","admin/moudles/Routes.tsx","admin/moudles/common/components/CopyRight.tsx","admin/moudles/common/providers/ToggleProvider.tsx","admin/moudles/common/components/LeftMenu.tsx","admin/moudles/Main.tsx"],"names":["useStyles","makeStyles","theme","paper","padding","spacing","display","overflow","flexDirection","fixedHeight","height","Dashboard","classes","fixedHeightPaper","clsx","Grid","container","item","xs","md","lg","Paper","className","useApiResult","request","useState","results","setResults","error","setError","requester","useRequest","useEffect","then","response","a","ok","json","text","catch","err","message","getPosts","method","usePosts","useMemo","appBar","position","title","marginLeft","flex","Transition","React","forwardRef","props","ref","Slide","direction","Form","DialogContent","TextField","autoFocus","margin","id","label","type","fullWidth","multiline","rows","TopBar","onClose","AppBar","Toolbar","IconButton","edge","color","onClick","aria-label","Typography","variant","Button","PostDialog","Dialog","fullScreen","open","TransitionComponent","List","ListItem","button","ListItemText","primary","secondary","Divider","root","width","maxHeight","columns","minWidth","PostsTable","console","log","TableContainer","Table","stickyHeader","TableHead","TableRow","map","column","TableCell","style","TableBody","row","hover","role","tabIndex","value","Post","setOpen","AdminBasePath","Routes","path","exact","component","Copyright","align","Link","href","Date","getFullYear","ToggleContext","createContext","ToggleProvider","children","toggle","setToggle","Provider","toolbarIcon","alignItems","justifyContent","mixins","toolbar","drawerPaper","whiteSpace","drawerWidth","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerPaperClose","overflowX","leavingScreen","breakpoints","up","mainListItems","to","ListItemIcon","LeftMenu","useContext","Drawer","paddingRight","zIndex","drawer","appBarShift","menuButton","marginRight","menuButtonHidden","flexGrow","appBarSpacer","content","paddingTop","paddingBottom","noWrap","Badge","badgeContent","Main","CssBaseline","Container","Box","pt"],"mappings":"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","file":"static/js/5.153d6517.chunk.js","sourcesContent":["import Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from 'clsx';\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nconst Dashboard = () => {\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  return (\n    <Grid container spacing={3}>\n      {/* Chart */}\n      <Grid item xs={12} md={8} lg={9}>\n        <Paper className={fixedHeightPaper}></Paper>\n      </Grid>\n      {/* Recent Deposits */}\n      <Grid item xs={12} md={4} lg={3}>\n        <Paper className={fixedHeightPaper}></Paper>\n      </Grid>\n      {/* Recent Orders */}\n      <Grid item xs={12}>\n        <Paper className={classes.paper}></Paper>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Dashboard;\n","import { useEffect, useState } from \"react\";\nimport { IRequest } from \"../providers/request/Request\";\nimport { useRequest } from \"../providers/request/RequestProvider\";\n\nconst useApiResult = (request: IRequest) => {\n  const [results, setResults] = useState(null);\n  const [error, setError] = useState<any>(null);\n\n  const requester = useRequest();\n\n  useEffect(() => {\n    requester(request)\n      .then(async (response: Response) => {\n        if (response.ok) {\n          setResults(await response.json());\n          setError(null);\n        } else {\n          setError(await response.text());\n        }\n      })\n      .catch((err) => {\n        setError(err.message);\n      });\n  }, [request, requester]);\n  return [results, error];\n};\n\nexport default useApiResult;\n","import { useMemo } from \"react\";\nimport { IRequest } from \"../providers/request/Request\";\nimport useApiResult from \"./useApiResult\";\n\nconst usePosts = () => {\n  //TODO may use it later for cache\n  const request = useMemo(() => getPosts(), []);\n  //const request = getPosts();\n  return useApiResult(request);\n};\n\nconst CONTENT_API_BASE_URL = \"/v1\";\nconst getPosts = (): IRequest => {\n  return [\n    `${CONTENT_API_BASE_URL}/posts`,\n    {\n      method: \"GET\",\n    },\n  ];\n};\n\nexport default usePosts;\n","import AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Slide, { SlideProps } from \"@material-ui/core/Slide\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n}));\n\nconst Transition = React.forwardRef<unknown, SlideProps>((props, ref) => {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\ninterface PostDialogProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nconst PostDialog = (props: PostDialogProps) => {\n  return (\n    <div>\n      <Dialog\n        fullScreen\n        open={props.open}\n        onClose={props.onClose}\n        TransitionComponent={Transition}\n      >\n        <TopBar onClose={props.onClose} />\n        <Form />\n        <List>\n          <ListItem button>\n            <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\" />\n          </ListItem>\n          <Divider />\n          <ListItem button>\n            <ListItemText\n              primary=\"Default notification ringtone\"\n              secondary=\"Tethys\"\n            />\n          </ListItem>\n        </List>\n      </Dialog>\n    </div>\n  );\n};\n\nconst Form = () => {\n  return (\n    <DialogContent>\n      <TextField\n        autoFocus\n        margin=\"dense\"\n        id=\"name\"\n        label=\"Title\"\n        type=\"title\"\n        fullWidth\n      />\n       <TextField\n        autoFocus\n        margin=\"dense\"\n        id=\"name\"\n        multiline\n        rows={8}\n        label=\"Content\"\n        type=\"content\"\n        fullWidth\n      />\n      \n    </DialogContent>\n  );\n};\n\nconst TopBar = ({ onClose }: { onClose: () => void }) => {\n  const classes = useStyles();\n  return (\n    <AppBar className={classes.appBar}>\n      <Toolbar>\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          onClick={onClose}\n          aria-label=\"close\"\n        >\n          <CloseIcon />\n        </IconButton>\n        <Typography variant=\"h6\" className={classes.title}>\n          Post\n        </Typography>\n        <Button autoFocus color=\"inherit\" onClick={onClose}>\n          save\n        </Button>\n      </Toolbar>\n    </AppBar>\n  );\n};\nexport default PostDialog;\n","import {\n    makeStyles,\n    Paper,\n    Table,\n    TableBody,\n    TableCell,\n\n    TableContainer,\n    TableHead,\n    TableRow\n} from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport usePosts from \"../../../../hooks/usePosts\";\nimport PostDialog from \"./PostDialog\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n  },\n  container: {\n    maxHeight: 440,\n  },\n});\n\nconst Post = () => {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Grid container spacing={3}>\n      Post page\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>Create Post</Button>\n      <PostDialog open={open} onClose={handleClose} />\n      <Grid item xs={12}>\n        <PostsTable />\n      </Grid>\n    </Grid>\n  );\n};\n\nconst columns = [\n  { id: \"id\", label: \"ID\", minWidth: 170 },\n  { id: \"content\", label: \"Title\", minWidth: 100 },\n];\n\nconst PostsTable = () => {\n  const classes = useStyles();\n  const [rows, error] = usePosts();\n  if (error !== null) {\n    console.log(error);\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {/* rows !== null\n              ? rows.map((row: any) => {\n                  return <div>{row[\"id\"]}{row[\"content\"]}</div>;\n                })\n            : \"\" */}\n            {rows !== null\n              ? rows.map((row: any) => {\n                  return (\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row['id']}>\n                      {columns.map((column) => {\n                        const value = row[column.id];\n                        return <TableCell key={column.id}>{value}</TableCell>;\n                      })}\n                    </TableRow>\n                  );\n                })\n              : <TableRow><TableCell key=\"NO_DATA\">NO Data</TableCell></TableRow>\n        }\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Paper>\n  );\n};\n\nexport default Post;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Dashboard from \"./dashboard/components/Dashboard\";\nimport Post from \"./post/components/Post\";\n\nexport const AdminBasePath = \"/admin\"\nconst Routes = () => (\n    <Switch>\n        <Route path={AdminBasePath} exact component={Dashboard} />\n        <Route path={AdminBasePath + \"/post\"} component={Post} />\n    </Switch>\n)\n\nexport default Routes;","import Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport React from \"react\";\n\nconst Copyright = () => {\n    return (\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Copyright © '}\n        <Link color=\"inherit\" href=\"https://material-ui.com/\">\n         CMS Admin \n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    );\n  }\nexport default Copyright;\n","import { createContext, useState } from \"react\";\n\ntype ToggleHook = [boolean, (open: boolean) => void];\nexport const ToggleContext = createContext<ToggleHook>({} as ToggleHook);\n\nexport const ToggleProvider: React.FC<{}> = ({ children }) => {\n  const [toggle, setToggle] = useState(true);\n  return (\n    <ToggleContext.Provider value={[toggle, setToggle]}>\n      {children}\n    </ToggleContext.Provider>\n  );\n};\n","import { Divider, Drawer, IconButton, makeStyles } from \"@material-ui/core\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PagesIcon from '@material-ui/icons/Pages';\nimport clsx from 'clsx';\nimport React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { drawerWidth } from \"../../Main\";\nimport { AdminBasePath } from \"../../Routes\";\nimport { ToggleContext } from \"../providers/ToggleProvider\";\n\nconst useStyles = makeStyles((theme) => ({\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  }\n}));\n\n\nconst LeftMenu = () => {\n  const classes = useStyles();\n \n  const [toggle, setToggle] = useContext(ToggleContext);\n  const handleDrawerClose = () => {\n    setToggle(false);\n  };\n\n  return (\n    <Drawer\n      variant=\"permanent\"\n      classes={{\n        paper: clsx(classes.drawerPaper, !toggle && classes.drawerPaperClose),\n      }}\n      open={toggle}\n    >\n      <div className={classes.toolbarIcon}>\n        <IconButton onClick={handleDrawerClose}>\n          <ChevronLeftIcon />\n        </IconButton>\n      </div>\n      <Divider />\n      <List>{mainListItems}</List>\n      <Divider />\n      <List></List>\n    </Drawer>\n  );\n};\n\nconst mainListItems = (\n    <div>\n      <ListItem button component={Link} to={AdminBasePath}>\n        <ListItemIcon>\n          <DashboardIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Dashboard\" />\n      </ListItem>\n      <ListItem button component={Link} to={AdminBasePath + \"/post\"} >\n        <ListItemIcon>\n          <PagesIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Post\" />\n      </ListItem>\n    </div>\n);\nexport default LeftMenu;","import AppBar from \"@material-ui/core/AppBar\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport clsx from \"clsx\";\nimport React, { useContext } from \"react\";\nimport Copyright from \"./common/components/CopyRight\";\nimport LeftMenu from \"./common/components/LeftMenu\";\nimport {\n    ToggleContext,\n    ToggleProvider\n} from \"./common/providers/ToggleProvider\";\nimport Routes from \"./Routes\";\n\nexport const drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: \"none\",\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nconst Main = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <ToggleProvider>\n        <TopBar />\n        <LeftMenu />\n      </ToggleProvider>\n\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        {/* <Container maxWidth=\"lg\" className={classes.container}> */}\n        <Container className={classes.container}>\n          <Routes />\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n};\n\nconst TopBar = () => {\n  const classes = useStyles();\n  const [toggle, setToggle] = useContext(ToggleContext);\n  const handleDrawerOpen = () => {\n    setToggle(true);\n  };\n  return (\n    <AppBar\n      position=\"absolute\"\n      className={clsx(classes.appBar, toggle && classes.appBarShift)}\n    >\n      <Toolbar className={classes.toolbar}>\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={handleDrawerOpen}\n          className={clsx(\n            classes.menuButton,\n            toggle && classes.menuButtonHidden\n          )}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Typography\n          component=\"h1\"\n          variant=\"h6\"\n          color=\"inherit\"\n          noWrap\n          className={classes.title}\n        >\n          Dashboard\n        </Typography>\n        <IconButton color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Main;\n"],"sourceRoot":""}