{"version":3,"sources":["admin/moudles/common/components/CopyRight.tsx","admin/moudles/common/providers/ToggleProvider.tsx","admin/moudles/common/components/LeftMenu.tsx","admin/moudles/Main.tsx","admin/moudles/dashboard/components/Dashboard.tsx","hooks/useApiResult.ts","hooks/usePosts.ts","admin/moudles/post/components/Post.tsx","admin/moudles/Routes.tsx"],"names":["Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","ToggleContext","createContext","ToggleProvider","children","useState","toggle","setToggle","Provider","value","useStyles","makeStyles","theme","toolbarIcon","display","alignItems","justifyContent","padding","mixins","toolbar","drawerPaper","position","whiteSpace","width","drawerWidth","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerPaperClose","overflowX","leavingScreen","spacing","breakpoints","up","paper","overflow","flexDirection","mainListItems","ListItem","button","component","to","AdminBasePath","ListItemIcon","ListItemText","primary","LeftMenu","classes","useContext","Drawer","clsx","open","className","IconButton","onClick","Divider","List","root","paddingRight","appBar","zIndex","drawer","appBarShift","marginLeft","menuButton","marginRight","menuButtonHidden","title","flexGrow","appBarSpacer","content","height","container","paddingTop","paddingBottom","fixedHeight","TopBar","AppBar","Toolbar","edge","aria-label","noWrap","Badge","badgeContent","Main","CssBaseline","Container","Routes","Box","pt","Dashboard","fixedHeightPaper","Grid","item","xs","md","lg","Paper","useApiResult","request","results","setResults","error","setError","requester","useRequest","useEffect","then","response","a","ok","json","text","catch","err","message","getPosts","method","usePosts","useMemo","maxHeight","columns","id","label","minWidth","PostsTable","rows","console","log","TableContainer","Table","stickyHeader","TableHead","TableRow","map","column","TableCell","style","TableBody","row","hover","role","tabIndex","Post","BasePath","path","exact"],"mappings":"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","file":"static/js/5.c8747475.chunk.js","sourcesContent":["import Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport React from \"react\";\n\nconst Copyright = () => {\n    return (\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Copyright Â© '}\n        <Link color=\"inherit\" href=\"https://material-ui.com/\">\n         CMS Admin \n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    );\n  }\nexport default Copyright;\n","import { createContext, useState } from \"react\";\n\ntype ToggleHook = [boolean, (open: boolean) => void];\nexport const ToggleContext = createContext<ToggleHook>({} as ToggleHook);\n\nexport const ToggleProvider: React.FC<{}> = ({ children }) => {\n  const [toggle, setToggle] = useState(true);\n  return (\n    <ToggleContext.Provider value={[toggle, setToggle]}>\n      {children}\n    </ToggleContext.Provider>\n  );\n};\n","import { Divider, Drawer, IconButton, makeStyles } from \"@material-ui/core\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PagesIcon from '@material-ui/icons/Pages';\nimport clsx from 'clsx';\nimport React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { drawerWidth } from \"../../Main\";\nimport { AdminBasePath } from \"../../Routes\";\nimport { ToggleContext } from \"../providers/ToggleProvider\";\n\nconst useStyles = makeStyles((theme) => ({\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  }\n}));\n\n\nconst LeftMenu = () => {\n  const classes = useStyles();\n \n  const [toggle, setToggle] = useContext(ToggleContext);\n  const handleDrawerClose = () => {\n    setToggle(false);\n  };\n\n  return (\n    <Drawer\n      variant=\"permanent\"\n      classes={{\n        paper: clsx(classes.drawerPaper, !toggle && classes.drawerPaperClose),\n      }}\n      open={toggle}\n    >\n      <div className={classes.toolbarIcon}>\n        <IconButton onClick={handleDrawerClose}>\n          <ChevronLeftIcon />\n        </IconButton>\n      </div>\n      <Divider />\n      <List>{mainListItems}</List>\n      <Divider />\n      <List></List>\n    </Drawer>\n  );\n};\n\nconst mainListItems = (\n    <div>\n      <ListItem button component={Link} to={AdminBasePath}>\n        <ListItemIcon>\n          <DashboardIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Dashboard\" />\n      </ListItem>\n      <ListItem button component={Link} to={AdminBasePath + \"/post\"} >\n        <ListItemIcon>\n          <PagesIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Post\" />\n      </ListItem>\n    </div>\n);\nexport default LeftMenu;","import AppBar from \"@material-ui/core/AppBar\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport clsx from \"clsx\";\nimport React, { useContext } from \"react\";\nimport Copyright from \"./common/components/CopyRight\";\nimport LeftMenu from \"./common/components/LeftMenu\";\nimport {\n    ToggleContext,\n    ToggleProvider\n} from \"./common/providers/ToggleProvider\";\nimport Routes from \"./Routes\";\n\nexport const drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: \"none\",\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nconst Main = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <ToggleProvider>\n        <TopBar />\n        <LeftMenu />\n      </ToggleProvider>\n\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        {/* <Container maxWidth=\"lg\" className={classes.container}> */}\n        <Container className={classes.container}>\n          <Routes />\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n};\n\nconst TopBar = () => {\n  const classes = useStyles();\n  const [toggle, setToggle] = useContext(ToggleContext);\n  const handleDrawerOpen = () => {\n    setToggle(true);\n  };\n  return (\n    <AppBar\n      position=\"absolute\"\n      className={clsx(classes.appBar, toggle && classes.appBarShift)}\n    >\n      <Toolbar className={classes.toolbar}>\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={handleDrawerOpen}\n          className={clsx(\n            classes.menuButton,\n            toggle && classes.menuButtonHidden\n          )}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Typography\n          component=\"h1\"\n          variant=\"h6\"\n          color=\"inherit\"\n          noWrap\n          className={classes.title}\n        >\n          Dashboard\n        </Typography>\n        <IconButton color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Main;\n","import Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from 'clsx';\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nconst Dashboard = () => {\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  return (\n    <Grid container spacing={3}>\n      {/* Chart */}\n      <Grid item xs={12} md={8} lg={9}>\n        <Paper className={fixedHeightPaper}></Paper>\n      </Grid>\n      {/* Recent Deposits */}\n      <Grid item xs={12} md={4} lg={3}>\n        <Paper className={fixedHeightPaper}></Paper>\n      </Grid>\n      {/* Recent Orders */}\n      <Grid item xs={12}>\n        <Paper className={classes.paper}></Paper>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Dashboard;\n","import { useEffect, useState } from \"react\";\nimport { IRequest } from \"../providers/request/Request\";\nimport { useRequest } from \"../providers/request/RequestProvider\";\n\nconst useApiResult = (request: IRequest) => {\n  const [results, setResults] = useState(null);\n  const [error, setError] = useState<any>(null);\n\n  const requester = useRequest();\n\n  useEffect(() => {\n    requester(request)\n      .then(async (response: Response) => {\n        if (response.ok) {\n          setResults(await response.json());\n          setError(null);\n        } else {\n          setError(await response.text());\n        }\n      })\n      .catch((err) => {\n        setError(err.message);\n      });\n  }, [request, requester]);\n  return [results, error];\n};\n\nexport default useApiResult;\n","import { useMemo } from \"react\";\nimport { IRequest } from \"../providers/request/Request\";\nimport useApiResult from \"./useApiResult\";\n\nconst usePosts = () => {\n  //TODO may use it later for cache\n  const request = useMemo(() => getPosts(), []);\n  //const request = getPosts();\n  return useApiResult(request);\n};\n\nconst CONTENT_API_BASE_URL = \"/v1\";\nconst getPosts = (): IRequest => {\n  return [\n    `${CONTENT_API_BASE_URL}/posts`,\n    {\n      method: \"GET\",\n    },\n  ];\n};\n\nexport default usePosts;\n","import {\n    makeStyles,\n    Paper,\n    Table,\n    TableBody,\n    TableCell,\n\n    TableContainer,\n    TableHead,\n    TableRow\n} from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport usePosts from \"../../../../hooks/usePosts\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n  },\n  container: {\n    maxHeight: 440,\n  },\n});\n\nconst Post = () => {\n  return (\n    <Grid container spacing={3}>\n      Post page\n      <Grid item xs={12}>\n        <PostsTable />\n      </Grid>\n    </Grid>\n  );\n};\n\nconst columns = [\n  { id: \"id\", label: \"ID\", minWidth: 170 },\n  { id: \"content\", label: \"Title\", minWidth: 100 },\n];\n\nconst PostsTable = () => {\n  const classes = useStyles();\n  const [rows, error] = usePosts();\n  if (error !== null) {\n    console.log(error);\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {/* rows !== null\n              ? rows.map((row: any) => {\n                  return <div>{row[\"id\"]}{row[\"content\"]}</div>;\n                })\n            : \"\" */}\n            {rows !== null\n              ? rows.map((row: any) => {\n                  return (\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row['id']}>\n                      {columns.map((column) => {\n                        const value = row[column.id];\n                        return <TableCell key={column.id}>{value}</TableCell>;\n                      })}\n                    </TableRow>\n                  );\n                })\n              : <TableRow><TableCell key=\"NO_DATA\">NO Data</TableCell></TableRow>\n        }\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Paper>\n  );\n};\n\nexport default Post;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { BasePath } from \"../../App\";\nimport Dashboard from \"./dashboard/components/Dashboard\";\nimport Post from \"./post/components/Post\";\n\nexport const AdminBasePath = BasePath + \"/admin\"\nconst Routes = () => (\n    <Switch>\n        <Route path={AdminBasePath} exact component={Dashboard} />\n        <Route path={AdminBasePath + \"/post\"} component={Post} />\n    </Switch>\n)\n\nexport default Routes;"],"sourceRoot":""}