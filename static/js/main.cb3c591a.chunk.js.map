{"version":3,"sources":["theme.ts","App.tsx","providers/request/Request.ts","providers/request/RequestProvider.tsx","reportWebVitals.ts","index.tsx"],"names":["borderColor","theme","createMuiTheme","palette","type","primary","main","secondary","common","black","warning","light","dark","tonalOffset","contrastThreshold","breakpoints","values","xl","lg","md","sm","xs","overrides","MuiExpansionPanel","root","position","MuiTableCell","paddingLeft","spacing","paddingRight","borderBottom","MuiDivider","backgroundColor","height","MuiListItem","divider","MuiDialog","paper","width","maxWidth","marginLeft","marginRight","MuiTooltip","tooltip","MuiExpansionPanelDetails","responsiveFontSizes","AdminComponent","lazy","LandingComponent","BasePath","app","RequestProvider","CssBaseline","fallback","path","request","url","options","fetch","RequestContext","createContext","useRequest","useContext","children","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootElement","document","getElementById","render","App"],"mappings":"iNAcMA,EAAc,sBAYdC,EAAQC,YAAe,CAC3BC,QAAS,CACPC,KAAM,OACNC,QAAS,CAAEC,KA1BC,WA2BZC,UAAW,CAAED,KA1BC,WA2BdE,OAAQ,CACNC,MA3BQ,WA8BVC,QAAS,CACPC,MA5Be,yBA6BfL,KA5Bc,yBA6BdM,KA5Bc,0BAiChBC,YAAa,GAMbC,kBAzBY,GA2BdC,YAAa,CAMXC,OAAQ,CACNC,GAzCK,KA0CLC,GAzCK,KA0CLC,GAzCK,IA0CLC,GAzCK,IA0CLC,GAzCK,IAkDTC,UAAW,CACTC,kBAAmB,CACjBC,KAAM,CACJC,SAAU,WAGdC,aAAc,CACZF,KAAK,aACHG,YAAaC,GACbC,aAAcD,GACdE,aAAa,GAAD,OApEA,EAoEA,oBAA4B9B,IAHtC,8BA1DC,IA0DD,OAIgC,CAChC2B,YA3DM,EA4DNE,aA5DM,KAgEZE,WAAY,CACVP,KAAM,CACJQ,gBAAiBhC,EACjBiC,OA9EY,IAwFhBC,YAAa,CACXC,QAAS,CACPL,aAAa,GAAD,OA1FA,EA0FA,oBAA4B9B,KAG5CoC,UAAW,CACTC,MAAO,CACLC,MAAO,OACPC,SAAU,IACVC,WAtFQ,EAuFRC,YAvFQ,IA0FZC,WAAY,CACVC,QAAS,CACPX,gBA9GU,oBAiHdY,yBAA0B,CACxBpB,KAAK,6CApGA,IAoGD,OACgC,CAChCG,YAlGM,EAmGNE,aAnGM,QA+GDgB,cAAoB5C,G,uBChI7B6C,EAAiBC,gBAAK,kBAAM,8DAC5BC,EAAmBD,gBAAK,kBAAM,uDAEvBE,EAAW,GA0BTC,IAxBH,WACV,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAkBjD,MAAOA,EAAzB,SACE,eAACkD,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,IAGA,cAAC,WAAD,CAAUC,SAAU,cAAC,WAAD,IAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAML,EAAW,SAAxB,SACE,cAACH,EAAD,MAEF,cAAC,IAAD,UACE,cAACE,EAAD,oB,uHChBDO,EANe,SAACA,GAE3B,kBAAuBA,EAAvB,GAAOC,EAAP,KAAYC,EAAZ,KACA,OAAOC,MAAMF,EAAKC,I,OCJTE,EAAiBC,wBAAc,IAE/BC,EAAa,kBAAMC,qBAAWH,IAE9BR,EAAgC,SAAC,GAAkB,IAAhBY,EAAe,EAAfA,SAC9C,OACE,cAACJ,EAAeK,SAAhB,CAAyBC,MAAOV,EAAhC,SAA0CQ,M,gFCK/BG,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCLRQ,EAAcC,SAASC,eAAe,QAC5CC,iBAAO,cAACC,EAAA,EAAD,IAASJ,GAKhBT,M","file":"static/js/main.cb3c591a.chunk.js","sourcesContent":["import { createMuiTheme, responsiveFontSizes } from \"@material-ui/core\";\n\n// colors\nconst primary = \"#b3294e\";\nconst secondary = \"#4829B2\";\nconst black = \"#343a40\";\nconst darkBlack = \"rgb(36, 40, 44)\";\n//const background = \"#f5f5f5\";\nconst warningLight = \"rgba(253, 200, 69, .3)\";\nconst warningMain = \"rgba(253, 200, 69, .5)\";\nconst warningDark = \"rgba(253, 200, 69, .7)\";\n\n// border\nconst borderWidth = 2;\nconst borderColor = \"rgba(0, 0, 0, 0.13)\";\n\n// breakpoints\nconst xl = 1920;\nconst lg = 1280;\nconst md = 960;\nconst sm = 600;\nconst xs = 0;\n\n// spacing\nconst spacing = 8;\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    primary: { main: primary },\n    secondary: { main: secondary },\n    common: {\n      black,\n      /* white: darkBlack */\n    },\n    warning: {\n      light: warningLight,\n      main: warningMain,\n      dark: warningDark\n    },\n    // Used to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset: 0.2,\n    /*\n    background: {\n      default: background\n    },\n    */\n    contrastThreshold: spacing\n  },\n  breakpoints: {\n    // Define custom breakpoint values.\n    // These will apply to Material-UI components that use responsive\n    // breakpoints, such as `Grid` and `Hidden`. You can also use the\n    // theme breakpoint functions `up`, `down`, and `between` to create\n    // media queries for these breakpoints\n    values: {\n      xl,\n      lg,\n      md,\n      sm,\n      xs\n    }\n  },\n  /*\n  border: {\n    borderColor: borderColor,\n    borderWidth: borderWidth\n  },\n  */\n  overrides: {\n    MuiExpansionPanel: {\n      root: {\n        position: \"static\"\n      }\n    },\n    MuiTableCell: {\n      root: {\n        paddingLeft: spacing * 2,\n        paddingRight: spacing * 2,\n        borderBottom: `${borderWidth}px solid ${borderColor}`,\n        [`@media (max-width:  ${sm}px)`]: {\n          paddingLeft: spacing,\n          paddingRight: spacing\n        }\n      }\n    },\n    MuiDivider: {\n      root: {\n        backgroundColor: borderColor,\n        height: borderWidth\n      }\n    },\n    /*\n    MuiPrivateNotchedOutline: {\n      root: {\n        borderWidth: borderWidth\n      }\n    },\n    */\n    MuiListItem: {\n      divider: {\n        borderBottom: `${borderWidth}px solid ${borderColor}`\n      }\n    },\n    MuiDialog: {\n      paper: {\n        width: \"100%\",\n        maxWidth: 430,\n        marginLeft: spacing,\n        marginRight: spacing\n      }\n    },\n    MuiTooltip: {\n      tooltip: {\n        backgroundColor: darkBlack\n      }\n    },\n    MuiExpansionPanelDetails: {\n      root: {\n        [`@media (max-width:  ${sm}px)`]: {\n          paddingLeft: spacing,\n          paddingRight: spacing\n        }\n      }\n    }\n  },\n  /*\n  typography: {\n    useNextVariants: true\n  }\n  */\n});\n\nexport default responsiveFontSizes(theme);","import { MuiThemeProvider, CssBaseline } from \"@material-ui/core\";\nimport React, { Fragment, lazy, Suspense } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport theme from \"./theme\";\n//import GlobalStyles from \"./GlobalStyles\";\nimport \"./styles.css\";\nimport { RequestProvider } from \"./providers/request/RequestProvider\";\nconst AdminComponent = lazy(() => import(\"./admin/moudles/Main\"));\nconst LandingComponent = lazy(() => import(\"./landing/moudles/Main\"));\n\nexport const BasePath = \"\";\n\nconst app = () => {\n  return (\n    <BrowserRouter>\n      <MuiThemeProvider theme={theme}>\n        <RequestProvider>\n          <CssBaseline />\n          {/*<GlobalStyles /> */}\n          {/* <Pace color={theme.palette.primary.light} /> */}\n          <Suspense fallback={<Fragment />}>\n            <Switch>\n              <Route path={BasePath + \"/admin\"}>\n                <AdminComponent />\n              </Route>\n              <Route>\n                <LandingComponent />\n              </Route>\n            </Switch>\n          </Suspense>\n        </RequestProvider>\n      </MuiThemeProvider>\n    </BrowserRouter>\n  );\n};\n\nexport default app;\n","\nexport type IRequest = [url: RequestInfo, options?: RequestInit];\nexport type IRequestFunc = (request: IRequest) => Promise<Response>;\n\nconst request: IRequestFunc = (request: IRequest): Promise<Response> => {\n    // we can swap out fetch with another library later on if needed\n    const [url, options] = request;\n    return fetch(url, options);\n}\n\nexport default request;","import React, { useContext, createContext } from \"react\";\nimport request, { IRequestFunc } from \"./Request\";\n\nexport const RequestContext = createContext({} as IRequestFunc);\n\nexport const useRequest = () => useContext(RequestContext);\n\nexport const RequestProvider: React.FC<{}> = ({ children }) => {\n  return (\n    <RequestContext.Provider value={request}>{children}</RequestContext.Provider>\n  );\n};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { render } from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from './reportWebVitals';\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}