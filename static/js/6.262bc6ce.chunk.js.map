{"version":3,"sources":["hooks/api/useApiResult.ts","admin/modules/common/components/CopyRight.tsx","admin/modules/post/components/mui-rte/MuiEditorModel.ts","admin/modules/dashboard/components/Dashboard.tsx","hooks/api/post/useGetPosts.ts","hooks/api/post/useDeletePost.ts","admin/modules/post/components/DeleteDialog.tsx","hooks/api/file/useMoveFiles.ts","hooks/api/post/useCreatePost.ts","hooks/api/post/useUpdatePost.ts","hooks/api/file/useImageUpload.ts","admin/modules/post/components/mui-rte/DraftJsUtil.ts","admin/modules/post/components/mui-rte/HtmlEditor.tsx","admin/modules/post/components/Post.tsx","admin/modules/post/components/mui-rte/UploadImagePopover.tsx","admin/modules/post/components/mui-rte/MuiEditor.tsx","hooks/api/group/useGetGroupsByTitle.ts","admin/modules/post/components/MultiSelectTypeahead.tsx","admin/modules/post/components/PostDialog.tsx","admin/modules/Routes.tsx","admin/modules/common/providers/ToggleProvider.tsx","admin/modules/common/components/LeftMenu.tsx","admin/modules/common/components/TopBar.tsx","admin/modules/Main.tsx"],"names":["useApiResult","request","useState","results","setResults","error","setError","requester","useRequest","useEffect","isCancelled","undefined","then","response","a","ok","json","text","catch","err","message","Copyright","variant","color","align","href","Date","getFullYear","MuiEditorType","useStyles","makeStyles","theme","paper","padding","spacing","display","overflow","flexDirection","fixedHeight","height","Dashboard","classes","fixedHeightPaper","clsx","Grid","container","item","xs","md","lg","Paper","className","getPosts","updated","process","method","useGetPosts","useMemo","deletePost","id","useDeletePost","DeleteDialog","props","deleteId","setDeleteId","rows","console","log","onClose","Action","Delete","Dialog","open","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","data","title","DialogActions","Button","onClick","autoFocus","moveFiles","files","post","body","JSON","stringify","useMoveFiles","length","createPost","useCreatePost","updatePost","useUpdatePost","uploadImage","fileId","file","formData","FormData","append","name","useImageUpload","htmlToJson","html","blocksFromHTML","convertFromHTML","state","ContentState","createFromBlockArray","contentBlocks","entityMap","raw","convertToRaw","rawToJson","blocks","fixedBlocks","map","block","type","fixedEntityMap","Object","entries","key","value","url","src","options","HtmlEditor","show","Collapse","in","Grow","TextField","margin","label","fullWidth","multiline","rowsMax","Infinity","htmlContent","onChange","e","setHtmlContent","target","setJsonContent","cardPopoverStyles","root","maxWidth","textField","width","input","UploadImagePopover","anchor","setState","setData","Popover","anchorEl","onExited","onSubmit","anchorOrigin","vertical","horizontal","transformOrigin","disabled","placeholder","accept","event","htmlFor","IconButton","aria-label","component","justify","editorControl","getJsonContent","content","str","parse","isJson","MuiEditor","ref","useRef","setAnchor","uploadFile","setUploadFile","jsonContent","RichEditor","editorType","setEditorType","handleFileUpload","current","uploadedFileResult","insertAtomicBlockAsync","Promise","resolve","reject","displayUrl","alignment","setUploadedFiles","push","insert","control","render","controls","customControls","icon","editorState","stateToHTML","getCurrentContent","htmlBeautify","html_beautify","htmlEditorHandler","draftEditorProps","handleDroppedFiles","_selectionState","toolbarButtonSize","inlineToolbar","defaultValue","field","getGroups","titleSearch","useGetGroupsByTitle","MultiSelectTypeahead","setOpen","setOptions","inputValue","setInputValue","loading","onInputChange","debounce","Autocomplete","multiple","onOpen","getOptionSelected","option","getOptionLabel","_","renderInput","params","InputProps","endAdornment","Fragment","CircularProgress","size","groups","appBar","position","marginLeft","flex","Transition","React","forwardRef","Slide","direction","action","Update","Create","Form","useForm","shouldUnregister","register","handleSubmit","setValue","uploadedFiles","CreatePost","movedFiles","moveFileError","UpdatePost","DialogForm","slug","description","toString","uuid","TopBar","AppBar","Toolbar","edge","Typography","PostDialog","fullScreen","TransitionComponent","List","ListItem","button","ListItemText","primary","secondary","Divider","maxHeight","columns","minWidth","PostsTable","handleClickOpen","TableContainer","Table","stickyHeader","TableHead","TableRow","column","TableCell","style","TableBody","row","hover","role","tabIndex","get","ActionButtons","AdminBasePath","routesDefinition","path","openDelete","setOpenDelete","saved","setSaved","handleClose","Routes","exact","ToggleContext","createContext","ToggleProvider","children","toggle","setToggle","Provider","toolbarIcon","alignItems","justifyContent","mixins","toolbar","drawerPaper","whiteSpace","drawerWidth","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerPaperClose","overflowX","leavingScreen","breakpoints","up","mainListItems","Link","to","ListItemIcon","LeftMenu","useContext","Drawer","paddingRight","zIndex","drawer","appBarShift","menuButton","marginRight","menuButtonHidden","flexGrow","TokenContext","resetToken","location","useLocation","currentRoute","find","pathname","noWrap","Badge","badgeContent","window","reload","appBarSpacer","paddingTop","paddingBottom","Main","CssBaseline","Container","Box","pt"],"mappings":"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","file":"static/js/6.262bc6ce.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { IRequest } from \"../../providers/request/Request\";\nimport { useRequest } from \"../../providers/request/RequestProvider\";\n\nconst useApiResult = (request?: IRequest) => {\n    const [results, setResults] = useState(null);\n    const [error, setError] = useState<any>(null);\n    const requester = useRequest();\n\n    useEffect(() => {\n        let isCancelled = false;\n        if (request === undefined) {\n            setResults(null);\n            return;\n        }\n        requester(request).then(async (response: Response) => {\n            if (isCancelled) {\n                return;\n            }\n            if (response.ok) {\n                setResults(await response.json());\n                setError(null);\n            } else {\n                setError(await response.text());\n            }\n        }).catch((err) => {\n            setError(err.message);\n        });\n        return () => {\n            isCancelled = true;\n        };\n    }, [request, requester]);\n    return [results, error];\n};\n\nexport default useApiResult;\n","import Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport React from \"react\";\n\nconst Copyright = () => {\n    return (\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Copyright © '}\n        <Link color=\"inherit\" href=\"https://material-ui.com/\">\n         CMS Admin \n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    );\n  }\n  \nexport default Copyright;\n","\nexport enum MuiEditorType {\n    RichEditor,\n    HtmlEditor,\n}","import Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from 'clsx';\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nconst Dashboard = () => {\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  return (\n    <Grid container spacing={3}>\n      {/* Chart */}\n      <Grid item xs={12} md={8} lg={9}>\n        <Paper className={fixedHeightPaper}></Paper>\n      </Grid>\n      {/* Recent Deposits */}\n      <Grid item xs={12} md={4} lg={3}>\n        <Paper className={fixedHeightPaper}></Paper>\n      </Grid>\n      {/* Recent Orders */}\n      <Grid item xs={12}>\n        <Paper className={classes.paper}></Paper>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Dashboard;\n","import { useMemo } from \"react\";\nimport { IRequest } from \"../../../providers/request/Request\";\nimport useApiResult from \"../useApiResult\";\n\nconst useGetPosts = (updated: boolean) => {\n    //TODO may use it later for cache\n    const request = useMemo(() => getPosts(updated), [updated]);\n    //const request = getPosts();\n    return useApiResult(request);\n};\n\n\nconst getPosts = (updated: boolean): IRequest => {\n    return [\n        `${process.env.REACT_APP_CONTENT_API_BASE_URL}/posts`,\n        {\n            method: \"GET\",\n        },\n    ];\n};\n\nexport default useGetPosts;","import { useMemo } from \"react\";\nimport { IRequest } from \"../../../providers/request/Request\";\nimport useApiResult from \"../useApiResult\";\n\nconst useDeletePost = (id?: number) => {\n    //TODO may use it later for cache\n    const request = useMemo(() => id ? deletePost(id) : undefined\n        , [id]);\n    return useApiResult(request);\n};\n\n\nconst deletePost = (id: number): IRequest => {\n    return [\n        `${process.env.REACT_APP_CONTENT_API_BASE_URL}/posts/${id}`,\n        {\n            method: \"DELETE\",\n        },\n    ];\n};\n\nexport default useDeletePost;","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport useDeletePost from \"../../../../hooks/api/post/useDeletePost\";\nimport { PostModel } from \"../model/post\";\nimport { Action } from \"./Post\";\n\ninterface DeleteDialogProps {\n  open: boolean;\n  onClose: (action: Action) => void;\n  data?: PostModel;\n}\n\nconst DeleteDialog = (props: DeleteDialogProps) => {\n  const [deleteId, setDeleteId] = useState<number>();\n  const [rows, error] = useDeletePost(deleteId);\n  // const closeIt = props.onClose(Action.Delete);\n  // const close = useCallback(() => closeIt, [closeIt]);\n\n  useEffect(() => {\n    console.log(\"Delete post: \", rows, error, deleteId);\n    if (rows && rows.id === deleteId) {\n      props.onClose(Action.Delete);\n      setDeleteId(undefined);\n    }\n  }, [rows, deleteId, error, props]);\n\n  return (\n    <Dialog\n      open={props.open}\n      onClose={() => props.onClose(Action.Delete)}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{\"Delete Post\"}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          Are you sure delete Post {props?.data?.title}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => props.onClose(Action.Delete)} color=\"primary\">\n          Cancel\n        </Button>\n        <Button\n          onClick={() => {\n            setDeleteId(props?.data?.id!);\n          }}\n          color=\"primary\"\n          autoFocus\n        >\n          Confirm\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default DeleteDialog;\n","import { useMemo } from \"react\";\nimport { FileModel, PostModel } from \"../../../admin/modules/post/model/post\";\nimport { IRequest } from \"../../../providers/request/Request\";\nimport useApiResult from \"../useApiResult\";\n\nconst useMoveFiles = (files: FileModel[], post?: PostModel) => {\n\n    const request = useMemo(() => files.length > 0 && post?.id ? moveFiles(files, post) : undefined, [post, files]);\n    return useApiResult(request);\n};\n\nconst moveFiles = (files: FileModel[], post?: PostModel): IRequest => {\n\n    return [\n        `${process.env.REACT_APP_CONTENT_API_BASE_URL}/files/${post?.id}`,\n        {\n            method: \"PUT\",\n            body: JSON.stringify(files),\n        },\n    ];\n}\n\nexport default useMoveFiles;","import { useMemo } from \"react\";\nimport { PostModel } from \"../../../admin/modules/post/model/post\";\nimport { IRequest } from \"../../../providers/request/Request\";\nimport useApiResult from \"../useApiResult\";\n\nconst useCreatePost = (post?: PostModel) => {\n    //TODO may use it later for cache\n    const request = useMemo(() => createPost(post), [post]);\n    return useApiResult(request);\n};\n\nconst createPost = (post?: PostModel): IRequest => {\n    return [\n        `${process.env.REACT_APP_CONTENT_API_BASE_URL}/posts`,\n        {\n            body: JSON.stringify(post),\n            method: \"POST\",\n        },\n    ];\n}\n\nexport default useCreatePost;","import { useMemo } from \"react\";\nimport { PostModel } from \"../../../admin/modules/post/model/post\";\nimport { IRequest } from \"../../../providers/request/Request\";\nimport useApiResult from \"../useApiResult\";\n\nconst useUpdatePost = (post?: PostModel) => {\n    //TODO may use it later for cache\n    const request = useMemo(() => updatePost(post), [post]);\n    return useApiResult(request);\n};\n\nconst updatePost = (post?: PostModel): IRequest => {\n    return [\n        `${process.env.REACT_APP_CONTENT_API_BASE_URL}/posts/${post?.id}`,\n        {\n            body: JSON.stringify(post),\n            method: \"PUT\",\n        },\n    ];\n}\n\nexport default useUpdatePost;","import { useMemo } from \"react\";\nimport { PostModel } from \"../../../admin/modules/post/model/post\";\nimport { IRequest } from \"../../../providers/request/Request\";\nimport useApiResult from \"../useApiResult\";\n\nconst useImageUpload = (fileId: string, file?: File, post?: PostModel) => {\n\n    const request = useMemo(() => file ? uploadImage(fileId, file, post) : undefined, [fileId, post, file]);\n    console.log(\"===== upload call =====\", file, request);\n    return useApiResult(request);\n};\n\nconst uploadImage = (fileId: string, file: File, post?: PostModel): IRequest => {\n    console.log(post);\n    const formData = new FormData();\n    formData.append(\"name\", `${file.name}`);\n    formData.append(\"file\", file);\n    formData.append(\"id\", `${fileId}`)\n\n    return [\n        `${process.env.REACT_APP_CONTENT_API_BASE_URL}/files`,\n        {\n            method: \"POST\",\n            body: formData,\n        },\n    ];\n}\n\nexport default useImageUpload;","import {\n    ContentState,\n    convertFromHTML,\n    convertToRaw,\n    RawDraftContentState,\n} from \"draft-js\";\nexport const htmlToJson = (html: string): string => {\n    const blocksFromHTML = convertFromHTML(html);\n    const state = ContentState.createFromBlockArray(\n        blocksFromHTML.contentBlocks,\n        blocksFromHTML.entityMap\n    );\n    const raw = convertToRaw(state);\n    return rawToJson(raw);\n};\n\nexport const rawToJson = (raw: RawDraftContentState) => {\n    const { blocks, entityMap } = raw;\n\n    const fixedBlocks = blocks.map((block) => {\n        return {\n            ...block,\n            type: block.text === \"📷\" ? \"atomic\" : block.type,\n        };\n    });\n\n    const fixedEntityMap: { [key: string]: any } = {};\n    for (const [key, value] of Object.entries(entityMap)) {\n        if (value.type === \"IMAGE\") {\n            if (value.data.url) {\n                value.data.src = value.data.url;\n            }\n            if (value.data.src) {\n                value.data.url = value.data.src;\n            }\n        }\n        fixedEntityMap[key] = value;\n    }\n    // console.log(fixedEntityMap);\n    return JSON.stringify({\n        blocks: fixedBlocks,\n        entityMap: fixedEntityMap,\n    });\n    // return JSON.stringify(convertToRaw(state));\n};\n\nexport const isJson = (str: string): boolean => {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n};","import { Collapse, Grow, TextField } from \"@material-ui/core\";\nimport { EditorState } from \"draft-js\";\nimport { stateToHTML } from \"draft-js-export-html\";\nimport htmlBeautify from \"js-beautify\";\nimport { Dispatch, SetStateAction } from \"react\";\nimport { htmlToJson } from \"./DraftJsUtil\";\nimport { MuiEditorType } from \"./MuiEditorModel\";\n\ninterface HtmlEditorProps {\n  htmlContent: string | null;\n  type: MuiEditorType;\n  setHtmlContent: Dispatch<SetStateAction<string | null>>;\n  setJsonContent: Dispatch<SetStateAction<string | null>>;\n}\n\nconst HtmlEditor = (props: HtmlEditorProps) => {\n  const show = props.type === MuiEditorType.HtmlEditor;\n  return (\n    <Collapse in={show}>\n      <Grow in={show}>\n        <TextField\n          margin=\"dense\"\n          id=\"html\"\n          label=\"Html\"\n          type=\"text\"\n          fullWidth\n          multiline\n          rowsMax={Infinity}\n          value={props.htmlContent || \"\"}\n          onChange={(e) => {\n            props.setHtmlContent(e.target.value);\n            props.setJsonContent(htmlToJson(e.target.value));\n          }}\n        />\n      </Grow>\n    </Collapse>\n  );\n};\n\nexport const htmlEditorHandler = (\n  editorState: EditorState,\n  htmlContent: string | null,\n  editorType: MuiEditorType,\n  setEditorType: Dispatch<SetStateAction<MuiEditorType>>,\n  setHtmlContent: Dispatch<SetStateAction<string | null>>,\n  setJsonContent: Dispatch<SetStateAction<string | null>>\n): void => {\n  switch (editorType) {\n    case MuiEditorType.RichEditor: {\n      const html = stateToHTML(editorState.getCurrentContent(), options);\n      setEditorType(MuiEditorType.HtmlEditor);\n      setHtmlContent(htmlBeautify.html_beautify(html));\n      console.log(htmlBeautify.html_beautify(html), html);\n      break;\n    }\n    case MuiEditorType.HtmlEditor: {\n      setEditorType(MuiEditorType.RichEditor);\n      setJsonContent(htmlToJson(htmlContent!));\n      break;\n    }\n  }\n};\n\nconst options = {\n  /*\n  entityStyleFn: (entity: EntityInstance) => {\n    const entityType = entity.getType().toLowerCase();\n    if (entityType === \"image\") {\n      const data = entity.getData();\n      return {\n        element: \"img\",\n        attributes: {\n          src: data.url,\n          width: data.width,\n          height: data.height,\n        },\n        style: {\n          // Put styles here...\n        },\n      };\n    }\n  },\n  */\n};\nexport default HtmlEditor;\n","import {\n  makeStyles,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport _ from \"lodash\";\nimport React from \"react\";\nimport useGetPosts from \"../../../../hooks/api/post/useGetPosts\";\nimport { PostModel } from \"../model/post\";\nimport DeleteDialog from \"./DeleteDialog\";\nimport PostDialog from \"./PostDialog\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n  },\n  container: {\n    maxHeight: 440,\n  },\n});\n\nexport enum Action {\n  Delete,\n  Update,\n  Create,\n}\n\nconst Post = () => {\n  const [open, setOpen] = React.useState(false);\n  const [openDelete, setOpenDelete] = React.useState(false);\n  const [saved, setSaved] = React.useState(false);\n  const [data, setData] = React.useState<PostModel>();\n\n  const handleClickOpen = (action: Action, data?: PostModel) => {\n    switch (action) {\n      case Action.Create:\n      case Action.Update:\n        setOpen(true);\n        break;\n      case Action.Delete:\n        setOpenDelete(true);\n        break;\n    }\n\n    if (data) {\n      setData(data);\n    }\n  };\n\n  const handleClose = (action: Action) => {\n    console.log(\"close dialog\");\n    switch (action) {\n      case Action.Create:\n      case Action.Update:\n        setOpen(false);\n        break;\n      case Action.Delete:\n        setOpenDelete(false);\n        break;\n    }\n    setData(undefined);\n    setSaved(!saved);\n  };\n\n  return (\n    <Grid container spacing={3}>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => handleClickOpen(Action.Create)}\n      >\n        Create\n      </Button>\n      <PostDialog open={open} onClose={handleClose} data={data} />\n      <DeleteDialog open={openDelete} onClose={handleClose} data={data} />\n      <Grid item xs={12}>\n        <PostsTable updated={saved} handleClickOpen={handleClickOpen} />\n      </Grid>\n    </Grid>\n  );\n};\n\nconst columns = [\n  { id: \"id\", label: \"ID\", minWidth: 170 },\n  { id: \"title\", label: \"Title\", minWidth: 100 },\n  { id: \"slug\", label: \"Slug\", minWidth: 100 },\n  { id: \"createAt\", label: \"Create At\", minWidth: 100 },\n  { id: \"updateAt\", label: \"Update At\", minWidth: 100 },\n  { id: \"actions\", label: \"Actions\", minWidth: 100 },\n];\n\nconst PostsTable = ({\n  updated,\n  handleClickOpen,\n}: {\n  updated: boolean;\n  handleClickOpen: (action: Action, data?: PostModel) => void;\n}) => {\n  const classes = useStyles();\n  const [rows, error] = useGetPosts(updated);\n  if (error !== null) {\n    console.log(error);\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {/* rows !== null\n              ? rows.map((row: any) => {\n                  return <div>{row[\"id\"]}{row[\"content\"]}</div>;\n                })\n            : \"\" */}\n            {rows !== null ? (\n              rows.map((row: PostModel) => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row[\"id\"]}>\n                    {columns.map((column) => {\n                      return (\n                        <TableCell key={column.id}>\n                          {column.id === \"actions\" ? (\n                            <ActionButtons\n                              handleClickOpen={handleClickOpen}\n                              row={row}\n                            />\n                          ) : (\n                            _.get(row, column.id)\n                          )}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })\n            ) : (\n              <TableRow>\n                <TableCell key=\"NO_DATA\">NO Data</TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Paper>\n  );\n};\n\nconst ActionButtons = ({\n  handleClickOpen,\n  row,\n}: {\n  handleClickOpen: (action: Action, data?: PostModel) => void;\n  row: PostModel;\n}) => {\n  return (\n    <div>\n      <Button\n        color=\"secondary\"\n        variant=\"contained\"\n        onClick={() => handleClickOpen(Action.Update, row)}\n      >\n        Edit\n      </Button>\n      <Button\n        color=\"default\"\n        variant=\"contained\"\n        onClick={() => handleClickOpen(Action.Delete, row)}\n      >\n        Delete\n      </Button>\n    </div>\n  );\n};\n\nexport default Post;\n","import {\n  Popover,\n  Grid,\n  TextField,\n  IconButton,\n  Button,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { FunctionComponent, useState, useEffect } from \"react\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport AttachFileIcon from \"@material-ui/icons/AttachFile\";\nimport { TAsyncAtomicBlockResponse } from \"mui-rte\";\n\ninterface IUploadImagePopoverProps {\n  anchor: TAnchor;\n  onSubmit: (data: TUploadImageData, insert: boolean) => void;\n}\n\ntype TUploadImagePopoverState = {\n  anchor: TAnchor;\n  isCancelled: boolean;\n};\n\ntype TUploadImageData = {\n  file?: File;\n};\n\ntype TAnchor = HTMLElement | null;\n\nconst cardPopoverStyles = makeStyles({\n  root: {\n    padding: 10,\n    maxWidth: 350,\n  },\n  textField: {\n    width: \"100%\",\n  },\n  input: {\n    display: \"none\",\n  },\n});\n\nconst UploadImagePopover: FunctionComponent<IUploadImagePopoverProps> = (\n  props\n) => {\n  const classes = cardPopoverStyles(props);\n  const [state, setState] = useState<TUploadImagePopoverState>({\n    anchor: null,\n    isCancelled: false,\n  });\n  const [data, setData] = useState<TUploadImageData>({});\n\n  useEffect(() => {\n    setState({\n      anchor: props.anchor,\n      isCancelled: false,\n    });\n    setData({\n      file: undefined,\n    });\n  }, [props.anchor]);\n\n  return (\n    <Popover\n      anchorEl={state.anchor}\n      open={state.anchor !== null}\n      onExited={() => {\n        props.onSubmit(data, !state.isCancelled);\n      }}\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"right\",\n      }}\n      transformOrigin={{\n        vertical: \"top\",\n        horizontal: \"left\",\n      }}\n    >\n      <Grid container spacing={1} className={classes.root}>\n        <Grid item xs={10}>\n          <TextField\n            className={classes.textField}\n            disabled\n            value={data.file?.name || \"\"}\n            placeholder=\"Click icon to attach image\"\n          />\n        </Grid>\n        <Grid item xs={2}>\n          <input\n            accept=\"image/*\"\n            className={classes.input}\n            id=\"contained-button-file\"\n            type=\"file\"\n            onChange={(event) => {\n              setData({\n                ...data,\n                file: event.target.files![0],\n              });\n            }}\n          />\n          <label htmlFor=\"contained-button-file\">\n            <IconButton\n              color=\"primary\"\n              aria-label=\"upload image\"\n              component=\"span\"\n            >\n              <AttachFileIcon />\n            </IconButton>\n          </label>\n        </Grid>\n        <Grid item container xs={12} justify=\"flex-end\">\n          <Button\n            onClick={() => {\n              setState({\n                anchor: null,\n                isCancelled: true,\n              });\n            }}\n          >\n            <CloseIcon />\n          </Button>\n          <Button\n            onClick={() => {\n              setState({\n                anchor: null,\n                isCancelled: false,\n              });\n            }}\n          >\n            <DoneIcon />\n          </Button>\n        </Grid>\n      </Grid>\n    </Popover>\n  );\n};\n\nexport const uploadImageServer = (file: any) => {\n  console.log(file);\n  return new Promise<TAsyncAtomicBlockResponse>(async (resolve, reject) => {\n    resolve({\n      data: {\n        url: file?.displayUrl,\n        src: file?.displayUrl,\n        width: file?.width,\n        height: file?.height,\n        alignment: \"left\", // or \"center\", \"right\"\n        type: \"image\", // or \"video\"\n      },\n    });\n  });\n};\nexport default UploadImagePopover;\n\n\n/*\nconst uploadImage = (file: File) => {\n  return new Promise<TAsyncAtomicBlockResponse>(async (resolve, reject) => {\n    console.log(\"upload image\", file);\n    const url = await uploadImageToServer(file);\n    if (!url) {\n      reject();\n      return;\n    }\n    resolve({\n      data: {\n        url: url,\n        width: 300,\n        height: 200,\n        alignment: \"left\", // or \"center\", \"right\"\n        type: \"image\", // or \"video\"\n      },\n    });\n  });\n};\n\nconst uploadImageToServer = (file: File) => {\n  return new Promise((resolve) => {\n    console.log(`Uploading image ${file.name} ...`);\n    setTimeout(() => {\n      console.log(\"Upload successful\");\n      resolve(`https://return_uploaded_image_url/${file.name}`);\n    }, 2000);\n  });\n};\n*/","import BackupIcon from \"@material-ui/icons/Backup\";\nimport WebIcon from \"@material-ui/icons/Web\";\nimport { convertToRaw } from \"draft-js\";\nimport MUIRichTextEditor, { TMUIRichTextEditorRef } from \"mui-rte\";\nimport { Dispatch, SetStateAction, useEffect, useRef, useState } from \"react\";\nimport { Control, Controller, UseFormSetValue } from \"react-hook-form\";\nimport useImageUpload from \"../../../../../hooks/api/file/useImageUpload\";\nimport { FileModel, PostModel } from \"../../model/post\";\nimport { htmlToJson, isJson, rawToJson } from \"./DraftJsUtil\";\nimport HtmlEditor, { htmlEditorHandler } from \"./HtmlEditor\";\nimport { MuiEditorType } from \"./MuiEditorModel\";\nimport UploadImagePopover, { uploadImageServer } from \"./UploadImagePopover\";\n\nconst editorControl = [\n  \"title\",\n  \"bold\",\n  \"italic\",\n  \"underline\",\n  \"strikethrough\",\n  \"highlight\",\n  \"undo\",\n  \"redo\",\n  \"link\",\n  \"media\",\n  \"numberList\",\n  \"bulletList\",\n  \"quote\",\n  \"code\",\n  \"clear\",\n  \"save\",\n  \"upload-image\",\n  \"html-edit\",\n];\n\ninterface MuiEditorProps {\n  post?: PostModel;\n  control: Control<PostModel>;\n  setValue: UseFormSetValue<PostModel>;\n  setUploadedFiles: Dispatch<SetStateAction<FileModel[]>>;\n  fileId: string;\n}\n\nconst MuiEditor = (props: MuiEditorProps) => {\n  const ref = useRef<TMUIRichTextEditorRef>(null);\n  const [anchor, setAnchor] = useState<HTMLElement | null>(null);\n  const [uploadFile, setUploadFile] = useState<File>();\n  const [htmlContent, setHtmlContent] = useState<string | null>(null);\n  const [jsonContent, setJsonContent] = useState<string | null>(\n    getJsonContent(props.post)\n  );\n  const [editorType, setEditorType] = useState<MuiEditorType>(\n    MuiEditorType.RichEditor\n  );\n\n  const handleFileUpload = (file: File) => {\n    console.log(file, ref.current);\n    setUploadFile(file);\n  };\n\n  const [uploadedFileResult, error] = useImageUpload(props.fileId, uploadFile, props.post);\n  console.log(uploadedFileResult, error, uploadFile);\n\n  useEffect(() => {\n    if (uploadedFileResult) {\n      ref.current?.insertAtomicBlockAsync(\n        \"IMAGE\",\n        uploadImageServer(uploadedFileResult),\n        \"Uploading now...\"\n      );\n      props.setUploadedFiles((files: FileModel[]) => {\n        files.push(uploadedFileResult);\n        console.log(files);\n        return files;\n      });\n    }\n    setUploadFile(undefined);\n  }, [uploadedFileResult, props]);\n\n  return (\n    <>\n      <UploadImagePopover\n        anchor={anchor}\n        onSubmit={(data, insert) => {\n          if (insert && data.file) {\n            console.log(data, insert);\n            handleFileUpload(data.file);\n          }\n          setAnchor(null);\n        }}\n      />\n      <HtmlEditor\n        htmlContent={htmlContent}\n        type={editorType}\n        setHtmlContent={setHtmlContent}\n        setJsonContent={setJsonContent}\n      />\n      <Controller\n        name=\"content\"\n        control={props.control}\n        render={(props) => (\n          <MUIRichTextEditor\n            label=\"content\"\n            ref={ref}\n            controls={editorControl}\n            customControls={[\n              {\n                name: \"upload-image\",\n                icon: <BackupIcon />,\n                type: \"callback\",\n                onClick: (editorState, name, anchor) => {\n                  console.log(\"update image triggered\");\n                  setAnchor(anchor);\n                },\n              },\n              {\n                name: \"html-edit\",\n                icon: <WebIcon />,\n                type: \"callback\",\n                onClick: (editorState, name, anchor) => {\n                  htmlEditorHandler(\n                    editorState,\n                    htmlContent,\n                    editorType,\n                    setEditorType,\n                    setHtmlContent,\n                    setJsonContent\n                  );\n                },\n              },\n            ]}\n            draftEditorProps={{\n              handleDroppedFiles: (_selectionState, files) => {\n                if (files.length && (files[0] as File).name !== undefined) {\n                  handleFileUpload(files[0] as File);\n                  return \"handled\";\n                }\n                return \"not-handled\";\n              },\n            }}\n            toolbarButtonSize=\"small\"\n            inlineToolbar\n            defaultValue={jsonContent}\n            onChange={(value) => {\n              const content = rawToJson(\n                convertToRaw(value.getCurrentContent())\n              );\n              props.field.onChange(content);\n            }}\n          />\n        )}\n      />\n    </>\n  );\n};\n\nconst getJsonContent = (post?: PostModel) => {\n  if (!post?.content) {\n    return null;\n  }\n  if (isJson(post!.content)) {\n    return post!.content;\n  }\n\n  return htmlToJson(post!.content);\n};\n\nexport default MuiEditor;\n","import { useMemo } from \"react\";\nimport { IRequest } from \"../../../providers/request/Request\";\nimport useApiResult from \"../useApiResult\";\n\nconst useGetGroupsByTitle = (titleSearch: string) => {\n    const request = useMemo(() => getGroups(titleSearch), [titleSearch]);\n    return useApiResult(request);\n};\n\n\nconst getGroups = (titleSearch: string): IRequest => {\n    return [\n        `${process.env.REACT_APP_CONTENT_API_BASE_URL}/groups?title=like&title=${titleSearch}`,\n        {\n            method: \"GET\",\n        },\n    ];\n};\n\nexport default useGetGroupsByTitle;","import { debounce } from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport React, { useState } from \"react\";\nimport { Controller } from \"react-hook-form\";\nimport { Control } from \"react-hook-form/dist/types\";\nimport useGetGroupsByTitle from \"../../../../hooks/api/group/useGetGroupsByTitle\";\nimport { GroupModel, GroupOmitPost } from \"../../group/model/group\";\nimport { PostModel } from \"../model/post\";\n\nconst MultiSelectTypeahead = ({\n  post,\n  control,\n}: {\n  post?: PostModel;\n  control: Control<PostModel>;\n}) => {\n  const [open, setOpen] = useState(false);\n  const [options, setOptions] = useState<GroupModel[]>([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const loading = open && options.length === 0;\n\n  const [rows, error] = useGetGroupsByTitle(inputValue);\n  console.log(error);\n\n  const onInputChange = debounce((event, value) => {\n    console.log(\"OnInputChange\", inputValue, value);\n    if (inputValue !== value) {\n      setInputValue(value);\n      setOptions(rows);\n    }\n  }, 1500);\n\n  return (\n    <div>\n      <Controller\n        render={(props) => (\n          <Autocomplete\n            multiple\n            id=\"groups\"\n            open={open}\n            onOpen={() => setOpen(true)}\n            onClose={() => setOpen(false)}\n            loading={loading}\n            options={options}\n            value={props.field.value as GroupModel[]}\n            getOptionSelected={(option: GroupModel, value: GroupOmitPost) =>\n              option.id === value.id\n            }\n            getOptionLabel={(option: GroupModel) => option.title}\n            onInputChange={onInputChange}\n            onChange={(_, data) => props.field.onChange(data)}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                variant=\"standard\"\n                id=\"groups\"\n                label=\"Groups\"\n                type=\"groups\"\n                placeholder=\"\"\n                InputProps={{\n                  ...params.InputProps,\n                  endAdornment: (\n                    <React.Fragment>\n                      {loading ? (\n                        <CircularProgress color=\"inherit\" size={20} />\n                      ) : null}\n                      {params.InputProps.endAdornment}\n                    </React.Fragment>\n                  ),\n                }}\n              />\n            )}\n          />\n        )}\n        defaultValue={post?.groups as GroupModel[]}\n        name=\"groups\"\n        control={control}\n      />\n    </div>\n  );\n};\n\nexport default MultiSelectTypeahead;\n","import AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Slide, { SlideProps } from \"@material-ui/core/Slide\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport React, { Dispatch, SetStateAction, useEffect, useState } from \"react\";\nimport {\n  Control,\n  Controller,\n  useForm,\n  UseFormRegister,\n  UseFormSetValue,\n} from \"react-hook-form\";\nimport useMoveFiles from \"../../../../hooks/api/file/useMoveFiles\";\nimport useCreatePost from \"../../../../hooks/api/post/useCreatePost\";\nimport useUpdatePost from \"../../../../hooks/api/post/useUpdatePost\";\nimport { FileModel, PostModel } from \"../model/post\";\nimport MuiEditor from \"./mui-rte/MuiEditor\";\nimport MultiSelectTypeahead from \"./MultiSelectTypeahead\";\nimport { Action } from \"./Post\";\nimport { v4 as uuid } from \"uuid\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n}));\n\nconst Transition = React.forwardRef<unknown, SlideProps>((props, ref) => {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\ninterface PostDialogProps {\n  open: boolean;\n  onClose: (action: Action) => void;\n  data?: PostModel;\n}\n\nconst action = (data?: PostModel) => (data ? Action.Update : Action.Create);\n\nconst PostDialog = (props: PostDialogProps) => {\n  return (\n    <div>\n      <Dialog\n        fullScreen\n        open={props.open}\n        onClose={() => props.onClose(action(props.data))}\n        TransitionComponent={Transition}\n      >\n        <Form\n          open={props.open}\n          onClose={() => props.onClose(action(props.data))}\n          data={props.data}\n        />\n        <List>\n          <ListItem button>\n            <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\" />\n          </ListItem>\n          <Divider />\n          <ListItem button>\n            <ListItemText\n              primary=\"Default notification ringtone\"\n              secondary=\"Tethys\"\n            />\n          </ListItem>\n        </List>\n      </Dialog>\n    </div>\n  );\n};\n\nconst Form = (props: PostDialogProps) => {\n  const {\n    register,\n    handleSubmit,\n    // watch,\n    control,\n    setValue,\n    //  formState: { errors },\n  } = useForm<PostModel>({\n    shouldUnregister: false,\n  });\n  const [uploadedFiles, setUploadedFiles] = useState<FileModel[]>(\n    props.data?.files ?? ([] as FileModel[])\n  );\n  const [data, setData] = useState<PostModel>();\n  const onSubmit = (data: PostModel) => {\n    console.log(data);\n    data = { ...props?.data, ...data };\n    setData(data);\n  };\n  register(\"files\");\n  // console.log(watch(\"title\"));\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <TopBar data={props.data} onClose={props.onClose} />\n        <DialogForm\n          register={register}\n          post={props?.data}\n          control={control}\n          setValue={setValue}\n          setUploadedFiles={setUploadedFiles}\n        />\n      </form>\n      {data &&\n        (props?.data ? (\n          <UpdatePost data={data} setData={setData} onClose={props.onClose} />\n        ) : (\n          <CreatePost\n            data={data}\n            setData={setData}\n            uploadedFiles={uploadedFiles}\n            setUploadedFiles={setUploadedFiles}\n            onClose={props.onClose}\n          />\n        ))}\n    </div>\n  );\n};\n\nconst CreatePost = ({\n  data,\n  setData,\n  uploadedFiles,\n  setUploadedFiles,\n  onClose,\n}: {\n  data?: PostModel;\n  setData: Dispatch<SetStateAction<PostModel | undefined>>;\n  uploadedFiles: FileModel[];\n  setUploadedFiles: Dispatch<SetStateAction<FileModel[]>>;\n  onClose: (action: Action) => void;\n}) => {\n  if (data) {\n    data.files = uploadedFiles;\n    console.log(\"============ change upload files\", data);\n  }\n  const [rows, error] = useCreatePost(data);\n  console.log(\"Create post: \", rows, error);\n\n  const [movedFiles, moveFileError] = useMoveFiles(uploadedFiles, rows);\n  console.log(\"Move files: \", movedFiles, moveFileError);\n  useEffect(() => {\n    if (rows) {\n      console.log(\"Create post clean data\");\n      onClose(action({} as PostModel));\n      setData(undefined);\n      setUploadedFiles([] as FileModel[]);\n    }\n  }, [rows, setData, onClose, setUploadedFiles]);\n\n  return null;\n};\n\nconst UpdatePost = ({\n  data,\n  setData,\n  onClose,\n}: {\n  data?: PostModel;\n  setData: (data?: PostModel) => void;\n  onClose: (action: Action) => void;\n}) => {\n  const [rows, error] = useUpdatePost(data);\n  console.log(\"Update post: \", rows, error);\n  useEffect(() => {\n    if (rows && rows.id === data?.id) {\n      console.log(\"update post clean data\");\n      onClose(action(data));\n      setData(undefined);\n    }\n  }, [data, rows, setData, onClose]);\n\n  return null;\n};\n\nconst DialogForm = ({\n  register,\n  post,\n  control,\n  setValue,\n  setUploadedFiles,\n}: {\n  register: UseFormRegister<PostModel>;\n  post?: PostModel;\n  control: Control<PostModel>;\n  setValue: UseFormSetValue<PostModel>;\n  setUploadedFiles: Dispatch<SetStateAction<FileModel[]>>;\n}) => {\n  return (\n    <DialogContent>\n      <TextField\n        autoFocus\n        margin=\"dense\"\n        id=\"name\"\n        label=\"Title\"\n        type=\"title\"\n        fullWidth\n        {...register(\"title\")}\n        defaultValue={post?.title}\n      />\n      <MultiSelectTypeahead post={post} control={control} />\n      <Controller\n        render={({ field }) => (\n          <TextField\n            margin=\"dense\"\n            id=\"slug\"\n            label=\"Slug\"\n            type=\"text\"\n            fullWidth\n            {...field}\n          />\n        )}\n        control={control}\n        name=\"slug\"\n        defaultValue={post?.slug ?? \"\"}\n      />\n      <Controller\n        render={({ field }) => (\n          <TextField\n            margin=\"dense\"\n            id=\"description\"\n            label=\"Description\"\n            type=\"text\"\n            fullWidth\n            multiline\n            rows={8}\n            {...field}\n          />\n        )}\n        control={control}\n        name=\"description\"\n        defaultValue={post?.description}\n      />\n      <MuiEditor\n        post={post}\n        control={control}\n        setValue={setValue}\n        setUploadedFiles={setUploadedFiles}\n        fileId={post?.id?.toString() ?? uuid()}\n      />\n    </DialogContent>\n  );\n};\n\nconst TopBar = ({\n  data,\n  onClose,\n}: {\n  data?: PostModel;\n  onClose: (action: Action) => void;\n}) => {\n  const classes = useStyles();\n  return (\n    <AppBar className={classes.appBar}>\n      <Toolbar>\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          onClick={() => onClose(action(data))}\n          aria-label=\"close\"\n        >\n          <CloseIcon />\n        </IconButton>\n        <Typography variant=\"h6\" className={classes.title}>\n          Post\n        </Typography>\n        <Button autoFocus color=\"inherit\" type=\"submit\">\n          save\n        </Button>\n      </Toolbar>\n    </AppBar>\n  );\n};\nexport default PostDialog;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Dashboard from \"./dashboard/components/Dashboard\";\nimport Post from \"./post/components/Post\";\n\nexport const AdminBasePath = \"/admin\";\nexport const routesDefinition = [\n  { path: AdminBasePath, name: \"Dashboard\", component: Dashboard },\n  { path: AdminBasePath + \"/post\", name: \"Post\", component: Post },\n];\n\nconst Routes = () => (\n  <Switch>\n    {routesDefinition.map(({ path, component }, key) => (\n      <Route exact path={path} key={key} component={component} />\n    ))}\n  </Switch>\n);\n\nexport default Routes;\n","import { createContext, useState } from \"react\";\n\ntype ToggleHook = [boolean, (open: boolean) => void];\nexport const ToggleContext = createContext<ToggleHook>({} as ToggleHook);\n\nexport const ToggleProvider: React.FC<{}> = ({ children }) => {\n  const [toggle, setToggle] = useState(true);\n  return (\n    <ToggleContext.Provider value={[toggle, setToggle]}>\n      {children}\n    </ToggleContext.Provider>\n  );\n};\n","import { Divider, Drawer, IconButton, makeStyles } from \"@material-ui/core\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PagesIcon from '@material-ui/icons/Pages';\nimport clsx from 'clsx';\nimport React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { drawerWidth } from \"../../Main\";\nimport { AdminBasePath } from \"../../Routes\";\nimport { ToggleContext } from \"../providers/ToggleProvider\";\n\nconst useStyles = makeStyles((theme) => ({\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  }\n}));\n\n\nconst LeftMenu = () => {\n  const classes = useStyles();\n \n  const [toggle, setToggle] = useContext(ToggleContext);\n  const handleDrawerClose = () => {\n    setToggle(false);\n  };\n\n  return (\n    <Drawer\n      variant=\"permanent\"\n      classes={{\n        paper: clsx(classes.drawerPaper, !toggle && classes.drawerPaperClose),\n      }}\n      open={toggle}\n    >\n      <div className={classes.toolbarIcon}>\n        <IconButton onClick={handleDrawerClose}>\n          <ChevronLeftIcon />\n        </IconButton>\n      </div>\n      <Divider />\n      <List>{mainListItems}</List>\n      <Divider />\n      <List></List>\n    </Drawer>\n  );\n};\n\nconst mainListItems = (\n    <div>\n      <ListItem button component={Link} to={AdminBasePath}>\n        <ListItemIcon>\n          <DashboardIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Dashboard\" />\n      </ListItem>\n      <ListItem button component={Link} to={AdminBasePath + \"/post\"} >\n        <ListItemIcon>\n          <PagesIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Post\" />\n      </ListItem>\n    </div>\n);\nexport default LeftMenu;","import { Typography, Badge } from \"@material-ui/core\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport clsx from \"clsx\";\nimport React, { useContext } from \"react\";\nimport { drawerWidth } from \"../../Main\";\nimport { ToggleContext } from \"../providers/ToggleProvider\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport { useLocation } from \"react-router-dom\";\nimport { routesDefinition } from \"../../Routes\";\nimport { TokenContext } from \"../../../../providers/token/TokenProvider\";\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: \"none\",\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst TopBar = () => {\n  const classes = useStyles();\n  const [toggle, setToggle] = useContext(ToggleContext);\n  const [, , resetToken] = useContext(TokenContext);\n  const handleDrawerOpen = () => {\n    setToggle(true);\n  };\n  const location = useLocation();\n  const currentRoute = routesDefinition.find(\n    ({ path }) => path === location.pathname\n  );\n\n  return (\n    <AppBar\n      position=\"absolute\"\n      className={clsx(classes.appBar, toggle && classes.appBarShift)}\n    >\n      <Toolbar className={classes.toolbar}>\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={handleDrawerOpen}\n          className={clsx(\n            classes.menuButton,\n            toggle && classes.menuButtonHidden\n          )}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Typography\n          component=\"h1\"\n          variant=\"h6\"\n          color=\"inherit\"\n          noWrap\n          className={classes.title}\n        >\n          {currentRoute?.name}\n        </Typography>\n        <IconButton color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <IconButton\n          color=\"inherit\"\n          onClick={() => {\n            resetToken();\n            window.location.reload();\n          }}\n        >\n          <Badge color=\"secondary\">\n            <ExitToAppIcon />\n          </Badge>\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default TopBar;\n","import Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport Copyright from \"./common/components/CopyRight\";\nimport LeftMenu from \"./common/components/LeftMenu\";\nimport TopBar from \"./common/components/TopBar\";\nimport { ToggleProvider } from \"./common/providers/ToggleProvider\";\nimport Routes from \"./Routes\";\n\nexport const drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nconst Main = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <ToggleProvider>\n        <TopBar />\n        <LeftMenu />\n      </ToggleProvider>\n\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        {/* <Container maxWidth=\"lg\" className={classes.container}> */}\n        <Container className={classes.container}>\n          <Routes />\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n};\n\nexport default Main;\n"],"sourceRoot":""}