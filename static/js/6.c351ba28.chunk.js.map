{"version":3,"sources":["admin/modules/common/components/CopyRight.tsx","../node_modules/suneditor/src/lang sync /^/.//.*/.js$","admin/modules/post/components/Translations.tsx","admin/modules/dashboard/components/Dashboard.tsx","hooks/api/post/useGetPosts.ts","hooks/api/post/useDeletePost.ts","admin/modules/post/components/DeleteDialog.tsx","hooks/api/file/useDeleteFiles.ts","hooks/api/file/useMoveFiles.ts","hooks/api/post/useCreatePost.ts","hooks/api/post/useUpdatePost.ts","hooks/api/group/useGetGroupsByTitle.ts","admin/modules/post/components/MultiSelectTypeahead.tsx","hooks/api/language/useGetLanguages.ts","hooks/api/file/useImageUpload.ts","admin/modules/post/components/sun-editor/Editor.tsx","admin/modules/post/components/Post.tsx","admin/modules/post/components/PostDialog.tsx","admin/modules/Routes.tsx","admin/modules/common/providers/ToggleProvider.tsx","admin/modules/common/components/LeftMenu.tsx","admin/modules/common/components/TopBar.tsx","admin/modules/Main.tsx","hooks/api/useApiResult.ts"],"names":["Copyright","variant","color","align","href","Date","getFullYear","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","EditorType","useStyles","makeStyles","theme","paper","padding","spacing","display","overflow","flexDirection","fixedHeight","height","Dashboard","classes","fixedHeightPaper","clsx","Grid","container","item","xs","md","lg","Paper","className","getPosts","updated","process","method","useGetPosts","request","useMemo","useApiResult","deletePost","useDeletePost","undefined","DeleteDialog","props","useState","deleteId","setDeleteId","rows","error","useEffect","console","log","onClose","Action","Delete","Dialog","open","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","data","title","DialogActions","Button","onClick","autoFocus","deleteFiles","files","body","JSON","stringify","useDeleteFiles","doDelete","length","moveFiles","post","useMoveFiles","createPost","useCreatePost","updatePost","useUpdatePost","getGroups","titleSearch","useGetGroupsByTitle","MultiSelectTypeahead","control","setOpen","options","setOptions","inputValue","setInputValue","loading","onInputChange","debounce","event","value","render","Autocomplete","multiple","onOpen","field","getOptionSelected","option","getOptionLabel","onChange","_","renderInput","params","TextField","label","type","placeholder","InputProps","endAdornment","Fragment","CircularProgress","size","defaultValue","groups","name","getLanguages","useGetLanguages","uploadImage","fileId","file","content","formData","FormData","append","useImageUpload","minHeight","buttonList","complex","videoTagAttrs","contenteditable","attributesWhitelist","video","Editor","editor","useRef","getSunEditorInstance","sunEditor","core","fullPage","plugins","_setTagAttrs","element","attrs","key","util","hasOwn","setAttribute","current","uploadFile","setUploadFile","uploadedFileResult","uploadedFileError","localUploadHandlerFunc","handleImageUploadBefore","useCallback","info","uploadHandler","response","result","url","displayUrl","setUploadedFiles","filesByLang","get","languageId","push","set","errorMessage","onImageUploadBefore","onVideoUploadBefore","onBlur","fieldName","Translation","Html","editorType","setEditorType","margin","fullWidth","multiline","index","translation","head","Typography","component","alignItems","Switch","checked","Wysiwyg","postId","toString","uuid","pretty","javascript","isTranslationModified","Translations","languages","forEach","lang","register","setValue","currentTabIndex","setCurrentTabIndex","square","Tabs","indicatorColor","textColor","tab","aria-label","Tab","aria-controls","translations","find","tran","role","hidden","Box","p","appBar","position","marginLeft","flex","Transition","React","forwardRef","ref","Slide","direction","action","Update","Create","Form","useForm","shouldUnregister","handleSubmit","Map","uploadedFiles","setData","stay","setStay","onSubmit","filter","CreatePost","isEmpty","Array","from","values","toFlatFiles","movedFiles","moveFileError","UpdatePost","DialogForm","slug","description","TopBar","setDoDelete","AppBar","Toolbar","IconButton","edge","defaultVal","flat","val","PostDialog","fullScreen","TransitionComponent","root","width","maxHeight","columns","minWidth","PostsTable","handleClickOpen","TableContainer","Table","stickyHeader","TableHead","TableRow","column","TableCell","style","TableBody","row","hover","tabIndex","ActionButtons","AdminBasePath","routesDefinition","path","openDelete","setOpenDelete","saved","setSaved","handleClose","Routes","exact","ToggleContext","createContext","ToggleProvider","children","toggle","setToggle","Provider","toolbarIcon","justifyContent","mixins","toolbar","drawerPaper","whiteSpace","drawerWidth","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerPaperClose","overflowX","leavingScreen","breakpoints","up","mainListItems","ListItem","button","Link","to","ListItemIcon","ListItemText","primary","LeftMenu","useContext","Drawer","Divider","List","paddingRight","zIndex","drawer","appBarShift","menuButton","marginRight","menuButtonHidden","flexGrow","TokenContext","resetToken","location","useLocation","currentRoute","pathname","noWrap","Badge","badgeContent","window","reload","appBarSpacer","paddingTop","paddingBottom","Main","CssBaseline","Container","pt","results","setResults","setError","requester","useRequest","isCancelled","then","a","ok","json","text","catch","err","message"],"mappings":"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","file":"static/js/6.c351ba28.chunk.js","sourcesContent":["import Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport React from \"react\";\n\nconst Copyright = () => {\n    return (\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Copyright © '}\n        <Link color=\"inherit\" href=\"https://material-ui.com/\">\n         CMS Admin \n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    );\n  }\n  \nexport default Copyright;\n","var map = {\n\t\"./ckb.js\": 143,\n\t\"./da.js\": 144,\n\t\"./de.js\": 145,\n\t\"./en.js\": 122,\n\t\"./es.js\": 146,\n\t\"./fr.js\": 147,\n\t\"./he.js\": 148,\n\t\"./index.js\": 219,\n\t\"./it.js\": 149,\n\t\"./ja.js\": 150,\n\t\"./ko.js\": 151,\n\t\"./lv.js\": 152,\n\t\"./nl.js\": 153,\n\t\"./pl.js\": 154,\n\t\"./pt_br.js\": 155,\n\t\"./ro.js\": 156,\n\t\"./ru.js\": 157,\n\t\"./se.js\": 158,\n\t\"./ua.js\": 159,\n\t\"./zh_cn.js\": 160\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 218;","import {\n  Box,\n  Grid,\n  Paper,\n  Switch,\n  Tab,\n  Tabs,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport pretty from \"pretty\";\nimport { Dispatch, SetStateAction, useState } from \"react\";\nimport {\n  Control,\n  Controller,\n  UseFormRegister,\n  UseFormSetValue,\n} from \"react-hook-form\";\nimport { v4 as uuid } from \"uuid\";\nimport useGetLanguages from \"../../../../hooks/api/language/useGetLanguages\";\nimport { LanguageModel } from \"../model/language\";\nimport { FileModel, PostModel, TranslationModel } from \"../model/post\";\nimport Editor from \"./sun-editor/Editor\";\nenum EditorType {\n  Html,\n  Wysiwyg,\n}\n\ninterface TranslationsProps {\n  translations?: TranslationModel[];\n  control: Control<PostModel>;\n  postId?: number;\n  setUploadedFiles: Dispatch<SetStateAction<Map<number, FileModel[]>>>;\n  register: UseFormRegister<PostModel>;\n  setValue: UseFormSetValue<PostModel>;\n}\n\ninterface TranslationProps {\n  translation?: TranslationModel;\n  control: Control<PostModel>;\n  postId?: number;\n  languageId: number;\n  index: number;\n  setUploadedFiles: Dispatch<SetStateAction<Map<number, FileModel[]>>>;\n}\n\nconst Translations = (props: TranslationsProps) => {\n  const [languages, error] = useGetLanguages(true);\n  if (error !== null) {\n    console.log(error);\n  }\n\n  languages?.forEach((lang: LanguageModel, index: number) => {\n    props.register(`translations.${index}.files` as const);\n    props.register(`translations.${index}.languageId` as const);\n    props.setValue(\n      `translations.${index}.languageId` as \"translations.0.languageId\",\n      lang.id\n    );\n  });\n\n  const [currentTabIndex, setCurrentTabIndex] = useState(0);\n\n  const handleTabChange = (event: React.ChangeEvent<{}>, tab: number) => {\n    setCurrentTabIndex(tab);\n  };\n\n  return (\n    <Paper square>\n      <Tabs\n        value={currentTabIndex}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        onChange={handleTabChange}\n        aria-label=\"disabled tabs example\"\n      >\n        {languages?.map((lang: LanguageModel, key: number) => {\n          return (\n            <Tab\n              key={key}\n              label={lang.name}\n              id={`translation-tab-${key}`}\n              aria-controls={`translation-tabpanel-${key}`}\n            />\n          );\n        })}\n      </Tabs>\n      {languages?.map((lang: LanguageModel, key: number) => {\n        const translation = props?.translations?.find(\n          (tran) => tran.languageId === lang.id\n        );\n        return (\n          <div\n            key={key}\n            role=\"tabpanel\"\n            hidden={currentTabIndex !== key}\n            id={`translation-tabpanel-${key}`}\n            aria-labelledby={`translation-tab-${key}`}\n          >\n            {currentTabIndex === key && (\n              <Box p={3}>\n                <Translation\n                  translation={translation}\n                  postId={props.postId}\n                  control={props.control}\n                  setUploadedFiles={props.setUploadedFiles}\n                  languageId={lang.id}\n                  index={key}\n                />\n              </Box>\n            )}\n          </div>\n        );\n      })}\n    </Paper>\n  );\n};\n\nconst Translation = (props: TranslationProps) => {\n  const [editorType, setEditorType] = useState<EditorType>(EditorType.Html);\n  return (\n    <>\n      <Controller\n        render={({ field }) => (\n          <TextField\n            margin=\"dense\"\n            id=\"head\"\n            label=\"Head\"\n            type=\"text\"\n            fullWidth\n            multiline\n            rows={8}\n            {...field}\n          />\n        )}\n        control={props.control}\n        name={`translations.${props.index}.head` as `translations.0.head`}\n        defaultValue={props.translation?.head}\n      />\n      <Typography component=\"div\">\n        <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\n          <Grid item>HTML</Grid>\n          <Grid item>\n            <Switch\n              name=\"editorType\"\n              checked={editorType === EditorType.Wysiwyg}\n              onChange={() => {\n                editorType === EditorType.Wysiwyg\n                  ? setEditorType(EditorType.Html)\n                  : setEditorType(EditorType.Wysiwyg);\n              }}\n            />\n          </Grid>\n          <Grid item>Wysiwyg</Grid>\n        </Grid>\n      </Typography>\n      {editorType === EditorType.Wysiwyg ? (\n        <Editor\n          content={props.translation?.content}\n          control={props.control}\n          setUploadedFiles={props.setUploadedFiles}\n          fileId={props.postId?.toString() ?? uuid()}\n          fieldName={\n            `translations.${props?.index}.content` as \"translations.0.content\"\n          }\n          languageId={props.languageId}\n        />\n      ) : (\n        <Controller\n          render={({ field }) => (\n            <TextField\n              margin=\"dense\"\n              id=\"content\"\n              label=\"Content\"\n              type=\"text\"\n              fullWidth\n              multiline\n              rows={20}\n              {...field}\n            />\n          )}\n          control={props.control}\n          name={\n            `translations.${props?.index}.content` as \"translations.0.content\"\n          }\n          // defaultValue={(new formatStringToHtml(post?.content ?? '')).format()}\n          defaultValue={pretty(props.translation?.content)}\n        />\n      )}\n      {/*\n        <MuiEditor\n          post={post}\n          control={control}\n          setValue={setValue}\n          setUploadedFiles={setUploadedFiles}\n          fileId={post?.id?.toString() ?? uuid()}\n        />\n        */}\n      <Controller\n        render={({ field }) => (\n          <TextField\n            margin=\"dense\"\n            id=\"javascript\"\n            label=\"Javascript\"\n            type=\"text\"\n            fullWidth\n            multiline\n            rows={20}\n            {...field}\n          />\n        )}\n        control={props.control}\n        name={\n          `translations.${props?.index}.javascript` as \"translations.0.javascript\"\n        }\n        defaultValue={props.translation?.javascript}\n      />\n      <Controller\n        render={({ field }) => (\n          <TextField\n            margin=\"dense\"\n            id=\"title\"\n            label=\"Title\"\n            type=\"text\"\n            fullWidth\n            multiline\n            rows={8}\n            {...field}\n          />\n        )}\n        control={props.control}\n        name={`translations.${props.index}.title` as `translations.0.title`}\n        defaultValue={props.translation?.title}\n      />\n    </>\n  );\n};\n\nexport const isTranslationModified = (translation: TranslationModel): boolean =>\n  translation.content != null ||\n  translation.head != null ||\n  translation.javascript != null ||\n  translation.title != null;\n\nexport default Translations;\n","import Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from 'clsx';\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nconst Dashboard = () => {\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  return (\n    <Grid container spacing={3}>\n      {/* Chart */}\n      <Grid item xs={12} md={8} lg={9}>\n        <Paper className={fixedHeightPaper}></Paper>\n      </Grid>\n      {/* Recent Deposits */}\n      <Grid item xs={12} md={4} lg={3}>\n        <Paper className={fixedHeightPaper}></Paper>\n      </Grid>\n      {/* Recent Orders */}\n      <Grid item xs={12}>\n        <Paper className={classes.paper}></Paper>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Dashboard;\n","import { useMemo } from \"react\";\nimport { IRequest } from \"../../../providers/request/Request\";\nimport useApiResult from \"../useApiResult\";\n\nconst useGetPosts = (updated: boolean) => {\n    //TODO may use it later for cache\n    const request = useMemo(() => getPosts(updated), [updated]);\n    //const request = getPosts();\n    return useApiResult(request);\n};\n\n\nconst getPosts = (updated: boolean): IRequest => {\n    return [\n        `${process.env.REACT_APP_CONTENT_API_BASE_URL}/posts`,\n        {\n            method: \"GET\",\n        },\n    ];\n};\n\nexport default useGetPosts;","import { useMemo } from \"react\";\nimport { IRequest } from \"../../../providers/request/Request\";\nimport useApiResult from \"../useApiResult\";\n\nconst useDeletePost = (id?: number) => {\n    //TODO may use it later for cache\n    const request = useMemo(() => id ? deletePost(id) : undefined\n        , [id]);\n    return useApiResult(request);\n};\n\n\nconst deletePost = (id: number): IRequest => {\n    return [\n        `${process.env.REACT_APP_CONTENT_API_BASE_URL}/posts/${id}`,\n        {\n            method: \"DELETE\",\n        },\n    ];\n};\n\nexport default useDeletePost;","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport useDeletePost from \"../../../../hooks/api/post/useDeletePost\";\nimport { PostModel } from \"../model/post\";\nimport { Action } from \"./Post\";\n\ninterface DeleteDialogProps {\n  open: boolean;\n  onClose: (action: Action) => void;\n  data?: PostModel;\n}\n\nconst DeleteDialog = (props: DeleteDialogProps) => {\n  const [deleteId, setDeleteId] = useState<number>();\n  const [rows, error] = useDeletePost(deleteId);\n  // const closeIt = props.onClose(Action.Delete);\n  // const close = useCallback(() => closeIt, [closeIt]);\n\n  useEffect(() => {\n    console.log(\"Delete post: \", rows, error, deleteId);\n    if (rows && rows.id === deleteId) {\n      props.onClose(Action.Delete);\n      setDeleteId(undefined);\n    }\n  }, [rows, deleteId, error, props]);\n\n  return (\n    <Dialog\n      open={props.open}\n      onClose={() => props.onClose(Action.Delete)}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{\"Delete Post\"}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          Are you sure delete Post {props?.data?.title}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => props.onClose(Action.Delete)} color=\"primary\">\n          Cancel\n        </Button>\n        <Button\n          onClick={() => {\n            setDeleteId(props?.data?.id!);\n          }}\n          color=\"primary\"\n          autoFocus\n        >\n          Confirm\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default DeleteDialog;\n","import { useMemo } from \"react\";\nimport { FileModel } from \"../../../admin/modules/post/model/post\";\nimport { IRequest } from \"../../../providers/request/Request\";\nimport useApiResult from \"../useApiResult\";\n\nconst useDeleteFiles = (doDelete: Boolean, files?: FileModel[]) => {\n    const request = useMemo(() => doDelete && files && files?.length > 0 ? deleteFiles(files) : undefined, [doDelete, files]);\n    return useApiResult(request);\n};\n\nconst deleteFiles = (files: FileModel[]): IRequest => {\n    return [\n        `${process.env.REACT_APP_CONTENT_API_BASE_URL}/files`,\n        {\n            method: \"DELETE\",\n            body: JSON.stringify(files),\n        },\n    ];\n}\n\nexport default useDeleteFiles;","import { useMemo } from \"react\";\nimport { FileModel, PostModel } from \"../../../admin/modules/post/model/post\";\nimport { IRequest } from \"../../../providers/request/Request\";\nimport useApiResult from \"../useApiResult\";\n\nconst useMoveFiles = (files: FileModel[], post?: PostModel) => {\n\n    const request = useMemo(() => files.length > 0 && post?.id ? moveFiles(files, post) : undefined, [post, files]);\n    return useApiResult(request);\n};\n\nconst moveFiles = (files: FileModel[], post?: PostModel): IRequest => {\n\n    return [\n        `${process.env.REACT_APP_CONTENT_API_BASE_URL}/files/${post?.id}`,\n        {\n            method: \"PUT\",\n            body: JSON.stringify(files),\n        },\n    ];\n}\n\nexport default useMoveFiles;","import { useMemo } from \"react\";\nimport { PostModel } from \"../../../admin/modules/post/model/post\";\nimport { IRequest } from \"../../../providers/request/Request\";\nimport useApiResult from \"../useApiResult\";\n\nconst useCreatePost = (post?: PostModel) => {\n    //TODO may use it later for cache\n    const request = useMemo(() => createPost(post), [post]);\n    return useApiResult(request);\n};\n\nconst createPost = (post?: PostModel): IRequest => {\n    return [\n        `${process.env.REACT_APP_CONTENT_API_BASE_URL}/posts`,\n        {\n            body: JSON.stringify(post),\n            method: \"POST\",\n        },\n    ];\n}\n\nexport default useCreatePost;","import { useMemo } from \"react\";\nimport { PostModel } from \"../../../admin/modules/post/model/post\";\nimport { IRequest } from \"../../../providers/request/Request\";\nimport useApiResult from \"../useApiResult\";\n\nconst useUpdatePost = (post?: PostModel) => {\n    //TODO may use it later for cache\n    const request = useMemo(() => updatePost(post), [post]);\n    return useApiResult(request);\n};\n\nconst updatePost = (post?: PostModel): IRequest => {\n    return [\n        `${process.env.REACT_APP_CONTENT_API_BASE_URL}/posts/${post?.id}`,\n        {\n            body: JSON.stringify(post),\n            method: \"PUT\",\n        },\n    ];\n}\n\nexport default useUpdatePost;","import { useMemo } from \"react\";\nimport { IRequest } from \"../../../providers/request/Request\";\nimport useApiResult from \"../useApiResult\";\n\nconst useGetGroupsByTitle = (titleSearch: string) => {\n    const request = useMemo(() => getGroups(titleSearch), [titleSearch]);\n    return useApiResult(request);\n};\n\n\nconst getGroups = (titleSearch: string): IRequest => {\n    return [\n        `${process.env.REACT_APP_CONTENT_API_BASE_URL}/groups?title=like&title=${titleSearch}`,\n        {\n            method: \"GET\",\n        },\n    ];\n};\n\nexport default useGetGroupsByTitle;","import { debounce } from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport React, { useState } from \"react\";\nimport { Controller } from \"react-hook-form\";\nimport { Control } from \"react-hook-form/dist/types\";\nimport useGetGroupsByTitle from \"../../../../hooks/api/group/useGetGroupsByTitle\";\nimport { GroupModel, GroupOmitPost } from \"../../group/model/group\";\nimport { PostModel } from \"../model/post\";\n\nconst MultiSelectTypeahead = ({\n  post,\n  control,\n}: {\n  post?: PostModel;\n  control: Control<PostModel>;\n}) => {\n  const [open, setOpen] = useState(false);\n  const [options, setOptions] = useState<GroupModel[]>([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const loading = open && options.length === 0;\n\n  const [rows, error] = useGetGroupsByTitle(inputValue);\n  console.log(error);\n\n  const onInputChange = debounce((event, value) => {\n    console.log(\"OnInputChange\", inputValue, value);\n    if (inputValue !== value) {\n      setInputValue(value);\n      setOptions(rows);\n    }\n  }, 1500);\n\n  return (\n    <div>\n      <Controller\n        render={(props) => (\n          <Autocomplete\n            multiple\n            id=\"groups\"\n            open={open}\n            onOpen={() => setOpen(true)}\n            onClose={() => setOpen(false)}\n            loading={loading}\n            options={options}\n            value={props.field.value as GroupModel[]}\n            getOptionSelected={(option: GroupModel, value: GroupOmitPost) =>\n              option.id === value.id\n            }\n            getOptionLabel={(option: GroupModel) => option.title}\n            onInputChange={onInputChange}\n            onChange={(_, data) => props.field.onChange(data)}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                variant=\"standard\"\n                id=\"groups\"\n                label=\"Groups\"\n                type=\"groups\"\n                placeholder=\"\"\n                InputProps={{\n                  ...params.InputProps,\n                  endAdornment: (\n                    <React.Fragment>\n                      {loading ? (\n                        <CircularProgress color=\"inherit\" size={20} />\n                      ) : null}\n                      {params.InputProps.endAdornment}\n                    </React.Fragment>\n                  ),\n                }}\n              />\n            )}\n          />\n        )}\n        defaultValue={post?.groups as GroupModel[]}\n        name=\"groups\"\n        control={control}\n      />\n    </div>\n  );\n};\n\nexport default MultiSelectTypeahead;\n","import { useMemo } from \"react\";\nimport { IRequest } from \"../../../providers/request/Request\";\nimport useApiResult from \"../useApiResult\";\n\nconst useGetLanguages = (updated: boolean) => {\n    const request = useMemo(() => getLanguages(updated), [updated]);\n    return useApiResult(request);\n};\n\n\nconst getLanguages = (updated: boolean): IRequest => {\n    return [\n        `${process.env.REACT_APP_CONTENT_API_BASE_URL}/languages`,\n        {\n            method: \"GET\",\n        },\n    ];\n};\n\nexport default useGetLanguages;","import { useMemo } from \"react\";\nimport { IRequest } from \"../../../providers/request/Request\";\nimport useApiResult from \"../useApiResult\";\n\nconst useImageUpload = (fileId: string, file?: File, content?: string) => {\n\n    const request = useMemo(() => file ? uploadImage(fileId, file, content) : undefined, [fileId, content, file]);\n    console.log(\"===== upload call =====\", file, request);\n    return useApiResult(request);\n};\n\nconst uploadImage = (fileId: string, file: File, content?: string): IRequest => {\n    console.log(content);\n    const formData = new FormData();\n    formData.append(\"name\", `${file.name}`);\n    formData.append(\"file\", file);\n    formData.append(\"id\", `${fileId}`)\n\n    return [\n        `${process.env.REACT_APP_CONTENT_API_BASE_URL}/files`,\n        {\n            method: \"POST\",\n            body: formData,\n        },\n    ];\n}\n\nexport default useImageUpload;","import { useCallback, useRef } from \"react\";\nimport { Dispatch, SetStateAction, useEffect, useState } from \"react\";\nimport { Control, Controller, FieldPath } from \"react-hook-form\";\nimport SunEditor, { buttonList } from \"suneditor-react\";\nimport SetOptions from \"suneditor-react/dist/types/SetOptions\";\nimport \"suneditor/dist/css/suneditor.min.css\"; // Import Sun Editor's CSS File\nimport SunEditorCore from \"suneditor/src/lib/core\";\nimport useImageUpload from \"../../../../../hooks/api/file/useImageUpload\";\nimport { FileModel, PostModel } from \"../../model/post\";\n\ninterface EditorProps {\n  content?: string;\n  fieldName: FieldPath<PostModel>;\n  control: Control<PostModel>;\n  fileId: string;\n  setUploadedFiles: Dispatch<SetStateAction<Map<number, FileModel[]>>>;\n  languageId: number;\n}\n\nconst options: SetOptions = {\n  minHeight: \"400\",\n  height: \"300\",\n  buttonList: buttonList.complex,\n  videoTagAttrs: {\n    contenteditable: true,\n  },\n  attributesWhitelist: {\n    video: \"autoplay|muted|loop|controls\",\n  },\n  // mode: 'balloon',\n};\n\nconst Editor = (props: EditorProps) => {\n  /**\n   * @type {React.MutableRefObject<SunEditor>} get type definitions for editor\n   */\n  const editor = useRef<SunEditorCore>();\n\n  // The sunEditor parameter will be set to the core suneditor instance when this function is called\n  const getSunEditorInstance = (sunEditor: SunEditorCore) => {\n    const { core } = sunEditor;\n    console.log(\"is this full page \", core.options.fullPage);\n\n    // @ts-ignore\n    core.plugins.video._setTagAttrs = (element) => {\n      const attrs = core.options?.videoTagAttrs;\n      if (!attrs) return;\n\n      for (const key in attrs) {\n        if (!core.util.hasOwn(attrs, key)) continue;\n        element.setAttribute(key, attrs[key]);\n      }\n    };\n\n    editor.current = sunEditor;\n  };\n\n  const [uploadFile, setUploadFile] = useState<File>();\n  const [uploadedFileResult, uploadedFileError] = useImageUpload(\n    props.fileId,\n    uploadFile,\n    props.content\n  );\n  const localUploadHandlerFunc = useRef<Function>();\n  const handleImageUploadBefore = useCallback(\n    (files: Array<File>, info: object, uploadHandler: Function) => {\n      console.log(files, info);\n      setUploadFile(files[0]);\n      localUploadHandlerFunc.current = (response: any) =>\n        uploadHandler(response);\n      return undefined;\n    },\n    []\n  );\n\n  useEffect(() => {\n    if (uploadedFileResult && localUploadHandlerFunc.current) {\n      localUploadHandlerFunc.current({\n        result: [{ url: uploadedFileResult.displayUrl }],\n      });\n      localUploadHandlerFunc.current(undefined);\n      props.setUploadedFiles((files: Map<number, FileModel[]>) => {\n        let filesByLang = files.get(props.languageId);\n\n        if (filesByLang == null) {\n          filesByLang = [uploadedFileResult];\n        } else {\n          filesByLang?.push(uploadedFileResult);\n        }\n\n        files.set(props.languageId, filesByLang);\n        console.log(files);\n        return files;\n      });\n    }\n    if (uploadedFileError && localUploadHandlerFunc.current) {\n      console.log(\"error upload file \", uploadedFileError);\n      localUploadHandlerFunc.current({ errorMessage: uploadedFileError });\n      localUploadHandlerFunc.current(undefined);\n    }\n    setUploadFile(undefined);\n  }, [uploadedFileResult, uploadedFileError, props]);\n\n  return (\n    <>\n      <Controller\n        render={({ field }) => (\n          <SunEditor\n            getSunEditorInstance={getSunEditorInstance}\n            defaultValue={props.content}\n            setOptions={options}\n            onImageUploadBefore={handleImageUploadBefore}\n            onVideoUploadBefore={handleImageUploadBefore}\n            name={field.name}\n            onChange={field.onChange}\n            onBlur={field.onBlur}\n          />\n        )}\n        name={props.fieldName}\n        defaultValue={props.content}\n        control={props.control}\n      />\n    </>\n  );\n};\n\nexport default Editor;\n","import {\n  makeStyles,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport _ from \"lodash\";\nimport React from \"react\";\nimport useGetPosts from \"../../../../hooks/api/post/useGetPosts\";\nimport { PostModel } from \"../model/post\";\nimport DeleteDialog from \"./DeleteDialog\";\nimport PostDialog from \"./PostDialog\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n  },\n  container: {\n    maxHeight: 440,\n  },\n});\n\nexport enum Action {\n  Delete,\n  Update,\n  Create,\n}\n\nconst Post = () => {\n  const [open, setOpen] = React.useState(false);\n  const [openDelete, setOpenDelete] = React.useState(false);\n  const [saved, setSaved] = React.useState(false);\n  const [data, setData] = React.useState<PostModel>();\n\n  const handleClickOpen = (action: Action, data?: PostModel) => {\n    switch (action) {\n      case Action.Create:\n      case Action.Update:\n        setOpen(true);\n        break;\n      case Action.Delete:\n        setOpenDelete(true);\n        break;\n    }\n\n    if (data) {\n      setData(data);\n    }\n  };\n\n  const handleClose = (action: Action) => {\n    console.log(\"close dialog\");\n    switch (action) {\n      case Action.Create:\n      case Action.Update:\n        setOpen(false);\n        break;\n      case Action.Delete:\n        setOpenDelete(false);\n        break;\n    }\n    setData(undefined);\n    setSaved(!saved);\n  };\n\n  return (\n    <Grid container spacing={3}>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => handleClickOpen(Action.Create)}\n      >\n        Create\n      </Button>\n      <PostDialog open={open} onClose={handleClose} data={data} />\n      <DeleteDialog open={openDelete} onClose={handleClose} data={data} />\n      <Grid item xs={12}>\n        <PostsTable updated={saved} handleClickOpen={handleClickOpen} />\n      </Grid>\n    </Grid>\n  );\n};\n\nconst columns = [\n  { id: \"id\", label: \"ID\", minWidth: 170 },\n  { id: \"title\", label: \"Title\", minWidth: 100 },\n  { id: \"slug\", label: \"Slug\", minWidth: 100 },\n  { id: \"createAt\", label: \"Create At\", minWidth: 100 },\n  { id: \"updateAt\", label: \"Update At\", minWidth: 100 },\n  { id: \"actions\", label: \"Actions\", minWidth: 100 },\n];\n\nconst PostsTable = ({\n  updated,\n  handleClickOpen,\n}: {\n  updated: boolean;\n  handleClickOpen: (action: Action, data?: PostModel) => void;\n}) => {\n  const classes = useStyles();\n  const [rows, error] = useGetPosts(updated);\n  if (error !== null) {\n    console.log(error);\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {/* rows !== null\n              ? rows.map((row: any) => {\n                  return <div>{row[\"id\"]}{row[\"content\"]}</div>;\n                })\n            : \"\" */}\n            {rows !== null ? (\n              rows.map((row: PostModel) => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row[\"id\"]}>\n                    {columns.map((column) => {\n                      return (\n                        <TableCell key={column.id}>\n                          {column.id === \"actions\" ? (\n                            <ActionButtons\n                              handleClickOpen={handleClickOpen}\n                              row={row}\n                            />\n                          ) : (\n                            _.get(row, column.id)\n                          )}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })\n            ) : (\n              <TableRow>\n                <TableCell key=\"NO_DATA\">NO Data</TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Paper>\n  );\n};\n\nconst ActionButtons = ({\n  handleClickOpen,\n  row,\n}: {\n  handleClickOpen: (action: Action, data?: PostModel) => void;\n  row: PostModel;\n}) => {\n  return (\n    <div>\n      <Button\n        color=\"secondary\"\n        variant=\"contained\"\n        onClick={() => handleClickOpen(Action.Update, row)}\n      >\n        Edit\n      </Button>\n      <Button\n        color=\"default\"\n        variant=\"contained\"\n        onClick={() => handleClickOpen(Action.Delete, row)}\n      >\n        Delete\n      </Button>\n    </div>\n  );\n};\n\nexport default Post;\n","import AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport _ from \"lodash\";\nimport Slide, { SlideProps } from \"@material-ui/core/Slide\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport React, { Dispatch, SetStateAction, useEffect, useState } from \"react\";\nimport {\n  Control,\n  Controller,\n  useForm,\n  UseFormRegister,\n  UseFormSetValue,\n} from \"react-hook-form\";\nimport useDeleteFiles from \"../../../../hooks/api/file/useDeleteFiles\";\nimport useMoveFiles from \"../../../../hooks/api/file/useMoveFiles\";\nimport useCreatePost from \"../../../../hooks/api/post/useCreatePost\";\nimport useUpdatePost from \"../../../../hooks/api/post/useUpdatePost\";\nimport { FileModel, PostModel, TranslationModel } from \"../model/post\";\nimport MultiSelectTypeahead from \"./MultiSelectTypeahead\";\nimport { Action } from \"./Post\";\nimport Translations, { isTranslationModified } from \"./Translations\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n}));\n\nconst Transition = React.forwardRef<unknown, SlideProps>((props, ref) => {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\ninterface PostDialogProps {\n  open: boolean;\n  onClose: (action: Action) => void;\n  data?: PostModel;\n}\n\nconst action = (data?: PostModel) => (data ? Action.Update : Action.Create);\n\nconst PostDialog = (props: PostDialogProps) => {\n  return (\n    <div>\n      <Dialog\n        fullScreen\n        open={props.open}\n        onClose={() => props.onClose(action(props.data))}\n        TransitionComponent={Transition}\n      >\n        <Form\n          open={props.open}\n          onClose={() => props.onClose(action(props.data))}\n          data={props.data}\n        />\n      </Dialog>\n    </div>\n  );\n};\n\nconst Form = (props: PostDialogProps) => {\n  const {\n    register,\n    handleSubmit,\n    // watch,\n    control,\n    setValue,\n    //  formState: { errors },\n  } = useForm<PostModel>({\n    shouldUnregister: false,\n  });\n  const [uploadedFiles, setUploadedFiles] = useState<Map<number, FileModel[]>>(\n    new Map(\n      props.data?.translations?.map((tran: TranslationModel) => [\n        tran.languageId,\n        tran.files,\n      ]) ?? []\n    )\n  );\n  const [data, setData] = useState<PostModel>();\n  const [stay, setStay] = useState<boolean>(false);\n  const onSubmit = (data: PostModel) => {\n    console.log(data);\n    data = { ...props?.data, ...data };\n    data.translations =\n      data.translations\n        .filter(\n          (tran: TranslationModel, index: number) =>\n            isTranslationModified(tran) ||\n            props?.data?.translations[index] != null\n        )\n        .map((tran: TranslationModel, index: number) => {\n          if (!isTranslationModified(tran)) {\n            return props!.data!.translations[index];\n          }\n          console.log(tran, data.translations[index]);\n          return { ...props?.data?.translations[index], ...tran };\n        }) ?? data.translations;\n    console.log(\"after prepend\", data);\n    setData(data);\n  };\n  // register(\"files\");\n  // console.log(watch(\"title\"));\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <TopBar\n          data={props.data}\n          onClose={props.onClose}\n          uploadedFiles={uploadedFiles}\n          setStay={setStay}\n        />\n        <DialogForm\n          register={register}\n          post={props?.data}\n          control={control}\n          setValue={setValue}\n          setUploadedFiles={setUploadedFiles}\n        />\n      </form>\n      {data &&\n        (props?.data ? (\n          <UpdatePost\n            data={data}\n            stay={stay}\n            setData={setData}\n            onClose={props.onClose}\n          />\n        ) : (\n          <CreatePost\n            post={data}\n            stay={stay}\n            setData={setData}\n            uploadedFiles={uploadedFiles}\n            setUploadedFiles={setUploadedFiles}\n            onClose={props.onClose}\n          />\n        ))}\n    </div>\n  );\n};\n\nconst CreatePost = ({\n  post,\n  stay,\n  setData,\n  uploadedFiles,\n  setUploadedFiles,\n  onClose,\n}: {\n  post?: PostModel;\n  stay: boolean;\n  setData: Dispatch<SetStateAction<PostModel | undefined>>;\n  uploadedFiles: Map<number, FileModel[]>;\n  setUploadedFiles: Dispatch<SetStateAction<Map<number, FileModel[]>>>;\n  onClose: (action: Action) => void;\n}) => {\n  if (post) {\n    if (!_.isEmpty(uploadedFiles)) {\n      console.log(post);\n      Array.from(uploadedFiles.values()).forEach((files, index) => {\n        console.log(files, index);\n        post.translations[index].files = files;\n      });\n    }\n  }\n  const [rows, error] = useCreatePost(post);\n  console.log(\"Create post: \", rows, error);\n\n  const [movedFiles, moveFileError] = useMoveFiles(\n    toFlatFiles(uploadedFiles, [] as FileModel[]),\n    rows\n  );\n  console.log(\"Move files: \", movedFiles, moveFileError);\n  useEffect(() => {\n    if (rows) {\n      console.log(\"Create post clean data\");\n      if (!stay) {\n        onClose(action({} as PostModel));\n      }\n      setData(undefined);\n      setUploadedFiles({} as Map<number, FileModel[]>);\n    }\n  }, [rows, setData, onClose, setUploadedFiles, stay]);\n\n  return null;\n};\n\nconst UpdatePost = ({\n  data,\n  stay,\n  setData,\n  onClose,\n}: {\n  data?: PostModel;\n  stay: boolean;\n  setData: (data?: PostModel) => void;\n  onClose: (action: Action) => void;\n}) => {\n  const [rows, error] = useUpdatePost(data);\n  console.log(\"Update post: \", rows, error);\n  useEffect(() => {\n    if (rows && rows.id === data?.id) {\n      console.log(\"update post clean data\");\n      if (!stay) {\n        onClose(action(data));\n      }\n      setData(undefined);\n    }\n  }, [data, rows, setData, onClose, stay]);\n\n  return null;\n};\n\nconst DialogForm = ({\n  register,\n  post,\n  control,\n  setValue,\n  setUploadedFiles,\n}: {\n  register: UseFormRegister<PostModel>;\n  post?: PostModel;\n  control: Control<PostModel>;\n  setValue: UseFormSetValue<PostModel>;\n  setUploadedFiles: Dispatch<SetStateAction<Map<number, FileModel[]>>>;\n}) => {\n  return (\n    <DialogContent>\n      <TextField\n        autoFocus\n        margin=\"dense\"\n        id=\"name\"\n        label=\"Title\"\n        type=\"title\"\n        fullWidth\n        {...register(\"title\")}\n        defaultValue={post?.title}\n      />\n      <MultiSelectTypeahead post={post} control={control} />\n      <Controller\n        render={({ field }) => (\n          <TextField\n            margin=\"dense\"\n            id=\"slug\"\n            label=\"Slug\"\n            type=\"text\"\n            fullWidth\n            {...field}\n          />\n        )}\n        control={control}\n        name=\"slug\"\n        defaultValue={post?.slug ?? \"\"}\n      />\n      <Controller\n        render={({ field }) => (\n          <TextField\n            margin=\"dense\"\n            id=\"description\"\n            label=\"Description\"\n            type=\"text\"\n            fullWidth\n            multiline\n            rows={1}\n            {...field}\n          />\n        )}\n        control={control}\n        name=\"description\"\n        defaultValue={post?.description}\n      />\n      <Translations\n        translations={post?.translations}\n        postId={post?.id}\n        control={control}\n        setUploadedFiles={setUploadedFiles}\n        register={register}\n        setValue={setValue}\n      />\n    </DialogContent>\n  );\n};\n\nconst TopBar = ({\n  data,\n  onClose,\n  uploadedFiles,\n  setStay,\n}: {\n  data?: PostModel;\n  onClose: (action: Action) => void;\n  uploadedFiles: Map<number, FileModel[]>;\n  setStay: Dispatch<SetStateAction<boolean>>;\n}) => {\n  const classes = useStyles();\n  const [doDelete, setDoDelete] = useState<boolean>(false);\n  console.log(uploadedFiles);\n  const [rows, error] = useDeleteFiles(\n    doDelete,\n    toFlatFiles(uploadedFiles, undefined)\n  );\n\n  useEffect(() => {\n    if (doDelete) {\n      console.log(\"do delete file\", doDelete, uploadedFiles);\n      setDoDelete(false);\n      onClose(action(data));\n    }\n  }, [data, doDelete, onClose, uploadedFiles]);\n\n  console.log(\"delete file\", error, rows);\n  return (\n    <AppBar className={classes.appBar}>\n      <Toolbar>\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          onClick={() => {\n            console.log(\"closing dialog\", uploadedFiles);\n            setDoDelete(true);\n          }}\n          aria-label=\"close\"\n        >\n          <CloseIcon />\n        </IconButton>\n        <Typography variant=\"h6\" className={classes.title}>\n          Post\n        </Typography>\n        <Button\n          autoFocus\n          color=\"inherit\"\n          type=\"submit\"\n          onClick={() => {\n            setStay(true);\n          }}\n        >\n          save and continue edit\n        </Button>\n        <Button\n          autoFocus\n          color=\"inherit\"\n          type=\"submit\"\n          onClick={() => {\n            setStay(false);\n          }}\n        >\n          save\n        </Button>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nconst toFlatFiles = (files: Map<number, FileModel[]>, defaultVal: any) =>\n  _.isEmpty(files)\n    ? defaultVal\n    : Array.from(files.values())\n        .flat()\n        .filter((val: FileModel) => val != null);\n\nexport default PostDialog;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Dashboard from \"./dashboard/components/Dashboard\";\nimport Post from \"./post/components/Post\";\n\nexport const AdminBasePath = \"/admin\";\nexport const routesDefinition = [\n  { path: AdminBasePath, name: \"Dashboard\", component: Dashboard },\n  { path: AdminBasePath + \"/post\", name: \"Post\", component: Post },\n];\n\nconst Routes = () => (\n  <Switch>\n    {routesDefinition.map(({ path, component }, key) => (\n      <Route exact path={path} key={key} component={component} />\n    ))}\n  </Switch>\n);\n\nexport default Routes;\n","import { createContext, useState } from \"react\";\n\ntype ToggleHook = [boolean, (open: boolean) => void];\nexport const ToggleContext = createContext<ToggleHook>({} as ToggleHook);\n\nexport const ToggleProvider: React.FC<{}> = ({ children }) => {\n  const [toggle, setToggle] = useState(true);\n  return (\n    <ToggleContext.Provider value={[toggle, setToggle]}>\n      {children}\n    </ToggleContext.Provider>\n  );\n};\n","import { Divider, Drawer, IconButton, makeStyles } from \"@material-ui/core\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PagesIcon from '@material-ui/icons/Pages';\nimport clsx from 'clsx';\nimport React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { drawerWidth } from \"../../Main\";\nimport { AdminBasePath } from \"../../Routes\";\nimport { ToggleContext } from \"../providers/ToggleProvider\";\n\nconst useStyles = makeStyles((theme) => ({\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  }\n}));\n\n\nconst LeftMenu = () => {\n  const classes = useStyles();\n \n  const [toggle, setToggle] = useContext(ToggleContext);\n  const handleDrawerClose = () => {\n    setToggle(false);\n  };\n\n  return (\n    <Drawer\n      variant=\"permanent\"\n      classes={{\n        paper: clsx(classes.drawerPaper, !toggle && classes.drawerPaperClose),\n      }}\n      open={toggle}\n    >\n      <div className={classes.toolbarIcon}>\n        <IconButton onClick={handleDrawerClose}>\n          <ChevronLeftIcon />\n        </IconButton>\n      </div>\n      <Divider />\n      <List>{mainListItems}</List>\n      <Divider />\n      <List></List>\n    </Drawer>\n  );\n};\n\nconst mainListItems = (\n    <div>\n      <ListItem button component={Link} to={AdminBasePath}>\n        <ListItemIcon>\n          <DashboardIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Dashboard\" />\n      </ListItem>\n      <ListItem button component={Link} to={AdminBasePath + \"/post\"} >\n        <ListItemIcon>\n          <PagesIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Post\" />\n      </ListItem>\n    </div>\n);\nexport default LeftMenu;","import { Typography, Badge } from \"@material-ui/core\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport clsx from \"clsx\";\nimport React, { useContext } from \"react\";\nimport { drawerWidth } from \"../../Main\";\nimport { ToggleContext } from \"../providers/ToggleProvider\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport { useLocation } from \"react-router-dom\";\nimport { routesDefinition } from \"../../Routes\";\nimport { TokenContext } from \"../../../../providers/token/TokenProvider\";\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: \"none\",\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst TopBar = () => {\n  const classes = useStyles();\n  const [toggle, setToggle] = useContext(ToggleContext);\n  const [, , resetToken] = useContext(TokenContext);\n  const handleDrawerOpen = () => {\n    setToggle(true);\n  };\n  const location = useLocation();\n  const currentRoute = routesDefinition.find(\n    ({ path }) => path === location.pathname\n  );\n\n  return (\n    <AppBar\n      position=\"absolute\"\n      className={clsx(classes.appBar, toggle && classes.appBarShift)}\n    >\n      <Toolbar className={classes.toolbar}>\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={handleDrawerOpen}\n          className={clsx(\n            classes.menuButton,\n            toggle && classes.menuButtonHidden\n          )}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Typography\n          component=\"h1\"\n          variant=\"h6\"\n          color=\"inherit\"\n          noWrap\n          className={classes.title}\n        >\n          {currentRoute?.name}\n        </Typography>\n        <IconButton color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <IconButton\n          color=\"inherit\"\n          onClick={() => {\n            resetToken();\n            window.location.reload();\n          }}\n        >\n          <Badge color=\"secondary\">\n            <ExitToAppIcon />\n          </Badge>\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default TopBar;\n","import Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport Copyright from \"./common/components/CopyRight\";\nimport LeftMenu from \"./common/components/LeftMenu\";\nimport TopBar from \"./common/components/TopBar\";\nimport { ToggleProvider } from \"./common/providers/ToggleProvider\";\nimport Routes from \"./Routes\";\n\nexport const drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nconst Main = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <ToggleProvider>\n        <TopBar />\n        <LeftMenu />\n      </ToggleProvider>\n\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        {/* <Container maxWidth=\"lg\" className={classes.container}> */}\n        <Container className={classes.container}>\n          <Routes />\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n};\n\nexport default Main;\n","import { useEffect, useState } from \"react\";\nimport { IRequest } from \"../../providers/request/Request\";\nimport { useRequest } from \"../../providers/request/RequestProvider\";\n\nconst useApiResult = (request?: IRequest) => {\n    const [results, setResults] = useState(null);\n    const [error, setError] = useState<any>(null);\n    const requester = useRequest();\n\n    useEffect(() => {\n        let isCancelled = false;\n        if (request === undefined) {\n            setResults(null);\n            return;\n        }\n        requester(request).then(async (response: Response) => {\n            if (isCancelled) {\n                return;\n            }\n            if (response.ok) {\n                setResults(await response.json());\n                setError(null);\n            } else {\n                setError(await response.text());\n            }\n        }).catch((err) => {\n            setError(err.message);\n        });\n        return () => {\n            isCancelled = true;\n        };\n    }, [request, requester]);\n    return [results, error];\n};\n\nexport default useApiResult;\n"],"sourceRoot":""}