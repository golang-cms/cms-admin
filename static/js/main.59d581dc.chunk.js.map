{"version":3,"sources":["hooks/useToken.ts","providers/token/TokenProvider.tsx","providers/request/Request.ts","providers/request/RequestProvider.tsx","component/PrivateRoute.tsx","theme.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["STORAGE_USER_TOKEN_KEY","TokenContext","createContext","TokenProvider","children","useState","userToken","localStorage","getItem","JSON","parse","undefined","token","setToken","setItem","stringify","removeItem","useToken","resetToken","Provider","value","request","url","options","corsOptions","mode","fetch","RequestContext","useRequest","useContext","RequestProvider","PrivateRoute","props","Component","component","isSignedIn","rest","render","routeProps","to","pathname","state","from","location","borderColor","theme","createMuiTheme","palette","type","primary","main","secondary","common","black","warning","light","dark","tonalOffset","contrastThreshold","breakpoints","values","xl","lg","md","sm","xs","overrides","MuiExpansionPanel","root","position","MuiTableCell","paddingLeft","spacing","paddingRight","borderBottom","MuiDivider","backgroundColor","height","MuiListItem","divider","MuiDialog","paper","width","maxWidth","marginLeft","marginRight","MuiTooltip","tooltip","MuiExpansionPanelDetails","responsiveFontSizes","AdminComponent","lazy","LandingComponent","Routes","basename","process","fallback","path","App","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootElement","document","getElementById"],"mappings":"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","file":"static/js/main.59d581dc.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nconst STORAGE_USER_TOKEN_KEY = \"user_token\"\n\nexport interface UserToken {\n    accessToken: string,\n    refreshToken: string,\n    expiresIn: number,\n    refreshExpiresIn: number,\n}\n\nexport type UserTokenHook = [UserToken, (token: UserToken) => void, () => void];\n\nexport const useToken = (): UserTokenHook => {\n\n    const getToken = () => {\n        const userToken = localStorage.getItem(STORAGE_USER_TOKEN_KEY);\n        return userToken ? JSON.parse(userToken) : undefined;\n    }\n    const [token, setToken] = useState<UserToken>(getToken);\n\n    const saveToken = (userToken: UserToken) => {\n        localStorage.setItem(STORAGE_USER_TOKEN_KEY, JSON.stringify(userToken));\n        setToken(userToken)\n    }\n\n    const resetToken = () => {\n        localStorage.removeItem(STORAGE_USER_TOKEN_KEY);\n    }\n\n    return [token, saveToken, resetToken];\n}","import React, { createContext } from \"react\";\nimport { UserTokenHook, useToken } from \"../../hooks/useToken\";\n\nexport const TokenContext = createContext({} as UserTokenHook);\n\nexport const TokenProvider: React.FC<{}> = ({ children }) => {\n  const [token, setToken, resetToken] = useToken();\n  return (\n    <TokenContext.Provider value={[token, setToken, resetToken]}>\n      {children}\n    </TokenContext.Provider>\n  );\n};\n","\nexport type IRequest = [url: RequestInfo, options?: RequestInit];\nexport type IRequestFunc = (request: IRequest) => Promise<Response>;\n\nconst request: IRequestFunc = (request: IRequest): Promise<Response> => {\n    // we can swap out fetch with another library later on if needed\n    const [url, options] = request;\n    const corsOptions: RequestInit = {\n        mode: 'cors',\n        ...options\n    };\n    return fetch(url, corsOptions);\n}\n\nexport default request;","import React, { useContext, createContext } from \"react\";\nimport request, { IRequestFunc } from \"./Request\";\n\nexport const RequestContext = createContext({} as IRequestFunc);\n\nexport const useRequest = () => useContext(RequestContext);\n\nexport const RequestProvider: React.FC<{}> = ({ children }) => {\n  return (\n    <RequestContext.Provider value={request}>{children}</RequestContext.Provider>\n  );\n};","import * as React from \"react\";\nimport { Redirect, Route, RouteProps } from \"react-router-dom\";\ninterface PrivateRouteProps extends RouteProps {\n  // tslint:disable-next-line:no-any\n  component: any;\n  isSignedIn: boolean;\n}\n\nconst PrivateRoute = (props: PrivateRouteProps) => {\n  const { component: Component, isSignedIn, ...rest } = props;\n\n  return (\n    <Route\n      {...rest}\n      render={(routeProps) =>\n        isSignedIn ? (\n          <Component {...routeProps} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/\",\n              state: { from: routeProps.location },\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import { createMuiTheme, responsiveFontSizes } from \"@material-ui/core\";\n\n// colors\nconst primary = \"#b3294e\";\nconst secondary = \"#4829B2\";\nconst black = \"#343a40\";\nconst darkBlack = \"rgb(36, 40, 44)\";\n//const background = \"#f5f5f5\";\nconst warningLight = \"rgba(253, 200, 69, .3)\";\nconst warningMain = \"rgba(253, 200, 69, .5)\";\nconst warningDark = \"rgba(253, 200, 69, .7)\";\n\n// border\nconst borderWidth = 2;\nconst borderColor = \"rgba(0, 0, 0, 0.13)\";\n\n// breakpoints\nconst xl = 1920;\nconst lg = 1280;\nconst md = 960;\nconst sm = 600;\nconst xs = 0;\n\n// spacing\nconst spacing = 8;\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    primary: { main: primary },\n    secondary: { main: secondary },\n    common: {\n      black,\n      /* white: darkBlack */\n    },\n    warning: {\n      light: warningLight,\n      main: warningMain,\n      dark: warningDark\n    },\n    // Used to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset: 0.2,\n    /*\n    background: {\n      default: background\n    },\n    */\n    contrastThreshold: spacing\n  },\n  breakpoints: {\n    // Define custom breakpoint values.\n    // These will apply to Material-UI components that use responsive\n    // breakpoints, such as `Grid` and `Hidden`. You can also use the\n    // theme breakpoint functions `up`, `down`, and `between` to create\n    // media queries for these breakpoints\n    values: {\n      xl,\n      lg,\n      md,\n      sm,\n      xs\n    }\n  },\n  /*\n  border: {\n    borderColor: borderColor,\n    borderWidth: borderWidth\n  },\n  */\n  overrides: {\n    MuiExpansionPanel: {\n      root: {\n        position: \"static\"\n      }\n    },\n    MuiTableCell: {\n      root: {\n        paddingLeft: spacing * 2,\n        paddingRight: spacing * 2,\n        borderBottom: `${borderWidth}px solid ${borderColor}`,\n        [`@media (max-width:  ${sm}px)`]: {\n          paddingLeft: spacing,\n          paddingRight: spacing\n        }\n      }\n    },\n    MuiDivider: {\n      root: {\n        backgroundColor: borderColor,\n        height: borderWidth\n      }\n    },\n    /*\n    MuiPrivateNotchedOutline: {\n      root: {\n        borderWidth: borderWidth\n      }\n    },\n    */\n    MuiListItem: {\n      divider: {\n        borderBottom: `${borderWidth}px solid ${borderColor}`\n      }\n    },\n    MuiDialog: {\n      paper: {\n        width: \"100%\",\n        maxWidth: 430,\n        marginLeft: spacing,\n        marginRight: spacing\n      }\n    },\n    MuiTooltip: {\n      tooltip: {\n        backgroundColor: darkBlack\n      }\n    },\n    MuiExpansionPanelDetails: {\n      root: {\n        [`@media (max-width:  ${sm}px)`]: {\n          paddingLeft: spacing,\n          paddingRight: spacing\n        }\n      }\n    }\n  },\n  /*\n  typography: {\n    useNextVariants: true\n  }\n  */\n});\n\nexport default responsiveFontSizes(theme);","import { CssBaseline, MuiThemeProvider } from \"@material-ui/core\";\nimport React, { Fragment, lazy, Suspense, useContext } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport PrivateRoute from \"./component/PrivateRoute\";\nimport { RequestProvider } from \"./providers/request/RequestProvider\";\nimport { TokenContext, TokenProvider } from \"./providers/token/TokenProvider\";\n//import GlobalStyles from \"./GlobalStyles\";\nimport \"./styles.css\";\nimport theme from \"./theme\";\nconst AdminComponent = lazy(() => import(\"./admin/modules/Main\"));\nconst LandingComponent = lazy(() => import(\"./landing/modules/Main\"));\n\nconst App = () => {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <TokenProvider>\n        <RequestProvider>\n          <CssBaseline />\n          <Routes />\n          {/*<GlobalStyles /> */}\n          {/* <Pace color={theme.palette.primary.light} /> */}\n        </RequestProvider>\n      </TokenProvider>\n    </MuiThemeProvider>\n  );\n};\n\nconst Routes = () => {\n  const [token] = useContext(TokenContext);\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Suspense fallback={<Fragment />}>\n        <Switch>\n          {token ? (\n            <PrivateRoute\n              path={\"/\"}\n              component={AdminComponent}\n              isSignedIn={token ? true : false}\n            />\n          ) : (\n            <Route>\n              <LandingComponent />\n            </Route>\n          )}\n        </Switch>\n      </Suspense>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { render } from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}