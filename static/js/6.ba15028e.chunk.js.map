{"version":3,"sources":["hooks/api/useApiResult.ts","../node_modules/suneditor/src/lang sync /^/.//.*/.js$","admin/modules/post/components/PostDialog.tsx","admin/modules/dashboard/components/Dashboard.tsx","hooks/api/post/useGetPosts.ts","hooks/api/post/useDeletePost.ts","admin/modules/post/components/DeleteDialog.tsx","hooks/api/file/useDeleteFiles.ts","hooks/api/file/useMoveFiles.ts","hooks/api/post/useCreatePost.ts","hooks/api/post/useUpdatePost.ts","hooks/api/group/useGetGroupsByTitle.ts","admin/modules/post/components/MultiSelectTypeahead.tsx","hooks/api/file/useImageUpload.ts","admin/modules/post/components/sun-editor/Editor.tsx","admin/modules/post/components/Post.tsx","admin/modules/Routes.tsx","admin/modules/common/providers/ToggleProvider.tsx","admin/modules/common/components/LeftMenu.tsx","admin/modules/common/components/TopBar.tsx","admin/modules/Main.tsx"],"names":["useApiResult","request","useState","results","setResults","error","setError","requester","useRequest","useEffect","isCancelled","undefined","then","response","a","ok","json","text","catch","err","message","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","EditorType","useStyles","makeStyles","theme","paper","padding","spacing","display","overflow","flexDirection","fixedHeight","height","Dashboard","classes","fixedHeightPaper","clsx","Grid","container","item","xs","md","lg","Paper","className","getPosts","updated","process","method","useGetPosts","useMemo","deletePost","useDeletePost","DeleteDialog","props","deleteId","setDeleteId","rows","console","log","onClose","Action","Delete","Dialog","open","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","data","title","DialogActions","Button","onClick","color","autoFocus","deleteFiles","files","body","JSON","stringify","useDeleteFiles","doDelete","length","moveFiles","post","useMoveFiles","createPost","useCreatePost","updatePost","useUpdatePost","getGroups","titleSearch","useGetGroupsByTitle","MultiSelectTypeahead","control","setOpen","options","setOptions","inputValue","setInputValue","loading","onInputChange","debounce","event","value","render","Autocomplete","multiple","onOpen","field","getOptionSelected","option","getOptionLabel","onChange","_","renderInput","params","TextField","variant","label","type","placeholder","InputProps","endAdornment","Fragment","CircularProgress","size","defaultValue","groups","name","uploadImage","fileId","file","formData","FormData","append","useImageUpload","minHeight","buttonList","complex","videoTagAttrs","contenteditable","attributesWhitelist","video","Editor","editor","useRef","getSunEditorInstance","sunEditor","core","fullPage","plugins","_setTagAttrs","element","attrs","key","util","hasOwn","setAttribute","current","uploadFile","setUploadFile","uploadedFileResult","uploadedFileError","localUploadHandlerFunc","handleImageUploadBefore","useCallback","info","uploadHandler","result","url","displayUrl","setUploadedFiles","push","errorMessage","content","onImageUploadBefore","onVideoUploadBefore","onBlur","appBar","position","marginLeft","flex","Transition","React","forwardRef","ref","Slide","direction","action","Update","Create","Form","useForm","shouldUnregister","register","handleSubmit","setValue","uploadedFiles","setData","stay","setStay","onSubmit","CreatePost","movedFiles","moveFileError","UpdatePost","DialogForm","Html","editorType","setEditorType","margin","fullWidth","slug","multiline","description","Typography","component","alignItems","Switch","checked","Wysiwyg","toString","uuid","pretty","TopBar","setDoDelete","AppBar","Toolbar","IconButton","edge","aria-label","PostDialog","fullScreen","TransitionComponent","List","ListItem","button","ListItemText","primary","secondary","Divider","root","width","maxHeight","columns","minWidth","PostsTable","handleClickOpen","TableContainer","Table","stickyHeader","TableHead","TableRow","column","TableCell","style","TableBody","row","hover","role","tabIndex","get","ActionButtons","AdminBasePath","routesDefinition","path","openDelete","setOpenDelete","saved","setSaved","handleClose","Routes","exact","ToggleContext","createContext","ToggleProvider","children","toggle","setToggle","Provider","toolbarIcon","justifyContent","mixins","toolbar","drawerPaper","whiteSpace","drawerWidth","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerPaperClose","overflowX","leavingScreen","breakpoints","up","mainListItems","Link","to","ListItemIcon","LeftMenu","useContext","Drawer","paddingRight","zIndex","drawer","appBarShift","menuButton","marginRight","menuButtonHidden","flexGrow","TokenContext","resetToken","location","useLocation","currentRoute","find","pathname","noWrap","Badge","badgeContent","window","reload","appBarSpacer","paddingTop","paddingBottom","Main","CssBaseline","Container","Box","pt"],"mappings":"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","file":"static/js/6.ba15028e.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { IRequest } from \"../../providers/request/Request\";\nimport { useRequest } from \"../../providers/request/RequestProvider\";\n\nconst useApiResult = (request?: IRequest) => {\n    const [results, setResults] = useState(null);\n    const [error, setError] = useState<any>(null);\n    const requester = useRequest();\n\n    useEffect(() => {\n        let isCancelled = false;\n        if (request === undefined) {\n            setResults(null);\n            return;\n        }\n        requester(request).then(async (response: Response) => {\n            if (isCancelled) {\n                return;\n            }\n            if (response.ok) {\n                setResults(await response.json());\n                setError(null);\n            } else {\n                setError(await response.text());\n            }\n        }).catch((err) => {\n            setError(err.message);\n        });\n        return () => {\n            isCancelled = true;\n        };\n    }, [request, requester]);\n    return [results, error];\n};\n\nexport default useApiResult;\n","var map = {\n\t\"./ckb.js\": 200,\n\t\"./da.js\": 201,\n\t\"./de.js\": 202,\n\t\"./en.js\": 195,\n\t\"./es.js\": 203,\n\t\"./fr.js\": 204,\n\t\"./he.js\": 205,\n\t\"./index.js\": 245,\n\t\"./it.js\": 206,\n\t\"./ja.js\": 207,\n\t\"./ko.js\": 208,\n\t\"./lv.js\": 209,\n\t\"./nl.js\": 210,\n\t\"./pl.js\": 211,\n\t\"./pt_br.js\": 212,\n\t\"./ro.js\": 213,\n\t\"./ru.js\": 214,\n\t\"./se.js\": 215,\n\t\"./ua.js\": 216,\n\t\"./zh_cn.js\": 217\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 244;","import { Grid, Switch } from \"@material-ui/core\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Slide, { SlideProps } from \"@material-ui/core/Slide\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport React, { Dispatch, SetStateAction, useEffect, useState } from \"react\";\nimport {\n  Control,\n  Controller,\n  useForm,\n  UseFormRegister,\n  UseFormSetValue,\n} from \"react-hook-form\";\nimport { v4 as uuid } from \"uuid\";\nimport useDeleteFiles from \"../../../../hooks/api/file/useDeleteFiles\";\nimport useMoveFiles from \"../../../../hooks/api/file/useMoveFiles\";\nimport useCreatePost from \"../../../../hooks/api/post/useCreatePost\";\nimport useUpdatePost from \"../../../../hooks/api/post/useUpdatePost\";\nimport { FileModel, PostModel } from \"../model/post\";\nimport MultiSelectTypeahead from \"./MultiSelectTypeahead\";\nimport { Action } from \"./Post\";\nimport Editor from \"./sun-editor/Editor\";\nimport pretty from \"pretty\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n}));\n\nconst Transition = React.forwardRef<unknown, SlideProps>((props, ref) => {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\ninterface PostDialogProps {\n  open: boolean;\n  onClose: (action: Action) => void;\n  data?: PostModel;\n}\n\nconst action = (data?: PostModel) => (data ? Action.Update : Action.Create);\n\nconst PostDialog = (props: PostDialogProps) => {\n  return (\n    <div>\n      <Dialog\n        fullScreen\n        open={props.open}\n        onClose={() => props.onClose(action(props.data))}\n        TransitionComponent={Transition}\n      >\n        <Form\n          open={props.open}\n          onClose={() => props.onClose(action(props.data))}\n          data={props.data}\n        />\n        <List>\n          <ListItem button>\n            <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\" />\n          </ListItem>\n          <Divider />\n          <ListItem button>\n            <ListItemText\n              primary=\"Default notification ringtone\"\n              secondary=\"Tethys\"\n            />\n          </ListItem>\n        </List>\n      </Dialog>\n    </div>\n  );\n};\n\nconst Form = (props: PostDialogProps) => {\n  const {\n    register,\n    handleSubmit,\n    // watch,\n    control,\n    setValue,\n    //  formState: { errors },\n  } = useForm<PostModel>({\n    shouldUnregister: false,\n  });\n  const [uploadedFiles, setUploadedFiles] = useState<FileModel[]>(\n    props.data?.files ?? ([] as FileModel[])\n  );\n  const [data, setData] = useState<PostModel>();\n  const [stay, setStay] = useState<boolean>(false);\n  const onSubmit = (data: PostModel) => {\n    console.log(data);\n    data = { ...props?.data, ...data };\n    setData(data);\n  };\n  register(\"files\");\n  // console.log(watch(\"title\"));\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <TopBar\n          data={props.data}\n          onClose={props.onClose}\n          uploadedFiles={uploadedFiles}\n          setStay={setStay}\n        />\n        <DialogForm\n          register={register}\n          post={props?.data}\n          control={control}\n          setValue={setValue}\n          setUploadedFiles={setUploadedFiles}\n        />\n      </form>\n      {data &&\n        (props?.data ? (\n          <UpdatePost data={data} stay={stay} setData={setData} onClose={props.onClose} />\n        ) : (\n          <CreatePost\n            data={data}\n            stay={stay}\n            setData={setData}\n            uploadedFiles={uploadedFiles}\n            setUploadedFiles={setUploadedFiles}\n            onClose={props.onClose}\n          />\n        ))}\n    </div>\n  );\n};\n\nconst CreatePost = ({\n  data,\n  stay,\n  setData,\n  uploadedFiles,\n  setUploadedFiles,\n  onClose,\n}: {\n  data?: PostModel;\n  stay: boolean;\n  setData: Dispatch<SetStateAction<PostModel | undefined>>;\n  uploadedFiles: FileModel[];\n  setUploadedFiles: Dispatch<SetStateAction<FileModel[]>>;\n  onClose: (action: Action) => void;\n}) => {\n  if (data) {\n    data.files = uploadedFiles;\n    console.log(\"============ change upload files\", data);\n  }\n  const [rows, error] = useCreatePost(data);\n  console.log(\"Create post: \", rows, error);\n\n  const [movedFiles, moveFileError] = useMoveFiles(uploadedFiles, rows);\n  console.log(\"Move files: \", movedFiles, moveFileError);\n  useEffect(() => {\n    if (rows) {\n      console.log(\"Create post clean data\");\n      if (!stay) {\n        onClose(action({} as PostModel));\n      }\n      setData(undefined);\n      setUploadedFiles([] as FileModel[]);\n    }\n  }, [rows, setData, onClose, setUploadedFiles, stay]);\n\n  return null;\n};\n\nconst UpdatePost = ({\n  data,\n  stay,\n  setData,\n  onClose,\n}: {\n  data?: PostModel;\n  stay: boolean;\n  setData: (data?: PostModel) => void;\n  onClose: (action: Action) => void;\n}) => {\n  const [rows, error] = useUpdatePost(data);\n  console.log(\"Update post: \", rows, error);\n  useEffect(() => {\n    if (rows && rows.id === data?.id) {\n      console.log(\"update post clean data\");\n      if (!stay) {\n        onClose(action(data));\n      }\n      setData(undefined);\n    }\n  }, [data, rows, setData, onClose, stay]);\n\n  return null;\n};\n\nenum EditorType {\n  Html,\n  Wysiwyg,\n}\n\nconst DialogForm = ({\n  register,\n  post,\n  control,\n  setValue,\n  setUploadedFiles,\n}: {\n  register: UseFormRegister<PostModel>;\n  post?: PostModel;\n  control: Control<PostModel>;\n  setValue: UseFormSetValue<PostModel>;\n  setUploadedFiles: Dispatch<SetStateAction<FileModel[]>>;\n}) => {\n  const [editorType, setEditorType] = useState<EditorType>(EditorType.Html);\n  return (\n    <DialogContent>\n      <TextField\n        autoFocus\n        margin=\"dense\"\n        id=\"name\"\n        label=\"Title\"\n        type=\"title\"\n        fullWidth\n        {...register(\"title\")}\n        defaultValue={post?.title}\n      />\n      <MultiSelectTypeahead post={post} control={control} />\n      <Controller\n        render={({ field }) => (\n          <TextField\n            margin=\"dense\"\n            id=\"slug\"\n            label=\"Slug\"\n            type=\"text\"\n            fullWidth\n            {...field}\n          />\n        )}\n        control={control}\n        name=\"slug\"\n        defaultValue={post?.slug ?? \"\"}\n      />\n      <Controller\n        render={({ field }) => (\n          <TextField\n            margin=\"dense\"\n            id=\"description\"\n            label=\"Description\"\n            type=\"text\"\n            fullWidth\n            multiline\n            rows={8}\n            {...field}\n          />\n        )}\n        control={control}\n        name=\"description\"\n        defaultValue={post?.description}\n      />\n      <Typography component=\"div\">\n        <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\n          <Grid item>HTML</Grid>\n          <Grid item>\n            <Switch\n              name=\"editorType\"\n              checked={editorType === EditorType.Wysiwyg}\n              onChange={() => {\n                editorType === EditorType.Wysiwyg\n                  ? setEditorType(EditorType.Html)\n                  : setEditorType(EditorType.Wysiwyg);\n              }}\n            />\n          </Grid>\n          <Grid item>Wysiwyg</Grid>\n        </Grid>\n      </Typography>\n      {editorType === EditorType.Wysiwyg ? (\n        <Editor\n          post={post}\n          control={control}\n          setUploadedFiles={setUploadedFiles}\n          fileId={post?.id?.toString() ?? uuid()}\n        />\n      ) : (\n        <Controller\n          render={({ field }) => (\n            <TextField\n              margin=\"dense\"\n              id=\"content\"\n              label=\"Content\"\n              type=\"text\"\n              fullWidth\n              multiline\n              rows={20}\n              {...field}\n            />\n          )}\n          control={control}\n          name=\"content\"\n          // defaultValue={(new formatStringToHtml(post?.content ?? '')).format()}\n          defaultValue={pretty(post?.content)}\n        />\n      )}\n      {/*\n        <MuiEditor\n          post={post}\n          control={control}\n          setValue={setValue}\n          setUploadedFiles={setUploadedFiles}\n          fileId={post?.id?.toString() ?? uuid()}\n        />\n        */}\n    </DialogContent>\n  );\n};\n\nconst TopBar = ({\n  data,\n  onClose,\n  uploadedFiles,\n  setStay,\n}: {\n  data?: PostModel;\n  onClose: (action: Action) => void;\n  uploadedFiles: FileModel[];\n  setStay: Dispatch<SetStateAction<boolean>>;\n}) => {\n  const classes = useStyles();\n  const [doDelete, setDoDelete] = useState<boolean>(false);\n  const [rows, error] = useDeleteFiles(doDelete, uploadedFiles);\n\n  useEffect(() => {\n    if (doDelete) {\n      console.log(\"do delete file\", doDelete, uploadedFiles);\n      setDoDelete(false);\n      onClose(action(data));\n    }\n  }, [data, doDelete, onClose, uploadedFiles]);\n\n  console.log(\"delete file\", error, rows);\n  return (\n    <AppBar className={classes.appBar}>\n      <Toolbar>\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          onClick={() => {\n            console.log(\"closing dialog\", uploadedFiles);\n            setDoDelete(true);\n          }}\n          aria-label=\"close\"\n        >\n          <CloseIcon />\n        </IconButton>\n        <Typography variant=\"h6\" className={classes.title}>\n          Post\n        </Typography>\n        <Button autoFocus color=\"inherit\" type=\"submit\" onClick={() => {setStay(true)}}>\n          save and continue edit\n        </Button>\n        <Button autoFocus color=\"inherit\" type=\"submit\" onClick={() => {setStay(false)}}>\n          save\n        </Button>\n      </Toolbar>\n    </AppBar>\n  );\n};\nexport default PostDialog;\n","import Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from 'clsx';\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nconst Dashboard = () => {\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  return (\n    <Grid container spacing={3}>\n      {/* Chart */}\n      <Grid item xs={12} md={8} lg={9}>\n        <Paper className={fixedHeightPaper}></Paper>\n      </Grid>\n      {/* Recent Deposits */}\n      <Grid item xs={12} md={4} lg={3}>\n        <Paper className={fixedHeightPaper}></Paper>\n      </Grid>\n      {/* Recent Orders */}\n      <Grid item xs={12}>\n        <Paper className={classes.paper}></Paper>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Dashboard;\n","import { useMemo } from \"react\";\nimport { IRequest } from \"../../../providers/request/Request\";\nimport useApiResult from \"../useApiResult\";\n\nconst useGetPosts = (updated: boolean) => {\n    //TODO may use it later for cache\n    const request = useMemo(() => getPosts(updated), [updated]);\n    //const request = getPosts();\n    return useApiResult(request);\n};\n\n\nconst getPosts = (updated: boolean): IRequest => {\n    return [\n        `${process.env.REACT_APP_CONTENT_API_BASE_URL}/posts`,\n        {\n            method: \"GET\",\n        },\n    ];\n};\n\nexport default useGetPosts;","import { useMemo } from \"react\";\nimport { IRequest } from \"../../../providers/request/Request\";\nimport useApiResult from \"../useApiResult\";\n\nconst useDeletePost = (id?: number) => {\n    //TODO may use it later for cache\n    const request = useMemo(() => id ? deletePost(id) : undefined\n        , [id]);\n    return useApiResult(request);\n};\n\n\nconst deletePost = (id: number): IRequest => {\n    return [\n        `${process.env.REACT_APP_CONTENT_API_BASE_URL}/posts/${id}`,\n        {\n            method: \"DELETE\",\n        },\n    ];\n};\n\nexport default useDeletePost;","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport useDeletePost from \"../../../../hooks/api/post/useDeletePost\";\nimport { PostModel } from \"../model/post\";\nimport { Action } from \"./Post\";\n\ninterface DeleteDialogProps {\n  open: boolean;\n  onClose: (action: Action) => void;\n  data?: PostModel;\n}\n\nconst DeleteDialog = (props: DeleteDialogProps) => {\n  const [deleteId, setDeleteId] = useState<number>();\n  const [rows, error] = useDeletePost(deleteId);\n  // const closeIt = props.onClose(Action.Delete);\n  // const close = useCallback(() => closeIt, [closeIt]);\n\n  useEffect(() => {\n    console.log(\"Delete post: \", rows, error, deleteId);\n    if (rows && rows.id === deleteId) {\n      props.onClose(Action.Delete);\n      setDeleteId(undefined);\n    }\n  }, [rows, deleteId, error, props]);\n\n  return (\n    <Dialog\n      open={props.open}\n      onClose={() => props.onClose(Action.Delete)}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{\"Delete Post\"}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          Are you sure delete Post {props?.data?.title}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => props.onClose(Action.Delete)} color=\"primary\">\n          Cancel\n        </Button>\n        <Button\n          onClick={() => {\n            setDeleteId(props?.data?.id!);\n          }}\n          color=\"primary\"\n          autoFocus\n        >\n          Confirm\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default DeleteDialog;\n","import { useMemo } from \"react\";\nimport { FileModel } from \"../../../admin/modules/post/model/post\";\nimport { IRequest } from \"../../../providers/request/Request\";\nimport useApiResult from \"../useApiResult\";\n\nconst useDeleteFiles = (doDelete: Boolean, files?: FileModel[]) => {\n    const request = useMemo(() => doDelete && files && files?.length > 0 ? deleteFiles(files) : undefined, [doDelete, files]);\n    return useApiResult(request);\n};\n\nconst deleteFiles = (files: FileModel[]): IRequest => {\n    return [\n        `${process.env.REACT_APP_CONTENT_API_BASE_URL}/files`,\n        {\n            method: \"DELETE\",\n            body: JSON.stringify(files),\n        },\n    ];\n}\n\nexport default useDeleteFiles;","import { useMemo } from \"react\";\nimport { FileModel, PostModel } from \"../../../admin/modules/post/model/post\";\nimport { IRequest } from \"../../../providers/request/Request\";\nimport useApiResult from \"../useApiResult\";\n\nconst useMoveFiles = (files: FileModel[], post?: PostModel) => {\n\n    const request = useMemo(() => files.length > 0 && post?.id ? moveFiles(files, post) : undefined, [post, files]);\n    return useApiResult(request);\n};\n\nconst moveFiles = (files: FileModel[], post?: PostModel): IRequest => {\n\n    return [\n        `${process.env.REACT_APP_CONTENT_API_BASE_URL}/files/${post?.id}`,\n        {\n            method: \"PUT\",\n            body: JSON.stringify(files),\n        },\n    ];\n}\n\nexport default useMoveFiles;","import { useMemo } from \"react\";\nimport { PostModel } from \"../../../admin/modules/post/model/post\";\nimport { IRequest } from \"../../../providers/request/Request\";\nimport useApiResult from \"../useApiResult\";\n\nconst useCreatePost = (post?: PostModel) => {\n    //TODO may use it later for cache\n    const request = useMemo(() => createPost(post), [post]);\n    return useApiResult(request);\n};\n\nconst createPost = (post?: PostModel): IRequest => {\n    return [\n        `${process.env.REACT_APP_CONTENT_API_BASE_URL}/posts`,\n        {\n            body: JSON.stringify(post),\n            method: \"POST\",\n        },\n    ];\n}\n\nexport default useCreatePost;","import { useMemo } from \"react\";\nimport { PostModel } from \"../../../admin/modules/post/model/post\";\nimport { IRequest } from \"../../../providers/request/Request\";\nimport useApiResult from \"../useApiResult\";\n\nconst useUpdatePost = (post?: PostModel) => {\n    //TODO may use it later for cache\n    const request = useMemo(() => updatePost(post), [post]);\n    return useApiResult(request);\n};\n\nconst updatePost = (post?: PostModel): IRequest => {\n    return [\n        `${process.env.REACT_APP_CONTENT_API_BASE_URL}/posts/${post?.id}`,\n        {\n            body: JSON.stringify(post),\n            method: \"PUT\",\n        },\n    ];\n}\n\nexport default useUpdatePost;","import { useMemo } from \"react\";\nimport { IRequest } from \"../../../providers/request/Request\";\nimport useApiResult from \"../useApiResult\";\n\nconst useGetGroupsByTitle = (titleSearch: string) => {\n    const request = useMemo(() => getGroups(titleSearch), [titleSearch]);\n    return useApiResult(request);\n};\n\n\nconst getGroups = (titleSearch: string): IRequest => {\n    return [\n        `${process.env.REACT_APP_CONTENT_API_BASE_URL}/groups?title=like&title=${titleSearch}`,\n        {\n            method: \"GET\",\n        },\n    ];\n};\n\nexport default useGetGroupsByTitle;","import { debounce } from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport React, { useState } from \"react\";\nimport { Controller } from \"react-hook-form\";\nimport { Control } from \"react-hook-form/dist/types\";\nimport useGetGroupsByTitle from \"../../../../hooks/api/group/useGetGroupsByTitle\";\nimport { GroupModel, GroupOmitPost } from \"../../group/model/group\";\nimport { PostModel } from \"../model/post\";\n\nconst MultiSelectTypeahead = ({\n  post,\n  control,\n}: {\n  post?: PostModel;\n  control: Control<PostModel>;\n}) => {\n  const [open, setOpen] = useState(false);\n  const [options, setOptions] = useState<GroupModel[]>([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const loading = open && options.length === 0;\n\n  const [rows, error] = useGetGroupsByTitle(inputValue);\n  console.log(error);\n\n  const onInputChange = debounce((event, value) => {\n    console.log(\"OnInputChange\", inputValue, value);\n    if (inputValue !== value) {\n      setInputValue(value);\n      setOptions(rows);\n    }\n  }, 1500);\n\n  return (\n    <div>\n      <Controller\n        render={(props) => (\n          <Autocomplete\n            multiple\n            id=\"groups\"\n            open={open}\n            onOpen={() => setOpen(true)}\n            onClose={() => setOpen(false)}\n            loading={loading}\n            options={options}\n            value={props.field.value as GroupModel[]}\n            getOptionSelected={(option: GroupModel, value: GroupOmitPost) =>\n              option.id === value.id\n            }\n            getOptionLabel={(option: GroupModel) => option.title}\n            onInputChange={onInputChange}\n            onChange={(_, data) => props.field.onChange(data)}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                variant=\"standard\"\n                id=\"groups\"\n                label=\"Groups\"\n                type=\"groups\"\n                placeholder=\"\"\n                InputProps={{\n                  ...params.InputProps,\n                  endAdornment: (\n                    <React.Fragment>\n                      {loading ? (\n                        <CircularProgress color=\"inherit\" size={20} />\n                      ) : null}\n                      {params.InputProps.endAdornment}\n                    </React.Fragment>\n                  ),\n                }}\n              />\n            )}\n          />\n        )}\n        defaultValue={post?.groups as GroupModel[]}\n        name=\"groups\"\n        control={control}\n      />\n    </div>\n  );\n};\n\nexport default MultiSelectTypeahead;\n","import { useMemo } from \"react\";\nimport { PostModel } from \"../../../admin/modules/post/model/post\";\nimport { IRequest } from \"../../../providers/request/Request\";\nimport useApiResult from \"../useApiResult\";\n\nconst useImageUpload = (fileId: string, file?: File, post?: PostModel) => {\n\n    const request = useMemo(() => file ? uploadImage(fileId, file, post) : undefined, [fileId, post, file]);\n    console.log(\"===== upload call =====\", file, request);\n    return useApiResult(request);\n};\n\nconst uploadImage = (fileId: string, file: File, post?: PostModel): IRequest => {\n    console.log(post);\n    const formData = new FormData();\n    formData.append(\"name\", `${file.name}`);\n    formData.append(\"file\", file);\n    formData.append(\"id\", `${fileId}`)\n\n    return [\n        `${process.env.REACT_APP_CONTENT_API_BASE_URL}/files`,\n        {\n            method: \"POST\",\n            body: formData,\n        },\n    ];\n}\n\nexport default useImageUpload;","import { useCallback, useRef } from \"react\";\nimport { Dispatch, SetStateAction, useEffect, useState } from \"react\";\nimport { Control, Controller } from \"react-hook-form\";\nimport SunEditor, { buttonList } from \"suneditor-react\";\nimport SetOptions from \"suneditor-react/dist/types/SetOptions\";\nimport \"suneditor/dist/css/suneditor.min.css\"; // Import Sun Editor's CSS File\nimport SunEditorCore from \"suneditor/src/lib/core\";\nimport useImageUpload from \"../../../../../hooks/api/file/useImageUpload\";\nimport { FileModel, PostModel } from \"../../model/post\";\n\ninterface EditorProps {\n  post?: PostModel;\n  control: Control<PostModel>;\n  fileId: string;\n  setUploadedFiles: Dispatch<SetStateAction<FileModel[]>>;\n}\n\nconst options: SetOptions = {\n  minHeight: \"400\",\n  height: \"300\",\n  buttonList: buttonList.complex,\n  videoTagAttrs: {\n    contenteditable: true,\n  },\n  attributesWhitelist: {\n    video: \"autoplay|muted|loop|controls\",\n  },\n  // mode: 'balloon',\n};\n\nconst Editor = (props: EditorProps) => {\n  /**\n   * @type {React.MutableRefObject<SunEditor>} get type definitions for editor\n   */\n  const editor = useRef<SunEditorCore>();\n\n  // The sunEditor parameter will be set to the core suneditor instance when this function is called\n  const getSunEditorInstance = (sunEditor: SunEditorCore) => {\n    const { core } = sunEditor;\n    console.log(\"is this full page \", core.options.fullPage);\n\n    // @ts-ignore\n    core.plugins.video._setTagAttrs = (element) => {\n      const attrs = core.options?.videoTagAttrs;\n      if (!attrs) return;\n\n      for (const key in attrs) {\n        if (!core.util.hasOwn(attrs, key)) continue;\n        element.setAttribute(key, attrs[key]);\n      }\n    };\n\n    editor.current = sunEditor;\n  };\n\n  const [uploadFile, setUploadFile] = useState<File>();\n  const [uploadedFileResult, uploadedFileError] = useImageUpload(\n    props.fileId,\n    uploadFile,\n    props.post\n  );\n  const localUploadHandlerFunc = useRef<Function>();\n  const handleImageUploadBefore = useCallback(\n    (files: Array<File>, info: object, uploadHandler: Function) => {\n      console.log(files, info);\n      setUploadFile(files[0]);\n      localUploadHandlerFunc.current = (response: any) =>\n        uploadHandler(response);\n      return undefined;\n    },\n    []\n  );\n\n  useEffect(() => {\n    if (uploadedFileResult && localUploadHandlerFunc.current) {\n      localUploadHandlerFunc.current({\n        result: [{ url: uploadedFileResult.displayUrl }],\n      });\n      localUploadHandlerFunc.current(undefined);\n      props.setUploadedFiles((files: FileModel[]) => {\n        files.push(uploadedFileResult);\n        console.log(files);\n        return files;\n      });\n    }\n    if (uploadedFileError && localUploadHandlerFunc.current) {\n      console.log(\"error upload file \", uploadedFileError);\n      localUploadHandlerFunc.current({ errorMessage: uploadedFileError });\n      localUploadHandlerFunc.current(undefined);\n    }\n    setUploadFile(undefined);\n  }, [uploadedFileResult, uploadedFileError, props]);\n\n  return (\n    <>\n      <Controller\n        render={({ field }) => (\n          <SunEditor\n            getSunEditorInstance={getSunEditorInstance}\n            defaultValue={props.post?.content}\n            setOptions={options}\n            onImageUploadBefore={handleImageUploadBefore}\n            onVideoUploadBefore={handleImageUploadBefore}\n            name={field.name}\n            onChange={field.onChange}\n            onBlur={field.onBlur}\n          />\n        )}\n        name=\"content\"\n        defaultValue={props.post?.content}\n        control={props.control}\n      />\n    </>\n  );\n};\n\nexport default Editor;\n","import {\n  makeStyles,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport _ from \"lodash\";\nimport React from \"react\";\nimport useGetPosts from \"../../../../hooks/api/post/useGetPosts\";\nimport { PostModel } from \"../model/post\";\nimport DeleteDialog from \"./DeleteDialog\";\nimport PostDialog from \"./PostDialog\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n  },\n  container: {\n    maxHeight: 440,\n  },\n});\n\nexport enum Action {\n  Delete,\n  Update,\n  Create,\n}\n\nconst Post = () => {\n  const [open, setOpen] = React.useState(false);\n  const [openDelete, setOpenDelete] = React.useState(false);\n  const [saved, setSaved] = React.useState(false);\n  const [data, setData] = React.useState<PostModel>();\n\n  const handleClickOpen = (action: Action, data?: PostModel) => {\n    switch (action) {\n      case Action.Create:\n      case Action.Update:\n        setOpen(true);\n        break;\n      case Action.Delete:\n        setOpenDelete(true);\n        break;\n    }\n\n    if (data) {\n      setData(data);\n    }\n  };\n\n  const handleClose = (action: Action) => {\n    console.log(\"close dialog\");\n    switch (action) {\n      case Action.Create:\n      case Action.Update:\n        setOpen(false);\n        break;\n      case Action.Delete:\n        setOpenDelete(false);\n        break;\n    }\n    setData(undefined);\n    setSaved(!saved);\n  };\n\n  return (\n    <Grid container spacing={3}>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => handleClickOpen(Action.Create)}\n      >\n        Create\n      </Button>\n      <PostDialog open={open} onClose={handleClose} data={data} />\n      <DeleteDialog open={openDelete} onClose={handleClose} data={data} />\n      <Grid item xs={12}>\n        <PostsTable updated={saved} handleClickOpen={handleClickOpen} />\n      </Grid>\n    </Grid>\n  );\n};\n\nconst columns = [\n  { id: \"id\", label: \"ID\", minWidth: 170 },\n  { id: \"title\", label: \"Title\", minWidth: 100 },\n  { id: \"slug\", label: \"Slug\", minWidth: 100 },\n  { id: \"createAt\", label: \"Create At\", minWidth: 100 },\n  { id: \"updateAt\", label: \"Update At\", minWidth: 100 },\n  { id: \"actions\", label: \"Actions\", minWidth: 100 },\n];\n\nconst PostsTable = ({\n  updated,\n  handleClickOpen,\n}: {\n  updated: boolean;\n  handleClickOpen: (action: Action, data?: PostModel) => void;\n}) => {\n  const classes = useStyles();\n  const [rows, error] = useGetPosts(updated);\n  if (error !== null) {\n    console.log(error);\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {/* rows !== null\n              ? rows.map((row: any) => {\n                  return <div>{row[\"id\"]}{row[\"content\"]}</div>;\n                })\n            : \"\" */}\n            {rows !== null ? (\n              rows.map((row: PostModel) => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row[\"id\"]}>\n                    {columns.map((column) => {\n                      return (\n                        <TableCell key={column.id}>\n                          {column.id === \"actions\" ? (\n                            <ActionButtons\n                              handleClickOpen={handleClickOpen}\n                              row={row}\n                            />\n                          ) : (\n                            _.get(row, column.id)\n                          )}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })\n            ) : (\n              <TableRow>\n                <TableCell key=\"NO_DATA\">NO Data</TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Paper>\n  );\n};\n\nconst ActionButtons = ({\n  handleClickOpen,\n  row,\n}: {\n  handleClickOpen: (action: Action, data?: PostModel) => void;\n  row: PostModel;\n}) => {\n  return (\n    <div>\n      <Button\n        color=\"secondary\"\n        variant=\"contained\"\n        onClick={() => handleClickOpen(Action.Update, row)}\n      >\n        Edit\n      </Button>\n      <Button\n        color=\"default\"\n        variant=\"contained\"\n        onClick={() => handleClickOpen(Action.Delete, row)}\n      >\n        Delete\n      </Button>\n    </div>\n  );\n};\n\nexport default Post;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Dashboard from \"./dashboard/components/Dashboard\";\nimport Post from \"./post/components/Post\";\n\nexport const AdminBasePath = \"/admin\";\nexport const routesDefinition = [\n  { path: AdminBasePath, name: \"Dashboard\", component: Dashboard },\n  { path: AdminBasePath + \"/post\", name: \"Post\", component: Post },\n];\n\nconst Routes = () => (\n  <Switch>\n    {routesDefinition.map(({ path, component }, key) => (\n      <Route exact path={path} key={key} component={component} />\n    ))}\n  </Switch>\n);\n\nexport default Routes;\n","import { createContext, useState } from \"react\";\n\ntype ToggleHook = [boolean, (open: boolean) => void];\nexport const ToggleContext = createContext<ToggleHook>({} as ToggleHook);\n\nexport const ToggleProvider: React.FC<{}> = ({ children }) => {\n  const [toggle, setToggle] = useState(true);\n  return (\n    <ToggleContext.Provider value={[toggle, setToggle]}>\n      {children}\n    </ToggleContext.Provider>\n  );\n};\n","import { Divider, Drawer, IconButton, makeStyles } from \"@material-ui/core\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PagesIcon from '@material-ui/icons/Pages';\nimport clsx from 'clsx';\nimport React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { drawerWidth } from \"../../Main\";\nimport { AdminBasePath } from \"../../Routes\";\nimport { ToggleContext } from \"../providers/ToggleProvider\";\n\nconst useStyles = makeStyles((theme) => ({\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  }\n}));\n\n\nconst LeftMenu = () => {\n  const classes = useStyles();\n \n  const [toggle, setToggle] = useContext(ToggleContext);\n  const handleDrawerClose = () => {\n    setToggle(false);\n  };\n\n  return (\n    <Drawer\n      variant=\"permanent\"\n      classes={{\n        paper: clsx(classes.drawerPaper, !toggle && classes.drawerPaperClose),\n      }}\n      open={toggle}\n    >\n      <div className={classes.toolbarIcon}>\n        <IconButton onClick={handleDrawerClose}>\n          <ChevronLeftIcon />\n        </IconButton>\n      </div>\n      <Divider />\n      <List>{mainListItems}</List>\n      <Divider />\n      <List></List>\n    </Drawer>\n  );\n};\n\nconst mainListItems = (\n    <div>\n      <ListItem button component={Link} to={AdminBasePath}>\n        <ListItemIcon>\n          <DashboardIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Dashboard\" />\n      </ListItem>\n      <ListItem button component={Link} to={AdminBasePath + \"/post\"} >\n        <ListItemIcon>\n          <PagesIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Post\" />\n      </ListItem>\n    </div>\n);\nexport default LeftMenu;","import { Typography, Badge } from \"@material-ui/core\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport clsx from \"clsx\";\nimport React, { useContext } from \"react\";\nimport { drawerWidth } from \"../../Main\";\nimport { ToggleContext } from \"../providers/ToggleProvider\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport { useLocation } from \"react-router-dom\";\nimport { routesDefinition } from \"../../Routes\";\nimport { TokenContext } from \"../../../../providers/token/TokenProvider\";\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: \"none\",\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst TopBar = () => {\n  const classes = useStyles();\n  const [toggle, setToggle] = useContext(ToggleContext);\n  const [, , resetToken] = useContext(TokenContext);\n  const handleDrawerOpen = () => {\n    setToggle(true);\n  };\n  const location = useLocation();\n  const currentRoute = routesDefinition.find(\n    ({ path }) => path === location.pathname\n  );\n\n  return (\n    <AppBar\n      position=\"absolute\"\n      className={clsx(classes.appBar, toggle && classes.appBarShift)}\n    >\n      <Toolbar className={classes.toolbar}>\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={handleDrawerOpen}\n          className={clsx(\n            classes.menuButton,\n            toggle && classes.menuButtonHidden\n          )}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Typography\n          component=\"h1\"\n          variant=\"h6\"\n          color=\"inherit\"\n          noWrap\n          className={classes.title}\n        >\n          {currentRoute?.name}\n        </Typography>\n        <IconButton color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <IconButton\n          color=\"inherit\"\n          onClick={() => {\n            resetToken();\n            window.location.reload();\n          }}\n        >\n          <Badge color=\"secondary\">\n            <ExitToAppIcon />\n          </Badge>\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default TopBar;\n","import Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport Copyright from \"./common/components/CopyRight\";\nimport LeftMenu from \"./common/components/LeftMenu\";\nimport TopBar from \"./common/components/TopBar\";\nimport { ToggleProvider } from \"./common/providers/ToggleProvider\";\nimport Routes from \"./Routes\";\n\nexport const drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nconst Main = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <ToggleProvider>\n        <TopBar />\n        <LeftMenu />\n      </ToggleProvider>\n\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        {/* <Container maxWidth=\"lg\" className={classes.container}> */}\n        <Container className={classes.container}>\n          <Routes />\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n};\n\nexport default Main;\n"],"sourceRoot":""}