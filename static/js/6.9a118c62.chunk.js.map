{"version":3,"sources":["admin/moudles/post/components/Post.tsx","admin/moudles/dashboard/components/Dashboard.tsx","hooks/api/post/useGetPosts.ts","hooks/api/post/useDeletePost.ts","admin/moudles/post/components/DeleteDialog.tsx","hooks/api/post/useCreatePost.ts","hooks/api/post/useUpdatePost.ts","hooks/api/group/useGetGroupsByTitle.ts","admin/moudles/post/components/MultiSelectTypeahead.tsx","admin/moudles/post/components/PostDialog.tsx","admin/moudles/Routes.tsx","admin/moudles/common/components/CopyRight.tsx","hooks/api/keycloak/useGetToken.ts","landing/moudles/login/components/EmailField.tsx","landing/moudles/login/components/PageTitle.tsx","landing/moudles/login/components/PasswordField.tsx","landing/moudles/login/components/RedirectOptions.tsx","landing/moudles/login/components/SigninButton.tsx","landing/moudles/login/Login.tsx","landing/moudles/Main.tsx","hooks/api/useApiResult.ts"],"names":["Action","useStyles","makeStyles","theme","paper","padding","spacing","display","overflow","flexDirection","fixedHeight","height","Dashboard","classes","fixedHeightPaper","clsx","Grid","container","item","xs","md","lg","Paper","className","getPosts","updated","process","method","useGetPosts","request","useMemo","useApiResult","deletePost","id","useDeletePost","undefined","DeleteDialog","props","useState","deleteId","setDeleteId","rows","error","useEffect","console","log","onClose","Delete","Dialog","open","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","data","title","DialogActions","Button","onClick","color","autoFocus","createPost","post","body","JSON","stringify","useCreatePost","updatePost","useUpdatePost","getGroups","titleSearch","useGetGroupsByTitle","MultiSelectTypeahead","control","setOpen","options","setOptions","inputValue","setInputValue","loading","length","onInputChange","debounce","event","value","render","Autocomplete","multiple","onOpen","field","getOptionSelected","option","getOptionLabel","onChange","_","renderInput","params","TextField","variant","label","type","placeholder","InputProps","endAdornment","Fragment","CircularProgress","size","defaultValue","groups","name","appBar","position","marginLeft","flex","Transition","React","forwardRef","ref","Slide","direction","action","Update","Create","Form","useForm","shouldUnregister","register","handleSubmit","watch","setData","onSubmit","CreatePost","UpdatePost","DialogForm","margin","fullWidth","slug","multiline","content","TopBar","AppBar","Toolbar","IconButton","edge","aria-label","Typography","PostDialog","fullScreen","TransitionComponent","List","ListItem","button","ListItemText","primary","secondary","Divider","root","width","maxHeight","columns","minWidth","PostsTable","handleClickOpen","TableContainer","Table","stickyHeader","TableHead","TableRow","map","column","TableCell","style","TableBody","row","hover","role","tabIndex","get","ActionButtons","AdminBasePath","routesDefinition","path","component","openDelete","setOpenDelete","saved","setSaved","handleClose","Routes","key","exact","Copyright","align","href","Date","getFullYear","getToken","loginModel","REACT_APP_KEYCLOAK_API_BASE_URL","headers","REACT_APP_KEYCLOAK_API_CLIENT_ID","REACT_APP_KEYCLOAK_API_CLIENT_SECRET","REACT_APP_KEYCLOAK_API_GRANT_TYPE_PASSWORD","username","password","join","useGetToken","EmailField","required","autoComplete","marginTop","alignItems","avatar","backgroundColor","palette","main","Pagetitle","Avatar","PasswordField","FormControlLabel","Checkbox","RedirectOptions","Link","submit","SignInButton","form","Login","login","setLogin","access","useContext","TokenContext","token","setToken","to","PageTitle","noValidate","submitLogin","Main","Container","maxWidth","CssBaseline","Box","mt","results","setResults","setError","requester","useRequest","isCancelled","then","response","a","ok","json","text","catch","err","message"],"mappings":"wLA4BYA,E,iECtBNC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,QAASF,EAAMG,QAAQ,GACvBC,QAAS,OACTC,SAAU,OACVC,cAAe,UAEjBC,YAAa,CACXC,OAAQ,SAyBGC,EArBG,WAChB,IAAMC,EAAUZ,IACVa,EAAmBC,YAAKF,EAAQT,MAAOS,EAAQH,aACrD,OACE,eAACM,EAAA,EAAD,CAAMC,WAAS,EAACX,QAAS,EAAzB,UAEE,cAACU,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACE,cAACC,EAAA,EAAD,CAAOC,UAAWT,MAGpB,cAACE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACE,cAACC,EAAA,EAAD,CAAOC,UAAWT,MAGpB,cAACE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACG,EAAA,EAAD,CAAOC,UAAWV,EAAQT,c,iGCrB5BoB,EAAW,SAACC,GACd,MAAO,CAAC,GAAD,OACAC,gEADA,UAEH,CACIC,OAAQ,SAKLC,EAjBK,SAACH,GAEjB,IAAMI,EAAUC,mBAAQ,kBAAMN,EAASC,KAAU,CAACA,IAElD,OAAOM,YAAaF,I,6CCIlBG,EAAa,SAACC,GAChB,MAAO,CAAC,GAAD,OACAP,gEADA,kBACoDO,GACvD,CACIN,OAAQ,YAKLO,EAjBO,SAACD,GAEnB,IAAMJ,EAAUC,mBAAQ,kBAAMG,EAAKD,EAAWC,QAAME,IAC9C,CAACF,IACP,OAAOF,YAAaF,ICwDTO,EA7CM,SAACC,GAA8B,IAAD,EACjD,EAAgCC,qBAAhC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAsBN,EAAcK,GAApC,mBAAOE,EAAP,KAAaC,EAAb,KAYA,OARAC,qBAAU,WACRC,QAAQC,IAAI,gBAAiBJ,EAAMC,EAAOH,GACtCE,GAAQA,EAAKR,KAAOM,IACtBF,EAAMS,QAAQ9C,EAAO+C,QACrBP,OAAYL,MAEb,CAACM,EAAMF,EAAUG,EAAOL,IAGzB,eAACW,EAAA,EAAD,CACEC,KAAMZ,EAAMY,KACZH,QAAS,kBAAMT,EAAMS,QAAQ9C,EAAO+C,SACpCG,kBAAgB,qBAChBC,mBAAiB,2BAJnB,UAME,cAACC,EAAA,EAAD,CAAanB,GAAG,qBAAhB,SAAsC,gBACtC,cAACoB,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAmBrB,GAAG,2BAAtB,6CAC4BI,QAD5B,IAC4BA,GAD5B,UAC4BA,EAAOkB,YADnC,aAC4B,EAAaC,WAG3C,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAQC,QAAS,kBAAMtB,EAAMS,QAAQ9C,EAAO+C,SAASa,MAAM,UAA3D,oBAGA,cAACF,EAAA,EAAD,CACEC,QAAS,WAAO,IAAD,EACbnB,EAAW,OAACH,QAAD,IAACA,GAAD,UAACA,EAAOkB,YAAR,aAAC,EAAatB,KAE3B2B,MAAM,UACNC,WAAS,EALX,4B,6HCvCFC,EAAa,SAACC,GAChB,MAAO,CAAC,GAAD,OACArC,gEADA,UAEH,CACIsC,KAAMC,KAAKC,UAAUH,GACrBpC,OAAQ,UAKLwC,EAhBO,SAACJ,GAEnB,IAAMlC,EAAUC,mBAAQ,kBAAMgC,EAAWC,KAAO,CAACA,IACjD,OAAOhC,YAAaF,ICGlBuC,EAAa,SAACL,GAChB,MAAO,CAAC,GAAD,OACArC,gEADA,yBACoDqC,QADpD,IACoDA,OADpD,EACoDA,EAAM9B,IAC7D,CACI+B,KAAMC,KAAKC,UAAUH,GACrBpC,OAAQ,SAKL0C,EAhBO,SAACN,GAEnB,IAAMlC,EAAUC,mBAAQ,kBAAMsC,EAAWL,KAAO,CAACA,IACjD,OAAOhC,YAAaF,I,6BCElByC,GAAY,SAACC,GACf,MAAO,CAAC,GAAD,OACA7C,gEADA,oCACsE6C,GACzE,CACI5C,OAAQ,SAKL6C,GAfa,SAACD,GACzB,IAAM1C,EAAUC,mBAAQ,kBAAMwC,GAAUC,KAAc,CAACA,IACvD,OAAOxC,YAAaF,IC8ET4C,GAzEc,SAAC,GAMvB,IALLV,EAKI,EALJA,KACAW,EAII,EAJJA,QAKA,EAAwBpC,oBAAS,GAAjC,mBAAOW,EAAP,KAAa0B,EAAb,KACA,EAA8BrC,mBAAuB,IAArD,mBAAOsC,EAAP,KAAgBC,EAAhB,KACA,EAAoCvC,mBAAS,IAA7C,mBAAOwC,EAAP,KAAmBC,EAAnB,KACMC,EAAU/B,GAA2B,IAAnB2B,EAAQK,OAEhC,EAAsBT,GAAoBM,GAA1C,mBAAOrC,EAAP,KAAaC,EAAb,KACAE,QAAQC,IAAIH,GAEZ,IAAMwC,EAAgBC,aAAS,SAACC,EAAOC,GACrCzC,QAAQC,IAAI,gBAAiBiC,EAAYO,GACrCP,IAAeO,IACjBN,EAAcM,GACdR,EAAWpC,MAEZ,MAEH,OACE,8BACE,cAAC,IAAD,CACE6C,OAAQ,SAACjD,GAAD,OACN,cAACkD,GAAA,EAAD,CACEC,UAAQ,EACRvD,GAAG,SACHgB,KAAMA,EACNwC,OAAQ,kBAAMd,GAAQ,IACtB7B,QAAS,kBAAM6B,GAAQ,IACvBK,QAASA,EACTJ,QAASA,EACTS,MAAOhD,EAAMqD,MAAML,MACnBM,kBAAmB,SAACC,EAAoBP,GAArB,OACjBO,EAAO3D,KAAOoD,EAAMpD,IAEtB4D,eAAgB,SAACD,GAAD,OAAwBA,EAAOpC,OAC/C0B,cAAeA,EACfY,SAAU,SAACC,EAAGxC,GAAJ,OAAalB,EAAMqD,MAAMI,SAASvC,IAC5CyC,YAAa,SAACC,GAAD,OACX,cAACC,EAAA,EAAD,2BACMD,GADN,IAEEE,QAAQ,WACRlE,GAAG,SACHmE,MAAM,SACNC,KAAK,SACLC,YAAY,GACZC,WAAU,2BACLN,EAAOM,YADF,IAERC,aACE,eAAC,IAAMC,SAAP,WACGzB,EACC,cAAC0B,GAAA,EAAD,CAAkB9C,MAAM,UAAU+C,KAAM,KACtC,KACHV,EAAOM,WAAWC,yBAQjCI,aAAY,OAAE7C,QAAF,IAAEA,OAAF,EAAEA,EAAM8C,OACpBC,KAAK,SACLpC,QAASA,OCvDXzE,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC4G,OAAQ,CACNC,SAAU,YAEZxD,MAAO,CACLyD,WAAY9G,EAAMG,QAAQ,GAC1B4G,KAAM,OAIJC,GAAaC,IAAMC,YAAgC,SAAChF,EAAOiF,GAC/D,OAAO,cAACC,EAAA,EAAD,aAAOC,UAAU,KAAKF,IAAKA,GAASjF,OAQvCoF,GAAS,SAAClE,GAAD,OAAuBA,EAAOvD,EAAO0H,OAAS1H,EAAO2H,QAiC9DC,GAAO,SAACvF,GACZ,MAMIwF,YAAmB,CACrBC,kBAAkB,IANlBC,EADF,EACEA,SACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,MACAvD,EAJF,EAIEA,QAOF,EAAwBpC,qBAAxB,mBAAOiB,EAAP,KAAa2E,EAAb,KASA,OAFAtF,QAAQC,IAAIoF,EAAM,UAGhB,gCACE,uBAAME,SAAUH,GAVH,SAACzE,GAChBX,QAAQC,IAAIU,GACZA,EAAI,kCAAQlB,QAAR,IAAQA,OAAR,EAAQA,EAAOkB,MAASA,GAC5B2E,EAAQ3E,MAON,UACE,cAAC,GAAD,CAAQA,KAAMlB,EAAMkB,KAAMT,QAAST,EAAMS,UACzC,cAAC,GAAD,CAAYiF,SAAUA,EAAUhE,KAAI,OAAE1B,QAAF,IAAEA,OAAF,EAAEA,EAAOkB,KAAMmB,QAASA,OAE7DnB,KACO,OAALlB,QAAK,IAALA,OAAA,EAAAA,EAAOkB,MACN,cAAC,GAAD,CAAYA,KAAMA,EAAM2E,QAASA,EAASpF,QAAST,EAAMS,UAEzD,cAAC,GAAD,CAAYS,KAAMA,EAAM2E,QAASA,EAASpF,QAAST,EAAMS,eAM7DsF,GAAa,SAAC,GAQb,IAPL7E,EAOI,EAPJA,KACA2E,EAMI,EANJA,QACApF,EAKI,EALJA,QAMA,EAAsBqB,EAAcZ,GAApC,mBAAOd,EAAP,KAAaC,EAAb,KAUA,OATAE,QAAQC,IAAI,gBAAiBJ,EAAMC,GACnCC,qBAAU,WACJF,IACFG,QAAQC,IAAI,0BACZC,EAAQ2E,GAAO,KACfS,OAAQ/F,MAET,CAACM,EAAMyF,EAASpF,IAEZ,MAGHuF,GAAa,SAAC,GAQb,IAPL9E,EAOI,EAPJA,KACA2E,EAMI,EANJA,QACApF,EAKI,EALJA,QAMA,EAAsBuB,EAAcd,GAApC,mBAAOd,EAAP,KAAaC,EAAb,KAUA,OATAE,QAAQC,IAAI,gBAAiBJ,EAAMC,GACnCC,qBAAU,WACJF,GAAQA,EAAKR,MAAL,OAAYsB,QAAZ,IAAYA,OAAZ,EAAYA,EAAMtB,MAC5BW,QAAQC,IAAI,0BACZC,EAAQ2E,GAAOlE,IACf2E,OAAQ/F,MAET,CAACoB,EAAMd,EAAMyF,EAASpF,IAElB,MAGHwF,GAAa,SAAC,GAQb,IAPLP,EAOI,EAPJA,SACAhE,EAMI,EANJA,KACAW,EAKI,EALJA,QAMA,OACE,eAACrB,EAAA,EAAD,WACE,cAAC6C,EAAA,EAAD,yBACErC,WAAS,EACT0E,OAAO,QACPtG,GAAG,OACHmE,MAAM,QACNC,KAAK,QACLmC,WAAS,GACLT,EAAS,UAPf,IAQEnB,aAAY,OAAE7C,QAAF,IAAEA,OAAF,EAAEA,EAAMP,SAEtB,cAAC,GAAD,CAAsBO,KAAMA,EAAMW,QAASA,IAC3C,cAAC,IAAD,CACEY,OAAQ,gBAAGI,EAAH,EAAGA,MAAH,OACN,cAACQ,EAAA,EAAD,aACEqC,OAAO,QACPtG,GAAG,OACHmE,MAAM,OACNC,KAAK,OACLmC,WAAS,GACL9C,KAGRhB,QAASA,EACToC,KAAK,OACLF,aAAY,OAAE7C,QAAF,IAAEA,OAAF,EAAEA,EAAM0E,OAEtB,cAAC,IAAD,CACEnD,OAAQ,gBAAGI,EAAH,EAAGA,MAAH,OACN,cAACQ,EAAA,EAAD,aACEqC,OAAO,QACPtG,GAAG,UACHmE,MAAM,UACNC,KAAK,OACLmC,WAAS,EACTE,WAAS,EACTjG,KAAM,GACFiD,KAGRhB,QAASA,EACToC,KAAK,UACLF,aAAY,OAAE7C,QAAF,IAAEA,OAAF,EAAEA,EAAM4E,cAMtBC,GAAS,SAAC,GAMT,IALLrF,EAKI,EALJA,KACAT,EAII,EAJJA,QAKMjC,EAAUZ,KAChB,OACE,cAAC4I,EAAA,EAAD,CAAQtH,UAAWV,EAAQkG,OAA3B,SACE,eAAC+B,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,KAAK,QACLpF,MAAM,UACND,QAAS,kBAAMb,EAAQ2E,GAAOlE,KAC9B0F,aAAW,QAJb,SAME,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAY/C,QAAQ,KAAK5E,UAAWV,EAAQ2C,MAA5C,kBAGA,cAACE,EAAA,EAAD,CAAQG,WAAS,EAACD,MAAM,UAAUyC,KAAK,SAAvC,wBAOO8C,GAvMI,SAAC9G,GAClB,OACE,8BACE,eAACW,EAAA,EAAD,CACEoG,YAAU,EACVnG,KAAMZ,EAAMY,KACZH,QAAS,kBAAMT,EAAMS,QAAQ2E,GAAOpF,EAAMkB,QAC1C8F,oBAAqBlC,GAJvB,UAME,cAAC,GAAD,CACElE,KAAMZ,EAAMY,KACZH,QAAS,kBAAMT,EAAMS,QAAQ2E,GAAOpF,EAAMkB,QAC1CA,KAAMlB,EAAMkB,OAEd,eAAC+F,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAUC,QAAM,EAAhB,SACE,cAACC,EAAA,EAAD,CAAcC,QAAQ,iBAAiBC,UAAU,cAEnD,cAACC,EAAA,EAAD,IACA,cAACL,EAAA,EAAD,CAAUC,QAAM,EAAhB,SACE,cAACC,EAAA,EAAD,CACEC,QAAQ,gCACRC,UAAU,sBT/ClB1J,GAAYC,YAAW,CAC3B2J,KAAM,CACJC,MAAO,QAET7I,UAAW,CACT8I,UAAW,Q,SAIH/J,O,mBAAAA,I,mBAAAA,I,oBAAAA,M,KAMZ,IAuDMgK,GAAU,CACd,CAAE/H,GAAI,KAAMmE,MAAO,KAAM6D,SAAU,KACnC,CAAEhI,GAAI,QAASmE,MAAO,QAAS6D,SAAU,KACzC,CAAEhI,GAAI,OAAQmE,MAAO,OAAQ6D,SAAU,KACvC,CAAEhI,GAAI,WAAYmE,MAAO,YAAa6D,SAAU,KAChD,CAAEhI,GAAI,WAAYmE,MAAO,YAAa6D,SAAU,KAChD,CAAEhI,GAAI,UAAWmE,MAAO,UAAW6D,SAAU,MAGzCC,GAAa,SAAC,GAMb,IALLzI,EAKI,EALJA,QACA0I,EAII,EAJJA,gBAKMtJ,EAAUZ,KAChB,EAAsB2B,EAAYH,GAAlC,mBAAOgB,EAAP,KAAaC,EAAb,KAKA,OAJc,OAAVA,GACFE,QAAQC,IAAIH,GAIZ,cAACpB,EAAA,EAAD,CAAOC,UAAWV,EAAQgJ,KAA1B,SACE,cAACO,EAAA,EAAD,CAAgB7I,UAAWV,EAAQI,UAAnC,SACE,eAACoJ,EAAA,EAAD,CAAOC,cAAY,EAACrB,aAAW,eAA/B,UACE,cAACsB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACGR,GAAQS,KAAI,SAACC,GAAD,OACX,cAACC,EAAA,EAAD,CAEEC,MAAO,CAAEX,SAAUS,EAAOT,UAF5B,SAIGS,EAAOtE,OAHHsE,EAAOzI,WAQpB,cAAC4I,EAAA,EAAD,UAMY,OAATpI,EACCA,EAAKgI,KAAI,SAACK,GACR,OACE,cAACN,EAAA,EAAD,CAAUO,OAAK,EAACC,KAAK,WAAWC,UAAW,EAA3C,SACGjB,GAAQS,KAAI,SAACC,GACZ,OACE,cAACC,EAAA,EAAD,UACiB,YAAdD,EAAOzI,GACN,cAAC,GAAD,CACEkI,gBAAiBA,EACjBW,IAAKA,IAGP/E,IAAEmF,IAAIJ,EAAKJ,EAAOzI,KAPNyI,EAAOzI,QAHsB6I,EAAG,OAmB1D,cAACN,EAAA,EAAD,UACE,cAACG,EAAA,EAAD,qBAAe,uBAUzBQ,GAAgB,SAAC,GAMhB,IALLhB,EAKI,EALJA,gBACAW,EAII,EAJJA,IAKA,OACE,gCACE,cAACpH,EAAA,EAAD,CACEE,MAAM,YACNuC,QAAQ,YACRxC,QAAS,kBAAMwG,EAAgBnK,EAAO0H,OAAQoD,IAHhD,kBAOA,cAACpH,EAAA,EAAD,CACEE,MAAM,UACNuC,QAAQ,YACRxC,QAAS,kBAAMwG,EAAgBnK,EAAO+C,OAAQ+H,IAHhD,wBUjLOM,GAAgB,SAChBC,GAAmB,CAC9B,CAAEC,KAAMF,GAAetE,KAAM,YAAayE,UAAW3K,GACrD,CAAE0K,KAAMF,GAAgB,QAAStE,KAAM,OAAQyE,UV0BpC,WACX,MAAwBnE,IAAM9E,UAAS,GAAvC,mBAAOW,EAAP,KAAa0B,EAAb,KACA,EAAoCyC,IAAM9E,UAAS,GAAnD,mBAAOkJ,EAAP,KAAmBC,EAAnB,KACA,EAA0BrE,IAAM9E,UAAS,GAAzC,mBAAOoJ,EAAP,KAAcC,EAAd,KACA,EAAwBvE,IAAM9E,WAA9B,mBAAOiB,EAAP,KAAa2E,EAAb,KAEMiC,EAAkB,SAAC1C,EAAgBlE,GACvC,OAAQkE,GACN,KAAKzH,EAAO2H,OACZ,KAAK3H,EAAO0H,OACV/C,GAAQ,GACR,MACF,KAAK3E,EAAO+C,OACV0I,GAAc,GAIdlI,GACF2E,EAAQ3E,IAINqI,EAAc,SAACnE,GAEnB,OADA7E,QAAQC,IAAI,gBACJ4E,GACN,KAAKzH,EAAO2H,OACZ,KAAK3H,EAAO0H,OACV/C,GAAQ,GACR,MACF,KAAK3E,EAAO+C,OACV0I,GAAc,GAGlBvD,OAAQ/F,GACRwJ,GAAUD,IAGZ,OACE,eAAC1K,EAAA,EAAD,CAAMC,WAAS,EAACX,QAAS,EAAzB,UACE,cAACoD,EAAA,EAAD,CACEyC,QAAQ,YACRvC,MAAM,UACND,QAAS,kBAAMwG,EAAgBnK,EAAO2H,SAHxC,oBAOA,cAAC,GAAD,CAAY1E,KAAMA,EAAMH,QAAS8I,EAAarI,KAAMA,IACpD,cAAC,EAAD,CAAcN,KAAMuI,EAAY1I,QAAS8I,EAAarI,KAAMA,IAC5D,cAACvC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAAC,GAAD,CAAYM,QAASiK,EAAOvB,gBAAiBA,YUhEtC0B,IARA,kBACb,cAAC,IAAD,UACGR,GAAiBZ,KAAI,WAAsBqB,GAAtB,IAAGR,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAT,OACpB,cAAC,IAAD,CAAOQ,OAAK,EAACT,KAAMA,EAAgBC,UAAWA,GAAhBO,U,iCCdpC,oCAiBeE,IAbG,WACd,OACE,eAAC,IAAD,CAAY7F,QAAQ,QAAQvC,MAAM,gBAAgBqI,MAAM,SAAxD,UACG,kBACD,cAAC,IAAD,CAAMrI,MAAM,UAAUsI,KAAK,2BAA3B,uBAEQ,KACP,IAAIC,MAAOC,cACX,S,wICAHC,EAAW,SAACC,GACd,MAAO,CAAC,GAAD,OACA5K,kOAAY6K,gCADZ,yDAEH,CACI5K,OAAQ,OACR6K,QAAS,CACL,eAAgB,mDAEpBxI,KAAM,CAAC,aAAD,OACWtC,kOAAY+K,kCADvB,wBAEe/K,kOAAYgL,sCAF3B,qBAGYhL,kOAAYiL,4CAHxB,mBAIUL,EAAWM,UAJrB,mBAKUN,EAAWO,WACzBC,KAAK,QAKJC,EA1BK,SAACT,GAEjB,IAAMzK,EAAUC,mBAAQ,kBAAMwK,EAAaD,EAASC,QAAcnK,IAAW,CAACmK,IAC9E,OAAOvK,YAAaF,I,gCCgBTmL,EApBI,SAAC,GAIb,IAHLjF,EAGI,EAHJA,SAIA,OACE,cAAC7B,EAAA,EAAD,aACEC,QAAQ,WACRoC,OAAO,SACP0E,UAAQ,EACRzE,WAAS,EACTvG,GAAG,WACHmE,MAAM,gBACN8G,aAAa,WACbrJ,WAAS,GACLkE,EAAS,e,oCCdb9H,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACL+M,UAAWhN,EAAMG,QAAQ,GACzBC,QAAS,OACTE,cAAe,SACf2M,WAAY,UAEdC,OAAQ,CACN9E,OAAQpI,EAAMG,QAAQ,GACtBgN,gBAAiBnN,EAAMoN,QAAQ5D,UAAU6D,UAkB9BC,EAdG,WAChB,IAAM5M,EAAUZ,IAChB,OACE,sBAAKsB,UAAWV,EAAQT,MAAxB,UACE,cAACsN,EAAA,EAAD,CAAQnM,UAAWV,EAAQwM,OAA3B,SACE,cAAC,IAAD,MAEF,cAACnE,EAAA,EAAD,CAAYqC,UAAU,KAAKpF,QAAQ,KAAnC,yB,kBCOSwH,EA1BO,SAAC,GAIhB,IAHL5F,EAGI,EAHJA,SAIA,OACE,gCACE,cAAC7B,EAAA,EAAD,aACEC,QAAQ,WACRoC,OAAO,SACP0E,UAAQ,EACRzE,WAAS,EACTpC,MAAM,WACNC,KAAK,WACLpE,GAAG,WACHiL,aAAa,oBACTnF,EAAS,cAEf,cAAC6F,EAAA,EAAD,CACElJ,QAAS,cAACmJ,EAAA,EAAD,CAAUxI,MAAM,WAAWzB,MAAM,YAC1CwC,MAAM,oB,kBCNC0H,EAjBS,WACtB,OACE,eAAC9M,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,EAAb,SACE,cAAC4M,EAAA,EAAD,CAAM7B,KAAK,IAAI/F,QAAQ,QAAvB,gCAIF,cAACnF,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAC6M,EAAA,EAAD,CAAM7B,KAAK,IAAI/F,QAAQ,QAAvB,SACG,yC,kBCVLlG,E,MAAYC,IAAW,SAACC,GAAD,MAAY,CACvC6N,OAAQ,CACNzF,OAAQpI,EAAMG,QAAQ,EAAG,EAAG,QAoBjB2N,EAhBM,WACnB,IAAMpN,EAAUZ,IAEhB,OACE,cAACyD,EAAA,EAAD,CACE2C,KAAK,SACLmC,WAAS,EACTrC,QAAQ,YACRvC,MAAM,UACNrC,UAAWV,EAAQmN,OALrB,sBCCE/N,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvC+N,KAAM,CACJpE,MAAO,OACPqD,UAAWhN,EAAMG,QAAQ,QAwCd6N,EApCD,WACZ,IAAMtN,EAAUZ,IAChB,EAA0BqC,qBAA1B,mBAAO8L,EAAP,KAAcC,EAAd,KACA,EAAwBtB,EAAYqB,GAApC,mBAAOE,EAAP,KAAe5L,EAAf,KACA,EAA0B6L,qBAAWC,KAArC,mBAAOC,EAAP,KAAcC,EAAd,KACA9L,QAAQC,IAAIyL,EAAQ5L,GACpB,MAA0CmF,cAAlCE,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAcC,EAAhC,EAAgCA,MAMhC,OAAIqG,GACFI,EAASJ,GACF,cAAC,IAAD,CAAUK,GAAIvD,QAGvBxI,QAAQC,IAAIoF,EAAM,aAGhB,gCACE,cAAC2G,EAAD,IACA,uBACErN,UAAWV,EAAQqN,KACnBW,YAAU,EACV1G,SAAUH,GAlBC,SAAC8G,GAChBlM,QAAQC,IAAIiM,EAAaL,GACzBJ,EAASS,MAaP,UAKE,cAAC,EAAD,CAAY/G,SAAUA,IACtB,cAAC,EAAD,CAAeA,SAAUA,IACzB,cAAC,EAAD,IACA,cAAC,EAAD,YChCOgH,UAZF,WACX,OACE,eAACC,EAAA,EAAD,CAAWzD,UAAU,OAAO0D,SAAS,KAArC,UACE,cAACC,EAAA,EAAD,IACA,cAAC,EAAD,IACA,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAC,IAAD,W,sFCqBOrN,IA9BM,SAACF,GAClB,MAA8BS,mBAAS,MAAvC,mBAAO+M,EAAP,KAAgBC,EAAhB,KACA,EAA0BhN,mBAAc,MAAxC,mBAAOI,EAAP,KAAc6M,EAAd,KACMC,EAAYC,cAwBlB,OAtBA9M,qBAAU,WACN,IAAI+M,GAAc,EAClB,QAAgBvN,IAAZN,EAgBJ,OAbA2N,EAAU3N,GAAS8N,KAAnB,uCAAwB,WAAOC,GAAP,SAAAC,EAAA,0DAChBH,EADgB,qDAIhBE,EAASE,GAJO,6BAKhBR,EALgB,SAKCM,EAASG,OALV,kCAMhBR,EAAS,MANO,oCAQhBA,EARgB,UAQDK,EAASI,OARR,+EAAxB,uDAUGC,OAAM,SAACC,GACNX,EAASW,EAAIC,YAEV,WACHT,GAAc,KAEnB,CAAC7N,EAAS2N,IACN,CAACH,EAAS3M","file":"static/js/6.9a118c62.chunk.js","sourcesContent":["import {\n  makeStyles,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport _ from \"lodash\";\nimport React from \"react\";\nimport useGetPosts from \"../../../../hooks/api/post/useGetPosts\";\nimport { PostModel } from \"../model/post\";\nimport DeleteDialog from \"./DeleteDialog\";\nimport PostDialog from \"./PostDialog\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n  },\n  container: {\n    maxHeight: 440,\n  },\n});\n\nexport enum Action {\n  Delete,\n  Update,\n  Create,\n}\n\nconst Post = () => {\n  const [open, setOpen] = React.useState(false);\n  const [openDelete, setOpenDelete] = React.useState(false);\n  const [saved, setSaved] = React.useState(false);\n  const [data, setData] = React.useState<PostModel>();\n\n  const handleClickOpen = (action: Action, data?: PostModel) => {\n    switch (action) {\n      case Action.Create:\n      case Action.Update:\n        setOpen(true);\n        break;\n      case Action.Delete:\n        setOpenDelete(true);\n        break;\n    }\n\n    if (data) {\n      setData(data);\n    }\n  };\n\n  const handleClose = (action: Action) => {\n    console.log(\"close dialog\");\n    switch (action) {\n      case Action.Create:\n      case Action.Update:\n        setOpen(false);\n        break;\n      case Action.Delete:\n        setOpenDelete(false);\n        break;\n    }\n    setData(undefined);\n    setSaved(!saved);\n  };\n\n  return (\n    <Grid container spacing={3}>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => handleClickOpen(Action.Create)}\n      >\n        Create\n      </Button>\n      <PostDialog open={open} onClose={handleClose} data={data} />\n      <DeleteDialog open={openDelete} onClose={handleClose} data={data} />\n      <Grid item xs={12}>\n        <PostsTable updated={saved} handleClickOpen={handleClickOpen} />\n      </Grid>\n    </Grid>\n  );\n};\n\nconst columns = [\n  { id: \"id\", label: \"ID\", minWidth: 170 },\n  { id: \"title\", label: \"Title\", minWidth: 100 },\n  { id: \"slug\", label: \"Slug\", minWidth: 100 },\n  { id: \"createAt\", label: \"Create At\", minWidth: 100 },\n  { id: \"updateAt\", label: \"Update At\", minWidth: 100 },\n  { id: \"actions\", label: \"Actions\", minWidth: 100 },\n];\n\nconst PostsTable = ({\n  updated,\n  handleClickOpen,\n}: {\n  updated: boolean;\n  handleClickOpen: (action: Action, data?: PostModel) => void;\n}) => {\n  const classes = useStyles();\n  const [rows, error] = useGetPosts(updated);\n  if (error !== null) {\n    console.log(error);\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {/* rows !== null\n              ? rows.map((row: any) => {\n                  return <div>{row[\"id\"]}{row[\"content\"]}</div>;\n                })\n            : \"\" */}\n            {rows !== null ? (\n              rows.map((row: PostModel) => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row[\"id\"]}>\n                    {columns.map((column) => {\n                      return (\n                        <TableCell key={column.id}>\n                          {column.id === \"actions\" ? (\n                            <ActionButtons\n                              handleClickOpen={handleClickOpen}\n                              row={row}\n                            />\n                          ) : (\n                            _.get(row, column.id)\n                          )}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })\n            ) : (\n              <TableRow>\n                <TableCell key=\"NO_DATA\">NO Data</TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Paper>\n  );\n};\n\nconst ActionButtons = ({\n  handleClickOpen,\n  row,\n}: {\n  handleClickOpen: (action: Action, data?: PostModel) => void;\n  row: PostModel;\n}) => {\n  return (\n    <div>\n      <Button\n        color=\"secondary\"\n        variant=\"contained\"\n        onClick={() => handleClickOpen(Action.Update, row)}\n      >\n        Edit\n      </Button>\n      <Button\n        color=\"default\"\n        variant=\"contained\"\n        onClick={() => handleClickOpen(Action.Delete, row)}\n      >\n        Delete\n      </Button>\n    </div>\n  );\n};\n\nexport default Post;\n","import Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from 'clsx';\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nconst Dashboard = () => {\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  return (\n    <Grid container spacing={3}>\n      {/* Chart */}\n      <Grid item xs={12} md={8} lg={9}>\n        <Paper className={fixedHeightPaper}></Paper>\n      </Grid>\n      {/* Recent Deposits */}\n      <Grid item xs={12} md={4} lg={3}>\n        <Paper className={fixedHeightPaper}></Paper>\n      </Grid>\n      {/* Recent Orders */}\n      <Grid item xs={12}>\n        <Paper className={classes.paper}></Paper>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Dashboard;\n","import { useMemo } from \"react\";\nimport { IRequest } from \"../../../providers/request/Request\";\nimport useApiResult from \"../useApiResult\";\n\nconst useGetPosts = (updated: boolean) => {\n    //TODO may use it later for cache\n    const request = useMemo(() => getPosts(updated), [updated]);\n    //const request = getPosts();\n    return useApiResult(request);\n};\n\n\nconst getPosts = (updated: boolean): IRequest => {\n    return [\n        `${process.env.REACT_APP_CONTENT_API_BASE_URL}/posts`,\n        {\n            method: \"GET\",\n        },\n    ];\n};\n\nexport default useGetPosts;","import { useMemo } from \"react\";\nimport { IRequest } from \"../../../providers/request/Request\";\nimport useApiResult from \"../useApiResult\";\n\nconst useDeletePost = (id?: number) => {\n    //TODO may use it later for cache\n    const request = useMemo(() => id ? deletePost(id) : undefined\n        , [id]);\n    return useApiResult(request);\n};\n\n\nconst deletePost = (id: number): IRequest => {\n    return [\n        `${process.env.REACT_APP_CONTENT_API_BASE_URL}/posts/${id}`,\n        {\n            method: \"DELETE\",\n        },\n    ];\n};\n\nexport default useDeletePost;","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport useDeletePost from \"../../../../hooks/api/post/useDeletePost\";\nimport { PostModel } from \"../model/post\";\nimport { Action } from \"./Post\";\n\ninterface DeleteDialogProps {\n  open: boolean;\n  onClose: (action: Action) => void;\n  data?: PostModel;\n}\n\nconst DeleteDialog = (props: DeleteDialogProps) => {\n  const [deleteId, setDeleteId] = useState<number>();\n  const [rows, error] = useDeletePost(deleteId);\n  // const closeIt = props.onClose(Action.Delete);\n  // const close = useCallback(() => closeIt, [closeIt]);\n\n  useEffect(() => {\n    console.log(\"Delete post: \", rows, error, deleteId);\n    if (rows && rows.id === deleteId) {\n      props.onClose(Action.Delete);\n      setDeleteId(undefined);\n    }\n  }, [rows, deleteId, error, props]);\n\n  return (\n    <Dialog\n      open={props.open}\n      onClose={() => props.onClose(Action.Delete)}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{\"Delete Post\"}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          Are you sure delete Post {props?.data?.title}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => props.onClose(Action.Delete)} color=\"primary\">\n          Cancel\n        </Button>\n        <Button\n          onClick={() => {\n            setDeleteId(props?.data?.id!);\n          }}\n          color=\"primary\"\n          autoFocus\n        >\n          Confirm\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default DeleteDialog;\n","import { useMemo } from \"react\";\nimport { PostModel } from \"../../../admin/moudles/post/model/post\";\nimport { IRequest } from \"../../../providers/request/Request\";\nimport useApiResult from \"../useApiResult\";\n\nconst useCreatePost = (post?: PostModel) => {\n    //TODO may use it later for cache\n    const request = useMemo(() => createPost(post), [post]);\n    return useApiResult(request);\n};\n\nconst createPost = (post?: PostModel): IRequest => {\n    return [\n        `${process.env.REACT_APP_CONTENT_API_BASE_URL}/posts`,\n        {\n            body: JSON.stringify(post),\n            method: \"POST\",\n        },\n    ];\n}\n\nexport default useCreatePost;","import { useMemo } from \"react\";\nimport { PostModel } from \"../../../admin/moudles/post/model/post\";\nimport { IRequest } from \"../../../providers/request/Request\";\nimport useApiResult from \"../useApiResult\";\n\nconst useUpdatePost = (post?: PostModel) => {\n    //TODO may use it later for cache\n    const request = useMemo(() => updatePost(post), [post]);\n    return useApiResult(request);\n};\n\nconst updatePost = (post?: PostModel): IRequest => {\n    return [\n        `${process.env.REACT_APP_CONTENT_API_BASE_URL}/posts/${post?.id}`,\n        {\n            body: JSON.stringify(post),\n            method: \"PUT\",\n        },\n    ];\n}\n\nexport default useUpdatePost;","import { useMemo } from \"react\";\nimport { IRequest } from \"../../../providers/request/Request\";\nimport useApiResult from \"../useApiResult\";\n\nconst useGetGroupsByTitle = (titleSearch: string) => {\n    const request = useMemo(() => getGroups(titleSearch), [titleSearch]);\n    return useApiResult(request);\n};\n\n\nconst getGroups = (titleSearch: string): IRequest => {\n    return [\n        `${process.env.REACT_APP_CONTENT_API_BASE_URL}/groups?title=like&title=${titleSearch}`,\n        {\n            method: \"GET\",\n        },\n    ];\n};\n\nexport default useGetGroupsByTitle;","import { debounce } from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport React, { useState } from \"react\";\nimport { Controller } from \"react-hook-form\";\nimport { Control } from \"react-hook-form/dist/types\";\nimport useGetGroupsByTitle from \"../../../../hooks/api/group/useGetGroupsByTitle\";\nimport { GroupModel, GroupOmitPost } from \"../../group/model/group\";\nimport { PostModel } from \"../model/post\";\n\nconst MultiSelectTypeahead = ({\n  post,\n  control,\n}: {\n  post?: PostModel;\n  control: Control<PostModel>;\n}) => {\n  const [open, setOpen] = useState(false);\n  const [options, setOptions] = useState<GroupModel[]>([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const loading = open && options.length === 0;\n\n  const [rows, error] = useGetGroupsByTitle(inputValue);\n  console.log(error);\n\n  const onInputChange = debounce((event, value) => {\n    console.log(\"OnInputChange\", inputValue, value);\n    if (inputValue !== value) {\n      setInputValue(value);\n      setOptions(rows);\n    }\n  }, 1500);\n\n  return (\n    <div>\n      <Controller\n        render={(props) => (\n          <Autocomplete\n            multiple\n            id=\"groups\"\n            open={open}\n            onOpen={() => setOpen(true)}\n            onClose={() => setOpen(false)}\n            loading={loading}\n            options={options}\n            value={props.field.value as GroupModel[]}\n            getOptionSelected={(option: GroupModel, value: GroupOmitPost) =>\n              option.id === value.id\n            }\n            getOptionLabel={(option: GroupModel) => option.title}\n            onInputChange={onInputChange}\n            onChange={(_, data) => props.field.onChange(data)}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                variant=\"standard\"\n                id=\"groups\"\n                label=\"Groups\"\n                type=\"groups\"\n                placeholder=\"\"\n                InputProps={{\n                  ...params.InputProps,\n                  endAdornment: (\n                    <React.Fragment>\n                      {loading ? (\n                        <CircularProgress color=\"inherit\" size={20} />\n                      ) : null}\n                      {params.InputProps.endAdornment}\n                    </React.Fragment>\n                  ),\n                }}\n              />\n            )}\n          />\n        )}\n        defaultValue={post?.groups as GroupModel[]}\n        name=\"groups\"\n        control={control}\n      />\n    </div>\n  );\n};\n\nexport default MultiSelectTypeahead;\n","import AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Slide, { SlideProps } from \"@material-ui/core/Slide\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport React, { useEffect, useState } from \"react\";\nimport { Control, Controller, useForm, UseFormRegister } from \"react-hook-form\";\nimport useCreatePost from \"../../../../hooks/api/post/useCreatePost\";\nimport useUpdatePost from \"../../../../hooks/api/post/useUpdatePost\";\nimport { PostModel } from \"../model/post\";\nimport MultiSelectTypeahead from \"./MultiSelectTypeahead\";\nimport { Action } from \"./Post\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n}));\n\nconst Transition = React.forwardRef<unknown, SlideProps>((props, ref) => {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\ninterface PostDialogProps {\n  open: boolean;\n  onClose: (action: Action) => void;\n  data?: PostModel;\n}\n\nconst action = (data?: PostModel) => (data ? Action.Update : Action.Create);\n\nconst PostDialog = (props: PostDialogProps) => {\n  return (\n    <div>\n      <Dialog\n        fullScreen\n        open={props.open}\n        onClose={() => props.onClose(action(props.data))}\n        TransitionComponent={Transition}\n      >\n        <Form\n          open={props.open}\n          onClose={() => props.onClose(action(props.data))}\n          data={props.data}\n        />\n        <List>\n          <ListItem button>\n            <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\" />\n          </ListItem>\n          <Divider />\n          <ListItem button>\n            <ListItemText\n              primary=\"Default notification ringtone\"\n              secondary=\"Tethys\"\n            />\n          </ListItem>\n        </List>\n      </Dialog>\n    </div>\n  );\n};\n\nconst Form = (props: PostDialogProps) => {\n  const {\n    register,\n    handleSubmit,\n    watch,\n    control,\n    //  formState: { errors },\n  } = useForm<PostModel>({\n    shouldUnregister: false,\n    // defaultValues: {} as PostModel,\n    // defaultValues: props.data,\n  });\n  const [data, setData] = useState<PostModel>();\n  const onSubmit = (data: PostModel) => {\n    console.log(data);\n    data = { ...props?.data, ...data };\n    setData(data);\n  };\n\n  console.log(watch(\"title\"));\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <TopBar data={props.data} onClose={props.onClose} />\n        <DialogForm register={register} post={props?.data} control={control} />\n      </form>\n      {data &&\n        (props?.data ? (\n          <UpdatePost data={data} setData={setData} onClose={props.onClose} />\n        ) : (\n          <CreatePost data={data} setData={setData} onClose={props.onClose} />\n        ))}\n    </div>\n  );\n};\n\nconst CreatePost = ({\n  data,\n  setData,\n  onClose,\n}: {\n  data?: PostModel;\n  setData: (data?: PostModel) => void;\n  onClose: (action: Action) => void;\n}) => {\n  const [rows, error] = useCreatePost(data);\n  console.log(\"Create post: \", rows, error);\n  useEffect(() => {\n    if (rows) {\n      console.log(\"update post clean data\");\n      onClose(action({} as PostModel));\n      setData(undefined);\n    }\n  }, [rows, setData, onClose]);\n\n  return null;\n};\n\nconst UpdatePost = ({\n  data,\n  setData,\n  onClose,\n}: {\n  data?: PostModel;\n  setData: (data?: PostModel) => void;\n  onClose: (action: Action) => void;\n}) => {\n  const [rows, error] = useUpdatePost(data);\n  console.log(\"Update post: \", rows, error);\n  useEffect(() => {\n    if (rows && rows.id === data?.id) {\n      console.log(\"update post clean data\");\n      onClose(action(data));\n      setData(undefined);\n    }\n  }, [data, rows, setData, onClose]);\n\n  return null;\n};\n\nconst DialogForm = ({\n  register,\n  post,\n  control,\n}: {\n  register: UseFormRegister<PostModel>;\n  post?: PostModel;\n  control: Control<PostModel>;\n}) => {\n  return (\n    <DialogContent>\n      <TextField\n        autoFocus\n        margin=\"dense\"\n        id=\"name\"\n        label=\"Title\"\n        type=\"title\"\n        fullWidth\n        {...register(\"title\")}\n        defaultValue={post?.title}\n      />\n      <MultiSelectTypeahead post={post} control={control} />\n      <Controller\n        render={({ field }) => (\n          <TextField\n            margin=\"dense\"\n            id=\"slug\"\n            label=\"Slug\"\n            type=\"text\"\n            fullWidth\n            {...field}\n          />\n        )}\n        control={control}\n        name=\"slug\"\n        defaultValue={post?.slug}\n      />\n      <Controller\n        render={({ field }) => (\n          <TextField\n            margin=\"dense\"\n            id=\"content\"\n            label=\"Content\"\n            type=\"text\"\n            fullWidth\n            multiline\n            rows={8}\n            {...field}\n          />\n        )}\n        control={control}\n        name=\"content\"\n        defaultValue={post?.content}\n      />\n    </DialogContent>\n  );\n};\n\nconst TopBar = ({\n  data,\n  onClose,\n}: {\n  data?: PostModel;\n  onClose: (action: Action) => void;\n}) => {\n  const classes = useStyles();\n  return (\n    <AppBar className={classes.appBar}>\n      <Toolbar>\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          onClick={() => onClose(action(data))}\n          aria-label=\"close\"\n        >\n          <CloseIcon />\n        </IconButton>\n        <Typography variant=\"h6\" className={classes.title}>\n          Post\n        </Typography>\n        <Button autoFocus color=\"inherit\" type=\"submit\">\n          save\n        </Button>\n      </Toolbar>\n    </AppBar>\n  );\n};\nexport default PostDialog;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Dashboard from \"./dashboard/components/Dashboard\";\nimport Post from \"./post/components/Post\";\n\nexport const AdminBasePath = \"/admin\";\nexport const routesDefinition = [\n  { path: AdminBasePath, name: \"Dashboard\", component: Dashboard },\n  { path: AdminBasePath + \"/post\", name: \"Post\", component: Post },\n];\n\nconst Routes = () => (\n  <Switch>\n    {routesDefinition.map(({ path, component }, key) => (\n      <Route exact path={path} key={key} component={component} />\n    ))}\n  </Switch>\n);\n\nexport default Routes;\n","import Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport React from \"react\";\n\nconst Copyright = () => {\n    return (\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Copyright © '}\n        <Link color=\"inherit\" href=\"https://material-ui.com/\">\n         CMS Admin \n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    );\n  }\n  \nexport default Copyright;\n","import { useMemo } from \"react\";\nimport { LoginModel } from \"../../../landing/moudles/login/model/Login\";\nimport { IRequest } from \"../../../providers/request/Request\";\nimport useApiResult from \"../useApiResult\";\n\nconst useGetToken = (loginModel?: LoginModel) => {\n\n    const request = useMemo(() => loginModel ? getToken(loginModel) : undefined, [loginModel]);\n    return useApiResult(request);\n};\n\n\nconst getToken = (loginModel: LoginModel): IRequest => {\n    return [\n        `${process.env.REACT_APP_KEYCLOAK_API_BASE_URL}/auth/realms/golang-cms/protocol/openid-connect/token`,\n        {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\n            },\n            body: [\n                `client_id=${process.env.REACT_APP_KEYCLOAK_API_CLIENT_ID}`,\n                `client_secret=${process.env.REACT_APP_KEYCLOAK_API_CLIENT_SECRET}`,\n                `grant_type=${process.env.REACT_APP_KEYCLOAK_API_GRANT_TYPE_PASSWORD}`,\n                `username=${loginModel.username}`,\n                `password=${loginModel.password}`,\n            ].join(\"&\")\n        },\n    ];\n};\n\nexport default useGetToken;","import TextField from \"@material-ui/core/TextField\";\nimport { UseFormRegister } from \"react-hook-form\";\nimport { LoginModel } from \"../model/Login\";\n\nconst EmailField = ({\n  register,\n}: {\n  register: UseFormRegister<LoginModel>;\n}) => {\n  return (\n    <TextField\n      variant=\"outlined\"\n      margin=\"normal\"\n      required\n      fullWidth\n      id=\"username\"\n      label=\"Email Address\"\n      autoComplete=\"username\"\n      autoFocus\n      {...register(\"username\")}\n    />\n  );\n};\n\nexport default EmailField;\n","import Avatar from \"@material-ui/core/Avatar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n}));\n\nconst Pagetitle = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.paper}>\n      <Avatar className={classes.avatar}>\n        <LockOutlinedIcon />\n      </Avatar>\n      <Typography component=\"h1\" variant=\"h5\">\n        Sign in\n      </Typography>\n    </div>\n  );\n};\n\nexport default Pagetitle;\n","import Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { UseFormRegister } from \"react-hook-form\";\nimport { LoginModel } from \"../model/Login\";\n\nconst PasswordField = ({\n  register,\n}: {\n  register: UseFormRegister<LoginModel>;\n}) => {\n  return (\n    <div>\n      <TextField\n        variant=\"outlined\"\n        margin=\"normal\"\n        required\n        fullWidth\n        label=\"Password\"\n        type=\"password\"\n        id=\"password\"\n        autoComplete=\"current-password\"\n        {...register(\"password\")}\n      />\n      <FormControlLabel\n        control={<Checkbox value=\"remember\" color=\"primary\" />}\n        label=\"Remember me\"\n      />\n    </div>\n  );\n};\n\nexport default PasswordField;\n","import Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\n\nconst RedirectOptions = () => {\n  return (\n    <Grid container>\n      <Grid item xs>\n        <Link href=\"#\" variant=\"body2\">\n          Forgot password?\n        </Link>\n      </Grid>\n      <Grid item>\n        <Link href=\"#\" variant=\"body2\">\n          {\"Don't have an account? Sign Up\"}\n        </Link>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default RedirectOptions;\n","import Button from \"@material-ui/core/Button\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles((theme) => ({\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst SignInButton = () => {\n  const classes = useStyles();\n\n  return (\n    <Button\n      type=\"submit\"\n      fullWidth\n      variant=\"contained\"\n      color=\"primary\"\n      className={classes.submit}\n    >\n      Sign In\n    </Button>\n  );\n};\n\nexport default SignInButton;\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport { useContext, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Redirect } from \"react-router-dom\";\nimport { AdminBasePath } from \"../../../admin/moudles/Routes\";\nimport useGetToken from \"../../../hooks/api/keycloak/useGetToken\";\nimport { TokenContext } from \"../../../providers/token/TokenProvider\";\nimport EmailField from \"./components/EmailField\";\nimport PageTitle from \"./components/PageTitle\";\nimport PasswordField from \"./components/PasswordField\";\nimport RedirectOptions from \"./components/RedirectOptions\";\nimport SignInButton from \"./components/SigninButton\";\nimport { LoginModel } from \"./model/Login\";\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n}));\n\nconst Login = () => {\n  const classes = useStyles();\n  const [login, setLogin] = useState<LoginModel>();\n  const [access, error] = useGetToken(login);\n  const [token, setToken] = useContext(TokenContext);\n  console.log(access, error);\n  const { register, handleSubmit, watch } = useForm<LoginModel>();\n  const onSubmit = (submitLogin: LoginModel) => {\n    console.log(submitLogin, token);\n    setLogin(submitLogin);\n  };\n\n  if (access) {\n    setToken(access);\n    return <Redirect to={AdminBasePath} />;\n  }\n\n  console.log(watch(\"username\"));\n\n  return (\n    <div>\n      <PageTitle />\n      <form\n        className={classes.form}\n        noValidate\n        onSubmit={handleSubmit(onSubmit)}\n      >\n        <EmailField register={register} />\n        <PasswordField register={register} />\n        <SignInButton />\n        <RedirectOptions />\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","import Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport React from \"react\";\nimport Copyright from \"../../admin/moudles/common/components/CopyRight\";\nimport Login from \"./login/Login\";\n\nconst Main = () => {\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Login />\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n};\n\nexport default Main;\n","import { useEffect, useState } from \"react\";\nimport { IRequest } from \"../../providers/request/Request\";\nimport { useRequest } from \"../../providers/request/RequestProvider\";\n\nconst useApiResult = (request?: IRequest) => {\n    const [results, setResults] = useState(null);\n    const [error, setError] = useState<any>(null);\n    const requester = useRequest();\n\n    useEffect(() => {\n        let isCancelled = false;\n        if (request === undefined) {\n            return;\n        }\n        requester(request).then(async (response: Response) => {\n            if (isCancelled) {\n                return;\n            }\n            if (response.ok) {\n                setResults(await response.json());\n                setError(null);\n            } else {\n                setError(await response.text());\n            }\n        }).catch((err) => {\n            setError(err.message);\n        });\n        return () => {\n            isCancelled = true;\n        };\n    }, [request, requester]);\n    return [results, error];\n};\n\nexport default useApiResult;\n"],"sourceRoot":""}